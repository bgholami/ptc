# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
abs_builddir    = @abs_builddir@
bindir          = @bindir@
exec_prefix     = @exec_prefix@
prefix          = @prefix@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
INCLUDES        = 
CPPFLAGS        = @CPPFLAGS@
LIBS            = @LIBS@
MAKE            = @MAKE@
CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
F77             = @F77@
FFLAGS          = @FFLAGS@
F77_COMPILE     = $(F77) $(FFLAGS) $(F77INCLUDES)
F77_LINK       = $(F77)
LDFLAGS     =  @LDFLAGS@ 

VPATH = .:@srcdir@
F77INCLUDES = -I. -I../attr
F77HEADERS = addsize.h
BINDIR=${bindir}

.SUFFIXES:
.SUFFIXES: .o .c .f 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
.f.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  F77             $<" ; \
	else \
	  echo $(F77_COMPILE) -c $< ; \
	fi
	@$(F77_COMPILE) -c $<
.f:
	$(F77_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o wingetf winscale1f winattrf winerrf baseattrwinf c2f2cwinf winscale2f wingroupf winfencef winaccf winattr2f winnamef
	-@rm -f wingetf.exe winscale1f.exe winattrf.exe winerrf.exe baseattrwinf.exe c2f2cwinf.exe winscale2f.exe wingroupf.exe winfencef.exe winaccf.exe winattr2f.exe winnamef.exe
	-@rm -f core core.[0-9]*
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f *.irlog*
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f addsize.h Makefile
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile
all-redirect: winscale1f winscale2f winfencef wingetf winerrf winnamef wingroupf winaccf c2f2cwinf\
	 baseattrwinf winattrf winattr2f

wingetf: wingetf.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o wingetf wingetf.o  ../util/mtestf.o ${LIBS}
winscale1f: winscale1f.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o winscale1f winscale1f.o  ../util/mtestf.o ${LIBS}
winattrf: winattrf.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o winattrf winattrf.o  ../util/mtestf.o ${LIBS}
winerrf: winerrf.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o winerrf winerrf.o  ../util/mtestf.o ${LIBS}
baseattrwinf: baseattrwinf.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o baseattrwinf baseattrwinf.o  ../util/mtestf.o \
	${LIBS} 
c2f2cwinf: c2f2cwin.o c2f2cwinf.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o c2f2cwinf c2f2cwin.o c2f2cwinf.o  ../util/mtestf.o  \
	${LIBS} 
winscale2f: winscale2f.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o winscale2f winscale2f.o  ../util/mtestf.o ${LIBS}
wingroupf: wingroupf.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o wingroupf wingroupf.o  ../util/mtestf.o ${LIBS}
winfencef: winfencef.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o winfencef winfencef.o  ../util/mtestf.o ${LIBS}
winaccf: winaccf.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o winaccf winaccf.o  ../util/mtestf.o ${LIBS}
winattr2f: winattr2f.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o winattr2f winattr2f.o  ../util/mtestf.o ${LIBS}
winnamef: winnamef.o   @MPILIBLOC@ ../util/mtestf.o
	$(F77_LINK) $(FFLAGS) $(LDFLAGS) -o winnamef winnamef.o  ../util/mtestf.o ${LIBS}
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  winscale1f.f winscale2f.f winfencef.f wingetf.f winerrf.f winnamef.f \
	wingroupf.f winaccf.f c2f2cwin.c c2f2cwinf.f baseattrwinf.f winattrf.f winattr2f.f 
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------


# allocmem_SOURCES = allocmem.f



# bindir may be used in MPIEXEC, so make sure it is defined
testing:
	../../runtests -srcdir=$(srcdir) -tests=testlist \
			-mpiexec=@MPIEXEC@ \
		   	-xmlfile=summary.xml

../util/mtestf.o: 
	(cd ../util && $(MAKE) mtestf.o)

.POSIX:

FORCE_TARGET:

