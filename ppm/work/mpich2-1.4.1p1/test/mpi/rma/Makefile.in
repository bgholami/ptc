# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
top_srcdir      = @top_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
LIBS            = @LIBS@
MAKE            = @MAKE@
CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
C_LINK         = $(CC)
LDFLAGS     =  @LDFLAGS@ ../util/mtest.o

VPATH = .:@srcdir@
INCLUDES = -I../include -I${top_srcdir}/include

.SUFFIXES:
.SUFFIXES: .o .c 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o rmanull nullpscw selfrma transpose6 test4_am allocmem lockcontention fetchandadd_tree_am transpose7 mixedsync transpose2 attrorderwin test3 fetchandadd_tree accfence2_am test5_am test3_am transpose5 fetchandadd test1_dt test1_am put_bottom strided_putget_indexed getgroup getfence1 test4 transpose4 locknull lockcontention2 accfence1 transpose3 ircpi wintest test2 strided_acc_indexed putfidx put_base wincall baseattrwin strided_get_indexed strided_acc_onelock fetchandadd_am epochtest putpscw1 accfence2 test1 adlb_mimic1 window_creation test5 strided_acc_subarray transpose1 fkeyvalwin contig_displ winname test2_am putfence1 contention_putget contention_put
	-@rm -f rmanull.exe nullpscw.exe selfrma.exe transpose6.exe test4_am.exe allocmem.exe lockcontention.exe fetchandadd_tree_am.exe transpose7.exe mixedsync.exe transpose2.exe attrorderwin.exe test3.exe fetchandadd_tree.exe accfence2_am.exe test5_am.exe test3_am.exe transpose5.exe fetchandadd.exe test1_dt.exe test1_am.exe put_bottom.exe strided_putget_indexed.exe getgroup.exe getfence1.exe test4.exe transpose4.exe locknull.exe lockcontention2.exe accfence1.exe transpose3.exe ircpi.exe wintest.exe test2.exe strided_acc_indexed.exe putfidx.exe put_base.exe wincall.exe baseattrwin.exe strided_get_indexed.exe strided_acc_onelock.exe fetchandadd_am.exe epochtest.exe putpscw1.exe accfence2.exe test1.exe adlb_mimic1.exe window_creation.exe test5.exe strided_acc_subarray.exe transpose1.exe fkeyvalwin.exe contig_displ.exe winname.exe test2_am.exe putfence1.exe contention_putget.exe contention_put.exe
	-@rm -f core core.[0-9]*
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f *.irlog*
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile
all-redirect: allocmem ircpi test1 test2 test3 test4 test5 lockcontention lockcontention2 locknull\
	 wintest transpose1 transpose2 transpose3 transpose4 transpose5 transpose6 transpose7\
	 fetchandadd fetchandadd_tree winname putfence1 putfidx epochtest getfence1 accfence1\
	 accfence2 adlb_mimic1 putpscw1 getgroup contig_displ test1_am test2_am test3_am test4_am\
	 test5_am fetchandadd_am fetchandadd_tree_am accfence2_am test1_dt attrorderwin wincall\
	 fkeyvalwin baseattrwin nullpscw rmanull mixedsync selfrma strided_acc_onelock\
	 strided_putget_indexed strided_acc_indexed strided_acc_subarray strided_get_indexed\
	 window_creation contention_put contention_putget put_base put_bottom

rmanull: rmanull.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o rmanull rmanull.o  ${LIBS}
nullpscw: nullpscw.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o nullpscw nullpscw.o  ${LIBS}
selfrma: selfrma.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o selfrma selfrma.o  ${LIBS}
transpose6: transpose6.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o transpose6 transpose6.o  ${LIBS}
test4_am: test4_am.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test4_am test4_am.o  ${LIBS}
allocmem: allocmem.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o allocmem allocmem.o  ${LIBS}
lockcontention: lockcontention.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o lockcontention lockcontention.o  ${LIBS}
fetchandadd_tree_am: fetchandadd_tree_am.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o fetchandadd_tree_am fetchandadd_tree_am.o  ${LIBS}
transpose7: transpose7.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o transpose7 transpose7.o  ${LIBS}
mixedsync: mixedsync.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o mixedsync mixedsync.o  ${LIBS}
transpose2: transpose2.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o transpose2 transpose2.o  ${LIBS}
attrorderwin: attrorderwin.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attrorderwin attrorderwin.o  ${LIBS}
test3: test3.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test3 test3.o  ${LIBS}
fetchandadd_tree: fetchandadd_tree.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o fetchandadd_tree fetchandadd_tree.o  ${LIBS}
accfence2_am: accfence2_am.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o accfence2_am accfence2_am.o  ${LIBS}
test5_am: test5_am.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test5_am test5_am.o  ${LIBS}
test3_am: test3_am.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test3_am test3_am.o  ${LIBS}
transpose5: transpose5.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o transpose5 transpose5.o  ${LIBS}
fetchandadd: fetchandadd.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o fetchandadd fetchandadd.o  ${LIBS}
test1_dt: test1_dt.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test1_dt test1_dt.o  ${LIBS}
test1_am: test1_am.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test1_am test1_am.o  ${LIBS}
put_bottom: put_bottom.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o put_bottom put_bottom.o  ${LIBS}
strided_putget_indexed: strided_putget_indexed.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o strided_putget_indexed strided_putget_indexed.o  \
	${LIBS} 
getgroup: getgroup.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o getgroup getgroup.o  ${LIBS}
getfence1: getfence1.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o getfence1 getfence1.o  ${LIBS}
test4: test4.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test4 test4.o  ${LIBS}
transpose4: transpose4.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o transpose4 transpose4.o  ${LIBS}
locknull: locknull.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o locknull locknull.o  ${LIBS}
lockcontention2: lockcontention2.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o lockcontention2 lockcontention2.o  ${LIBS}
accfence1: accfence1.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o accfence1 accfence1.o  ${LIBS}
transpose3: transpose3.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o transpose3 transpose3.o  ${LIBS}
ircpi: ircpi.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o ircpi ircpi.o  -lm ${LIBS}
wintest: wintest.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o wintest wintest.o  ${LIBS}
test2: test2.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test2 test2.o  ${LIBS}
strided_acc_indexed: strided_acc_indexed.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o strided_acc_indexed strided_acc_indexed.o  ${LIBS}
putfidx: putfidx.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o putfidx putfidx.o  ${LIBS}
put_base: put_base.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o put_base put_base.o  ${LIBS}
wincall: wincall.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o wincall wincall.o  ${LIBS}
baseattrwin: baseattrwin.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o baseattrwin baseattrwin.o  ${LIBS}
strided_get_indexed: strided_get_indexed.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o strided_get_indexed strided_get_indexed.o  ${LIBS}
strided_acc_onelock: strided_acc_onelock.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o strided_acc_onelock strided_acc_onelock.o  ${LIBS}
fetchandadd_am: fetchandadd_am.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o fetchandadd_am fetchandadd_am.o  ${LIBS}
epochtest: epochtest.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o epochtest epochtest.o  ${LIBS}
putpscw1: putpscw1.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o putpscw1 putpscw1.o  ${LIBS}
accfence2: accfence2.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o accfence2 accfence2.o  ${LIBS}
test1: test1.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test1 test1.o  ${LIBS}
adlb_mimic1: adlb_mimic1.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o adlb_mimic1 adlb_mimic1.o  ${LIBS}
window_creation: window_creation.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o window_creation window_creation.o  ${LIBS}
test5: test5.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test5 test5.o  ${LIBS}
strided_acc_subarray: strided_acc_subarray.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o strided_acc_subarray strided_acc_subarray.o  ${LIBS}
transpose1: transpose1.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o transpose1 transpose1.o  ${LIBS}
fkeyvalwin: fkeyvalwin.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o fkeyvalwin fkeyvalwin.o  ${LIBS}
contig_displ: contig_displ.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o contig_displ contig_displ.o  ${LIBS}
winname: winname.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o winname winname.o  ${LIBS}
test2_am: test2_am.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o test2_am test2_am.o  ${LIBS}
putfence1: putfence1.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o putfence1 putfence1.o  ${LIBS}
contention_putget: contention_putget.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o contention_putget contention_putget.o  ${LIBS}
contention_put: contention_put.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o contention_put contention_put.o  ${LIBS}
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  allocmem.c ircpi.c test1.c test2.c test3.c test4.c test5.c lockcontention.c \
	lockcontention2.c locknull.c wintest.c transpose1.c transpose2.c transpose3.c \
	transpose4.c transpose5.c transpose6.c transpose7.c fetchandadd.c fetchandadd_tree.c \
	winname.c putfence1.c putfidx.c epochtest.c getfence1.c accfence1.c accfence2.c \
	adlb_mimic1.c putpscw1.c getgroup.c contig_displ.c test1_am.c test2_am.c test3_am.c \
	test4_am.c test5_am.c fetchandadd_am.c fetchandadd_tree_am.c accfence2_am.c test1_dt.c \
	attrorderwin.c wincall.c fkeyvalwin.c baseattrwin.c nullpscw.c rmanull.c mixedsync.c \
	selfrma.c strided_acc_onelock.c strided_putget_indexed.c strided_acc_indexed.c \
	strided_acc_subarray.c strided_get_indexed.c window_creation.c contention_put.c \
	contention_putget.c put_base.c put_bottom.c 
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------
# LIBS includes -lmpich and other libraries (e.g., -lpmpich if
# weak symbols are not supported)
#









../util/mtest.o:
	(cd ../util && $(MAKE) )

# A special testing target to simplify running just the rma tests
testing:
	../runtests -srcdir=$(srcdir) -tests=testlist \
		   -mpiexec=@MPIEXEC@ \
		   -xmlfile=summary.xml

.POSIX:

FORCE_TARGET:

