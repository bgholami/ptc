# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
AR_FLAGS        = @AR_FLAGS@
RANLIB          = @RANLIB@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
master_top_srcdir  = @master_top_srcdir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@

VPATH = .:@srcdir@
INCLUDES = -I${master_top_srcdir}/src/include -I${top_builddir}/src/include

.SUFFIXES:
# Some make programs complain if no suffixes are set
.SUFFIXES: .c .o
apply: 
	$(ACTION) $(ACTION_INPUT)
	for dir in impl misc pt2pt persistent onesided comm coll ; do \
		(cd $$dir && ${MAKE} apply ) ; done
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 
	-@rm -f *.lo ${srcdir}/*.lo
	for dir in impl misc pt2pt persistent onesided comm coll ; do \
		(cd $$dir && ${MAKE} clean ) ; done
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	for dir in impl misc pt2pt persistent onesided comm coll ; do \
		if [ ! -s $$dir/Makefile ] ; then continue ; fi ;\
		(cd $$dir && ${MAKE} distclean ) ; done
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile
all-redirect:
	${MAKE} all-local
	@(cd impl && ${MAKE} all )
	@(cd misc && ${MAKE} all )
	@(cd pt2pt && ${MAKE} all )
	@(cd persistent && ${MAKE} all )
	@(cd onesided && ${MAKE} all )
	@(cd comm && ${MAKE} all )
	@(cd coll && ${MAKE} all )
all-local: .libstamp0 ../../../../lib/lib${MPILIBNAME}.a
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 || exit 1; \
	fi

.libstamp0 ../../../../lib/lib${MPILIBNAME}.a: 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../../lib/lib${MPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${MPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../../lib/lib${MPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
.libstamp1 ../../../../lib/lib${MPILIBNAME}.la: 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------

.POSIX:

FORCE_TARGET:

