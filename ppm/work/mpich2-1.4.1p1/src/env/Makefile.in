# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
INSTALL         = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT  = @INSTALL_SCRIPT@
INSTALL_DATA    = @INSTALL_DATA@
MKDIR_P         = @MKDIR_P@
includedir      = @includedir@
prefix          = @prefix@
abs_builddir    = @abs_builddir@
libdir          = @libdir@
exec_prefix     = @exec_prefix@
master_top_srcdir  = @master_top_srcdir@
bindir          = @bindir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
sysconfdir      = @sysconfdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
LIBS            = @LIBS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
PMPILIBNAME     = @PMPILIBNAME@

CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
C_LINK         = $(CC)
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LDFLAGS     =  @LDFLAGS@ 

VPATH = .:@srcdir@
INCLUDES = -I../include
doc_sources = mpicc.txt mpif77.txt mpicxx.txt mpif90.txt mpiexec.txt

.SUFFIXES:
.SUFFIXES: .o .lo .c 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o mpich2version
	-@rm -f mpich2version.exe
	-@rm -f core core.[0-9]*
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f *.irlog*
	${MAKE} clean-postamble
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f mpixxx_opts.conf mpicc mpicc.conf mpicc.bash mpicxx mpicxx.conf mpicxx.bash mpif77 mpif77.conf mpif77.bash mpif90 mpif90.conf mpif90.bash Makefile
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile
all-redirect: mpich2version

mpich2version: mpich2version.o   
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o mpich2version mpich2version.o  \
	../../lib/lib@MPILIBNAME@.a ${LIBS} 
# --------------------------------------------------------------------------
# Install target
install:  install-preamble FORCE_TARGET 
	if [ ! -d ${DESTDIR}${exec_prefix} ] ; then $(MKDIR_P) ${DESTDIR}${exec_prefix} ; fi
	if [ ! -d ${DESTDIR}${prefix} ] ; then $(MKDIR_P) ${DESTDIR}${prefix} ; fi
	if [ ! -d ${DESTDIR}${bindir} ] ; then $(MKDIR_P) ${DESTDIR}${bindir} ; fi
	$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG)  mpich2version ${DESTDIR}${bindir}/mpich2version
	$(INSTALL_SCRIPT)  mpicc ${DESTDIR}${bindir}/mpicc
	if [ ! -d ${DESTDIR}${sysconfdir} ] ; then $(MKDIR_P) ${DESTDIR}${sysconfdir} ; fi
	$(INSTALL_DATA)  mpixxx_opts.conf ${DESTDIR}${sysconfdir}/mpixxx_opts.conf
	$(INSTALL_DATA)  mpicc.conf ${DESTDIR}${sysconfdir}/mpicc.conf
	if [ -s mpicxx ] ; then $(INSTALL_SCRIPT)  mpicxx ${DESTDIR}${bindir}/mpicxx ; fi
	if [ -s mpif77 ] ; then $(INSTALL_SCRIPT)  mpif77 ${DESTDIR}${bindir}/mpif77 ; fi
	if [ -s mpif90 ] ; then $(INSTALL_SCRIPT)  mpif90 ${DESTDIR}${bindir}/mpif90 ; fi
	if [ -s mpicxx.conf ] ; then $(INSTALL_DATA)  mpicxx.conf ${DESTDIR}${sysconfdir}/mpicxx.conf ; fi
	if [ -s mpif77.conf ] ; then $(INSTALL_DATA)  mpif77.conf ${DESTDIR}${sysconfdir}/mpif77.conf ; fi
	if [ -s mpif90.conf ] ; then $(INSTALL_DATA)  mpif90.conf ${DESTDIR}${sysconfdir}/mpif90.conf ; fi
	${MAKE} DESTDIR=${DESTDIR} prefix=${prefix} exec_prefix=${exec_prefix} bindir=${bindir} libdir=${libdir} includedir=${includedir} install-postamble

install-strip:
	$(MAKE) INSTALL_STRIP_FLAG=-s install
uninstall: 
	-rm -f ${DESTDIR}${bindir}/mpich2version
	-rm -f ${DESTDIR}${bindir}/mpicc
	-rm -f ${DESTDIR}${sysconfdir}/mpixxx_opts.conf
	-rm -f ${DESTDIR}${sysconfdir}/mpicc.conf
	-rm -f ${DESTDIR}${bindir}/mpicxx
	-rm -f ${DESTDIR}${bindir}/mpif77
	-rm -f ${DESTDIR}${bindir}/mpif90
	-rm -f ${DESTDIR}${sysconfdir}/mpicxx.conf
	-rm -f ${DESTDIR}${sysconfdir}/mpif77.conf
	-rm -f ${DESTDIR}${sysconfdir}/mpif90.conf
	${MAKE} uninstall-postamble
installcheck: 
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  mpich2version.c
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------



#
# 
install-preamble:
	@if [ "@prefix@" != ${DESTDIR}${prefix} -o \
	      "@includedir@" != ${includedir} -o \
	      "@libdir@" != ${libdir} ] ; then \
	      echo "Updating the compilation script for the new paths"; \
	      for pg in mpicc mpicxx mpif90 mpif77 ; do \
	         if [ ! -s $${pg} ] ; then continue ; fi ; \
	         sed -e 's%includedir=.*%includedir='${DESTDIR}${includedir}% \
	           -e 's%libdir=.*%libdir='${DESTDIR}${libdir}% \
		   -e 's%prefix=.*%prefix='${DESTDIR}${prefix}% $${pg} > $${pg}.new ;\
		 if [ ! -s $${pg}.orig ] ; then mv -f $${pg} $${pg}.orig ; fi;\
		 mv -f $${pg}.new $${pg} ;\
	         if [ ! -s $${pg}.conf ] ; then continue ; fi ; \
	         sed -e 's%includedir=.*%includedir='${DESTDIR}${includedir}% \
	           -e 's%libdir=.*%libdir='${DESTDIR}${libdir}% \
		   -e 's%prefix=.*%prefix='${DESTDIR}${prefix}% \
		   $${pg}.conf > $${pg}.conf.new ;\
		 if [ ! -s $${pg}.conf.orig ] ; then \
		    mv -f $${pg}.conf $${pg}.conf.orig ; fi;\
		 mv -f $${pg}.conf.new $${pg}.conf ;\
              done ; \
	fi	

# Provide an alias for mpicxx to support tools that assume that mpicxx is
# called mpic++ .  
# Handle the case where we are installing with different paths
install-postamble:
	if [ -x ${DESTDIR}${bindir}/mpicxx ] ; then \
	    cd ${DESTDIR}${bindir} && ln -f -s mpicxx mpic++ ; fi
	@if [ "@prefix@" != ${prefix} -o \
	      "@includedir@" != ${includedir} -o \
	      "@libdir@" != ${libdir} ] ; then \
	      echo "Restoring the compilation scripts for the old paths"; \
	      for pg in mpicc mpicxx mpif90 mpif77 ; do \
	         if [ -s $${pg}.orig ] ; then \
		   cp $${pg}.orig $${pg} ;\
		 fi ; \
	         if [ -s $${pg}.conf.orig ] ; then \
		   cp $${pg}.conf.orig $${pg}.conf ;\
		 fi ; \
              done ; \
	fi	
uninstall-postamble:
	rm -f ${DESTDIR}${bindir}/mpic++
clean-postamble:
	@for pg in mpicc mpicxx mpif90 mpif77 ; do \
	     if [ -s $${pg}.orig ] ; then rm -f $${pg}.orig ; fi ; \
	     if [ -s $${pg}.conf.orig ] ; then rm -f $${pg}.conf.orig ; fi ;\
	done

.POSIX:

FORCE_TARGET:

