# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
AR_FLAGS        = @AR_FLAGS@
RANLIB          = @RANLIB@
INSTALL         = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT  = @INSTALL_SCRIPT@
INSTALL_DATA    = @INSTALL_DATA@
MKDIR_P         = @MKDIR_P@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
master_top_srcdir  = @master_top_srcdir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
prefix          = @prefix@
includedir      = @includedir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
PMPILIBNAME     = @PMPILIBNAME@

CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
F77             = @F77@
FFLAGS          = @FFLAGS@
F77_COMPILE     = $(F77) $(FFLAGS) $(F77INCLUDES)
F77_SHL         = @F77_SHL@
F77_COMPILE_SHL = $(F77_SHL) $(FFLAGS) $(F77INCLUDES)


VPATH = .:@srcdir@
mpi_sources = sendf.c recvf.c get_countf.c bsendf.c ssendf.c rsendf.c \
	bufattachf.c bufdetachf.c isendf.c ibsendf.c issendf.c irsendf.c \
	irecvf.c waitf.c testf.c request_freef.c waitanyf.c testanyf.c \
	waitallf.c testallf.c waitsomef.c testsomef.c iprobef.c probef.c \
	cancelf.c testcancelf.c send_initf.c bsend_initf.c ssend_initf.c \
	rsend_initf.c recv_initf.c startf.c startallf.c sendrecvf.c \
	sndrcvrplf.c typecontigf.c type_vectorf.c type_hvectorf.c \
	type_indexedf.c type_hindexedf.c type_structf.c type_extentf.c \
	type_sizef.c type_lbf.c type_ubf.c type_commitf.c type_freef.c \
	get_elementsf.c packf.c unpackf.c pack_sizef.c barrierf.c bcastf.c \
	gatherf.c gathervf.c scatterf.c scattervf.c allgatherf.c allgathervf.c \
	alltoallf.c alltoallvf.c reducef.c op_createf.c op_freef.c allreducef.c \
	redscatf.c scanf.c group_sizef.c group_rankf.c grouptranksf.c \
	group_comparef.c comm_groupf.c group_unionf.c groupinterf.c \
	groupdifff.c group_inclf.c group_exclf.c grouprinclf.c grouprexclf.c \
	group_freef.c comm_sizef.c comm_rankf.c comm_comparef.c comm_dupf.c \
	comm_createf.c comm_splitf.c comm_freef.c commtesticf.c commrsizef.c \
	commrgroupf.c iccreatef.c icmergef.c keyval_freef.c attr_putf.c \
	attr_getf.c attr_deletef.c topo_testf.c cart_createf.c dims_createf.c \
	graph_createf.c graphdims_getf.c graph_getf.c cartdim_getf.c \
	cart_getf.c cart_rankf.c cart_coordsf.c grfnbcountf.c grfnbrsf.c \
	cart_shiftf.c cart_subf.c cart_mapf.c graph_mapf.c getpnamef.c \
	get_versionf.c errhcreatef.c errhsetf.c errhgetf.c errhfreef.c \
	error_stringf.c error_classf.c finalizef.c initializedf.c abortf.c \
	close_portf.c comm_acceptf.c comm_connectf.c commdiscf.c commparentf.c \
	comm_joinf.c comm_spawnf.c spawnmultf.c lookup_namef.c open_portf.c \
	publish_namef.c unpubnamef.c accumulatef.c getf.c putf.c \
	win_completef.c win_createf.c win_fencef.c win_freef.c win_get_groupf.c \
	win_lockf.c win_postf.c win_startf.c win_testf.c win_unlockf.c \
	win_waitf.c alltoallwf.c exscanf.c adderrclassf.c adderrcodef.c \
	adderrstringf.c commcallerrf.c commnewkeyf.c commdelattrf.c \
	commfreekeyf.c comm_get_attrf.c commgetnamf.c comm_set_attrf.c \
	comm_set_namef.c filecallerrf.c greqcompletef.c greqstartf.c \
	isthrmainf.c query_threadf.c statgetclf.c statsetelf.c typenewkeyf.c \
	typedelattrf.c type_dupf.c typefreekeyf.c type_get_attrf.c \
	typegetcntsf.c typegetenvf.c typegnamef.c typesetattrf.c typesetnamef.c \
	type_match_sizef.c wincallerrf.c winnewkeyf.c windelattrf.c \
	winfreekeyf.c win_get_attrf.c win_get_namef.c win_set_attrf.c \
	win_set_namef.c alloc_memf.c commcreerrf.c commgeterrf.c commseterrf.c \
	filecreerrf.c filegeterrf.c fileseterrf.c finalizedf.c free_memf.c \
	info_createf.c info_deletef.c info_dupf.c info_freef.c info_getf.c \
	infognkf.c infognthkf.c infovallenf.c info_setf.c pack_externalf.c \
	packesizef.c reqgetstatf.c typedarrayf.c typechindf.c typechvecf.c \
	typecindbf.c typecresizef.c typecstructf.c typecsubarrf.c \
	typegetextentf.c typegtextf.c unpackextf.c wincreerrf.c wingeterrf.c \
	winseterrf.c reduce_localf.c op_commutativef.c reduce_scatter_blockf.c \
	dist_graph_create_adjacentf.c dist_graph_createf.c \
	dist_graph_neighbors_countf.c dist_graph_neighborsf.c file_openf.c \
	file_closef.c file_deletef.c file_set_sizef.c file_preallocatef.c \
	file_get_sizef.c file_get_groupf.c file_get_amodef.c file_set_infof.c \
	file_get_infof.c file_set_viewf.c file_get_viewf.c file_read_atf.c \
	file_read_at_allf.c file_write_atf.c file_write_at_allf.c \
	file_iread_atf.c file_iwrite_atf.c file_readf.c file_read_allf.c \
	file_writef.c file_write_allf.c file_ireadf.c file_iwritef.c \
	file_seekf.c file_get_positionf.c file_get_byte_offsetf.c \
	file_read_sharedf.c file_write_sharedf.c file_iread_sharedf.c \
	file_iwrite_sharedf.c file_read_orderedf.c file_write_orderedf.c \
	file_seek_sharedf.c file_get_position_sharedf.c \
	file_read_at_all_beginf.c file_read_at_all_endf.c \
	file_write_at_all_beginf.c file_write_at_all_endf.c \
	file_read_all_beginf.c file_read_all_endf.c file_write_all_beginf.c \
	file_write_all_endf.c file_read_ordered_beginf.c \
	file_read_ordered_endf.c file_write_ordered_beginf.c \
	file_write_ordered_endf.c file_get_type_extentf.c register_datarepf.c \
	file_set_atomicityf.c file_get_atomicityf.c file_syncf.c initf.c \
	initthreadf.c pcontrolf.c addressf.c getaddressf.c wtimef.c wtickf.c \
	keyval_createf.c dup_fnf.c null_del_fnf.c null_copy_fnf.c \
	dup_comm_fnf.c null_comm_del_fnf.c null_comm_copy_fnf.c dup_win_fnf.c \
	null_win_del_fnf.c null_win_copy_fnf.c dup_type_fnf.c \
	null_type_del_fnf.c null_type_copy_fnf.c statusf2c.c statusc2f.c 
MPIFLIBNAME = @MPIFLIBNAME@
PMPIFLIBNAME = @PMPIFLIBNAME@
wrap_objs = _wsendf.o _wrecvf.o _wget_countf.o _wbsendf.o _wssendf.o _wrsendf.o \
	_wbufattachf.o _wbufdetachf.o _wisendf.o _wibsendf.o _wissendf.o \
	_wirsendf.o _wirecvf.o _wwaitf.o _wtestf.o _wrequest_freef.o \
	_wwaitanyf.o _wtestanyf.o _wwaitallf.o _wtestallf.o _wwaitsomef.o \
	_wtestsomef.o _wiprobef.o _wprobef.o _wcancelf.o _wtestcancelf.o \
	_wsend_initf.o _wbsend_initf.o _wssend_initf.o _wrsend_initf.o \
	_wrecv_initf.o _wstartf.o _wstartallf.o _wsendrecvf.o _wsndrcvrplf.o \
	_wtypecontigf.o _wtype_vectorf.o _wtype_hvectorf.o _wtype_indexedf.o \
	_wtype_hindexedf.o _wtype_structf.o _wtype_extentf.o _wtype_sizef.o \
	_wtype_lbf.o _wtype_ubf.o _wtype_commitf.o _wtype_freef.o \
	_wget_elementsf.o _wpackf.o _wunpackf.o _wpack_sizef.o _wbarrierf.o \
	_wbcastf.o _wgatherf.o _wgathervf.o _wscatterf.o _wscattervf.o \
	_wallgatherf.o _wallgathervf.o _walltoallf.o _walltoallvf.o _wreducef.o \
	_wop_createf.o _wop_freef.o _wallreducef.o _wredscatf.o _wscanf.o \
	_wgroup_sizef.o _wgroup_rankf.o _wgrouptranksf.o _wgroup_comparef.o \
	_wcomm_groupf.o _wgroup_unionf.o _wgroupinterf.o _wgroupdifff.o \
	_wgroup_inclf.o _wgroup_exclf.o _wgrouprinclf.o _wgrouprexclf.o \
	_wgroup_freef.o _wcomm_sizef.o _wcomm_rankf.o _wcomm_comparef.o \
	_wcomm_dupf.o _wcomm_createf.o _wcomm_splitf.o _wcomm_freef.o \
	_wcommtesticf.o _wcommrsizef.o _wcommrgroupf.o _wiccreatef.o \
	_wicmergef.o _wkeyval_freef.o _wattr_putf.o _wattr_getf.o \
	_wattr_deletef.o _wtopo_testf.o _wcart_createf.o _wdims_createf.o \
	_wgraph_createf.o _wgraphdims_getf.o _wgraph_getf.o _wcartdim_getf.o \
	_wcart_getf.o _wcart_rankf.o _wcart_coordsf.o _wgrfnbcountf.o \
	_wgrfnbrsf.o _wcart_shiftf.o _wcart_subf.o _wcart_mapf.o _wgraph_mapf.o \
	_wgetpnamef.o _wget_versionf.o _werrhcreatef.o _werrhsetf.o \
	_werrhgetf.o _werrhfreef.o _werror_stringf.o _werror_classf.o \
	_wfinalizef.o _winitializedf.o _wabortf.o _wclose_portf.o \
	_wcomm_acceptf.o _wcomm_connectf.o _wcommdiscf.o _wcommparentf.o \
	_wcomm_joinf.o _wcomm_spawnf.o _wspawnmultf.o _wlookup_namef.o \
	_wopen_portf.o _wpublish_namef.o _wunpubnamef.o _waccumulatef.o \
	_wgetf.o _wputf.o _wwin_completef.o _wwin_createf.o _wwin_fencef.o \
	_wwin_freef.o _wwin_get_groupf.o _wwin_lockf.o _wwin_postf.o \
	_wwin_startf.o _wwin_testf.o _wwin_unlockf.o _wwin_waitf.o \
	_walltoallwf.o _wexscanf.o _wadderrclassf.o _wadderrcodef.o \
	_wadderrstringf.o _wcommcallerrf.o _wcommnewkeyf.o _wcommdelattrf.o \
	_wcommfreekeyf.o _wcomm_get_attrf.o _wcommgetnamf.o _wcomm_set_attrf.o \
	_wcomm_set_namef.o _wfilecallerrf.o _wgreqcompletef.o _wgreqstartf.o \
	_wisthrmainf.o _wquery_threadf.o _wstatgetclf.o _wstatsetelf.o \
	_wtypenewkeyf.o _wtypedelattrf.o _wtype_dupf.o _wtypefreekeyf.o \
	_wtype_get_attrf.o _wtypegetcntsf.o _wtypegetenvf.o _wtypegnamef.o \
	_wtypesetattrf.o _wtypesetnamef.o _wtype_match_sizef.o _wwincallerrf.o \
	_wwinnewkeyf.o _wwindelattrf.o _wwinfreekeyf.o _wwin_get_attrf.o \
	_wwin_get_namef.o _wwin_set_attrf.o _wwin_set_namef.o _walloc_memf.o \
	_wcommcreerrf.o _wcommgeterrf.o _wcommseterrf.o _wfilecreerrf.o \
	_wfilegeterrf.o _wfileseterrf.o _wfinalizedf.o _wfree_memf.o \
	_winfo_createf.o _winfo_deletef.o _winfo_dupf.o _winfo_freef.o \
	_winfo_getf.o _winfognkf.o _winfognthkf.o _winfovallenf.o _winfo_setf.o \
	_wpack_externalf.o _wpackesizef.o _wreqgetstatf.o _wtypedarrayf.o \
	_wtypechindf.o _wtypechvecf.o _wtypecindbf.o _wtypecresizef.o \
	_wtypecstructf.o _wtypecsubarrf.o _wtypegetextentf.o _wtypegtextf.o \
	_wunpackextf.o _wwincreerrf.o _wwingeterrf.o _wwinseterrf.o \
	_wreduce_localf.o _wop_commutativef.o _wreduce_scatter_blockf.o \
	_wdist_graph_create_adjacentf.o _wdist_graph_createf.o \
	_wdist_graph_neighbors_countf.o _wdist_graph_neighborsf.o \
	_wfile_openf.o _wfile_closef.o _wfile_deletef.o _wfile_set_sizef.o \
	_wfile_preallocatef.o _wfile_get_sizef.o _wfile_get_groupf.o \
	_wfile_get_amodef.o _wfile_set_infof.o _wfile_get_infof.o \
	_wfile_set_viewf.o _wfile_get_viewf.o _wfile_read_atf.o \
	_wfile_read_at_allf.o _wfile_write_atf.o _wfile_write_at_allf.o \
	_wfile_iread_atf.o _wfile_iwrite_atf.o _wfile_readf.o \
	_wfile_read_allf.o _wfile_writef.o _wfile_write_allf.o _wfile_ireadf.o \
	_wfile_iwritef.o _wfile_seekf.o _wfile_get_positionf.o \
	_wfile_get_byte_offsetf.o _wfile_read_sharedf.o _wfile_write_sharedf.o \
	_wfile_iread_sharedf.o _wfile_iwrite_sharedf.o _wfile_read_orderedf.o \
	_wfile_write_orderedf.o _wfile_seek_sharedf.o \
	_wfile_get_position_sharedf.o _wfile_read_at_all_beginf.o \
	_wfile_read_at_all_endf.o _wfile_write_at_all_beginf.o \
	_wfile_write_at_all_endf.o _wfile_read_all_beginf.o \
	_wfile_read_all_endf.o _wfile_write_all_beginf.o \
	_wfile_write_all_endf.o _wfile_read_ordered_beginf.o \
	_wfile_read_ordered_endf.o _wfile_write_ordered_beginf.o \
	_wfile_write_ordered_endf.o _wfile_get_type_extentf.o \
	_wregister_datarepf.o _wfile_set_atomicityf.o _wfile_get_atomicityf.o \
	_wfile_syncf.o _winitf.o _winitthreadf.o _wpcontrolf.o _waddressf.o \
	_wgetaddressf.o _wwtimef.o _wwtickf.o _wkeyval_createf.o _wdup_fnf.o \
	_wnull_del_fnf.o _wnull_copy_fnf.o _wdup_comm_fnf.o \
	_wnull_comm_del_fnf.o _wnull_comm_copy_fnf.o _wdup_win_fnf.o \
	_wnull_win_del_fnf.o _wnull_win_copy_fnf.o _wdup_type_fnf.o \
	_wnull_type_del_fnf.o _wnull_type_copy_fnf.o _wstatusf2c.o \
	_wstatusc2f.o 
FWRAPNAME = @FWRAPNAME@
HEADERS = fproto.h mpi_fortimpl.h
INCLUDES = -I../../include -I${master_top_srcdir}/src/include -I${master_top_srcdir}/src/binding/f77 
doc_sources = 

.SUFFIXES:
.SUFFIXES: .o .lo .c .f .o 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
.f.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  F77             $<" ; \
	else \
	  echo $(F77_COMPILE) -c $< ; \
	fi
	@$(F77_COMPILE) -c $<
.f.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  F77             $<" ; \
	else \
	  echo $(F77_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(F77_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.f:
	$(F77_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 .libstamp2 .libstamp3 .libstamp4 .libstamp5 
	-@rm -f *.lo ${srcdir}/*.lo
distclean:  clean distclean-local distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile mpif.h setbotf.f setbot.c
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile
all-redirect: .libstamp0 ../../../lib/lib${FWRAPNAME}.a .libstamp2\
	 ../../../lib/lib${MPIFLIBNAME}.a
	@if [ -n "@NO_WEAK_SYM@" ] ; then \
	    ${MAKE} .libstamp4 || exit 1; \
	fi
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 || exit 1; \
	    ${MAKE} .libstamp3 || exit 1; \
	    if [ -n "@NO_WEAK_SYM@" ] ; then \
	        ${MAKE} .libstamp5 || exit 1; \
	    fi ; \
	fi

.libstamp0 ../../../lib/lib${FWRAPNAME}.a: _wsendf.o _wrecvf.o _wget_countf.o _wbsendf.o \
	_wssendf.o _wrsendf.o _wbufattachf.o _wbufdetachf.o _wisendf.o _wibsendf.o _wissendf.o \
	_wirsendf.o _wirecvf.o _wwaitf.o _wtestf.o _wrequest_freef.o _wwaitanyf.o _wtestanyf.o \
	_wwaitallf.o _wtestallf.o _wwaitsomef.o _wtestsomef.o _wiprobef.o _wprobef.o _wcancelf.o \
	_wtestcancelf.o _wsend_initf.o _wbsend_initf.o _wssend_initf.o _wrsend_initf.o \
	_wrecv_initf.o _wstartf.o _wstartallf.o _wsendrecvf.o _wsndrcvrplf.o _wtypecontigf.o \
	_wtype_vectorf.o _wtype_hvectorf.o _wtype_indexedf.o _wtype_hindexedf.o _wtype_structf.o \
	_wtype_extentf.o _wtype_sizef.o _wtype_lbf.o _wtype_ubf.o _wtype_commitf.o _wtype_freef.o \
	_wget_elementsf.o _wpackf.o _wunpackf.o _wpack_sizef.o _wbarrierf.o _wbcastf.o \
	_wgatherf.o _wgathervf.o _wscatterf.o _wscattervf.o _wallgatherf.o _wallgathervf.o \
	_walltoallf.o _walltoallvf.o _wreducef.o _wop_createf.o _wop_freef.o _wallreducef.o \
	_wredscatf.o _wscanf.o _wgroup_sizef.o _wgroup_rankf.o _wgrouptranksf.o \
	_wgroup_comparef.o _wcomm_groupf.o _wgroup_unionf.o _wgroupinterf.o _wgroupdifff.o \
	_wgroup_inclf.o _wgroup_exclf.o _wgrouprinclf.o _wgrouprexclf.o _wgroup_freef.o \
	_wcomm_sizef.o _wcomm_rankf.o _wcomm_comparef.o _wcomm_dupf.o _wcomm_createf.o \
	_wcomm_splitf.o _wcomm_freef.o _wcommtesticf.o _wcommrsizef.o _wcommrgroupf.o \
	_wiccreatef.o _wicmergef.o _wkeyval_freef.o _wattr_putf.o _wattr_getf.o _wattr_deletef.o \
	_wtopo_testf.o _wcart_createf.o _wdims_createf.o _wgraph_createf.o _wgraphdims_getf.o \
	_wgraph_getf.o _wcartdim_getf.o _wcart_getf.o _wcart_rankf.o _wcart_coordsf.o \
	_wgrfnbcountf.o _wgrfnbrsf.o _wcart_shiftf.o _wcart_subf.o _wcart_mapf.o _wgraph_mapf.o \
	_wgetpnamef.o _wget_versionf.o _werrhcreatef.o _werrhsetf.o _werrhgetf.o _werrhfreef.o \
	_werror_stringf.o _werror_classf.o _wfinalizef.o _winitializedf.o _wabortf.o \
	_wclose_portf.o _wcomm_acceptf.o _wcomm_connectf.o _wcommdiscf.o _wcommparentf.o \
	_wcomm_joinf.o _wcomm_spawnf.o _wspawnmultf.o _wlookup_namef.o _wopen_portf.o \
	_wpublish_namef.o _wunpubnamef.o _waccumulatef.o _wgetf.o _wputf.o _wwin_completef.o \
	_wwin_createf.o _wwin_fencef.o _wwin_freef.o _wwin_get_groupf.o _wwin_lockf.o \
	_wwin_postf.o _wwin_startf.o _wwin_testf.o _wwin_unlockf.o _wwin_waitf.o _walltoallwf.o \
	_wexscanf.o _wadderrclassf.o _wadderrcodef.o _wadderrstringf.o _wcommcallerrf.o \
	_wcommnewkeyf.o _wcommdelattrf.o _wcommfreekeyf.o _wcomm_get_attrf.o _wcommgetnamf.o \
	_wcomm_set_attrf.o _wcomm_set_namef.o _wfilecallerrf.o _wgreqcompletef.o _wgreqstartf.o \
	_wisthrmainf.o _wquery_threadf.o _wstatgetclf.o _wstatsetelf.o _wtypenewkeyf.o \
	_wtypedelattrf.o _wtype_dupf.o _wtypefreekeyf.o _wtype_get_attrf.o _wtypegetcntsf.o \
	_wtypegetenvf.o _wtypegnamef.o _wtypesetattrf.o _wtypesetnamef.o _wtype_match_sizef.o \
	_wwincallerrf.o _wwinnewkeyf.o _wwindelattrf.o _wwinfreekeyf.o _wwin_get_attrf.o \
	_wwin_get_namef.o _wwin_set_attrf.o _wwin_set_namef.o _walloc_memf.o _wcommcreerrf.o \
	_wcommgeterrf.o _wcommseterrf.o _wfilecreerrf.o _wfilegeterrf.o _wfileseterrf.o \
	_wfinalizedf.o _wfree_memf.o _winfo_createf.o _winfo_deletef.o _winfo_dupf.o \
	_winfo_freef.o _winfo_getf.o _winfognkf.o _winfognthkf.o _winfovallenf.o _winfo_setf.o \
	_wpack_externalf.o _wpackesizef.o _wreqgetstatf.o _wtypedarrayf.o _wtypechindf.o \
	_wtypechvecf.o _wtypecindbf.o _wtypecresizef.o _wtypecstructf.o _wtypecsubarrf.o \
	_wtypegetextentf.o _wtypegtextf.o _wunpackextf.o _wwincreerrf.o _wwingeterrf.o \
	_wwinseterrf.o _wreduce_localf.o _wop_commutativef.o _wreduce_scatter_blockf.o \
	_wdist_graph_create_adjacentf.o _wdist_graph_createf.o _wdist_graph_neighbors_countf.o \
	_wdist_graph_neighborsf.o _wfile_openf.o _wfile_closef.o _wfile_deletef.o \
	_wfile_set_sizef.o _wfile_preallocatef.o _wfile_get_sizef.o _wfile_get_groupf.o \
	_wfile_get_amodef.o _wfile_set_infof.o _wfile_get_infof.o _wfile_set_viewf.o \
	_wfile_get_viewf.o _wfile_read_atf.o _wfile_read_at_allf.o _wfile_write_atf.o \
	_wfile_write_at_allf.o _wfile_iread_atf.o _wfile_iwrite_atf.o _wfile_readf.o \
	_wfile_read_allf.o _wfile_writef.o _wfile_write_allf.o _wfile_ireadf.o _wfile_iwritef.o \
	_wfile_seekf.o _wfile_get_positionf.o _wfile_get_byte_offsetf.o _wfile_read_sharedf.o \
	_wfile_write_sharedf.o _wfile_iread_sharedf.o _wfile_iwrite_sharedf.o \
	_wfile_read_orderedf.o _wfile_write_orderedf.o _wfile_seek_sharedf.o \
	_wfile_get_position_sharedf.o _wfile_read_at_all_beginf.o _wfile_read_at_all_endf.o \
	_wfile_write_at_all_beginf.o _wfile_write_at_all_endf.o _wfile_read_all_beginf.o \
	_wfile_read_all_endf.o _wfile_write_all_beginf.o _wfile_write_all_endf.o \
	_wfile_read_ordered_beginf.o _wfile_read_ordered_endf.o _wfile_write_ordered_beginf.o \
	_wfile_write_ordered_endf.o _wfile_get_type_extentf.o _wregister_datarepf.o \
	_wfile_set_atomicityf.o _wfile_get_atomicityf.o _wfile_syncf.o _winitf.o _winitthreadf.o \
	_wpcontrolf.o _waddressf.o _wgetaddressf.o _wwtimef.o _wwtickf.o _wkeyval_createf.o \
	_wdup_fnf.o _wnull_del_fnf.o _wnull_copy_fnf.o _wdup_comm_fnf.o _wnull_comm_del_fnf.o \
	_wnull_comm_copy_fnf.o _wdup_win_fnf.o _wnull_win_del_fnf.o _wnull_win_copy_fnf.o \
	_wdup_type_fnf.o _wnull_type_del_fnf.o _wnull_type_copy_fnf.o _wstatusf2c.o _wstatusc2f.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../lib/lib${FWRAPNAME}.a $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../lib/lib${FWRAPNAME}.a $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../lib/lib${FWRAPNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${FWRAPNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../lib/lib${FWRAPNAME}.a ; \
	fi
	@${RANLIB} ../../../lib/lib${FWRAPNAME}.a
	date > .libstamp0
.libstamp2 ../../../lib/lib${MPIFLIBNAME}.a: sendf.o recvf.o get_countf.o bsendf.o ssendf.o \
	rsendf.o bufattachf.o bufdetachf.o isendf.o ibsendf.o issendf.o irsendf.o irecvf.o \
	waitf.o testf.o request_freef.o waitanyf.o testanyf.o waitallf.o testallf.o waitsomef.o \
	testsomef.o iprobef.o probef.o cancelf.o testcancelf.o send_initf.o bsend_initf.o \
	ssend_initf.o rsend_initf.o recv_initf.o startf.o startallf.o sendrecvf.o sndrcvrplf.o \
	typecontigf.o type_vectorf.o type_hvectorf.o type_indexedf.o type_hindexedf.o \
	type_structf.o type_extentf.o type_sizef.o type_lbf.o type_ubf.o type_commitf.o \
	type_freef.o get_elementsf.o packf.o unpackf.o pack_sizef.o barrierf.o bcastf.o gatherf.o \
	gathervf.o scatterf.o scattervf.o allgatherf.o allgathervf.o alltoallf.o alltoallvf.o \
	reducef.o op_createf.o op_freef.o allreducef.o redscatf.o scanf.o group_sizef.o \
	group_rankf.o grouptranksf.o group_comparef.o comm_groupf.o group_unionf.o groupinterf.o \
	groupdifff.o group_inclf.o group_exclf.o grouprinclf.o grouprexclf.o group_freef.o \
	comm_sizef.o comm_rankf.o comm_comparef.o comm_dupf.o comm_createf.o comm_splitf.o \
	comm_freef.o commtesticf.o commrsizef.o commrgroupf.o iccreatef.o icmergef.o \
	keyval_freef.o attr_putf.o attr_getf.o attr_deletef.o topo_testf.o cart_createf.o \
	dims_createf.o graph_createf.o graphdims_getf.o graph_getf.o cartdim_getf.o cart_getf.o \
	cart_rankf.o cart_coordsf.o grfnbcountf.o grfnbrsf.o cart_shiftf.o cart_subf.o \
	cart_mapf.o graph_mapf.o getpnamef.o get_versionf.o errhcreatef.o errhsetf.o errhgetf.o \
	errhfreef.o error_stringf.o error_classf.o finalizef.o initializedf.o abortf.o \
	close_portf.o comm_acceptf.o comm_connectf.o commdiscf.o commparentf.o comm_joinf.o \
	comm_spawnf.o spawnmultf.o lookup_namef.o open_portf.o publish_namef.o unpubnamef.o \
	accumulatef.o getf.o putf.o win_completef.o win_createf.o win_fencef.o win_freef.o \
	win_get_groupf.o win_lockf.o win_postf.o win_startf.o win_testf.o win_unlockf.o \
	win_waitf.o alltoallwf.o exscanf.o adderrclassf.o adderrcodef.o adderrstringf.o \
	commcallerrf.o commnewkeyf.o commdelattrf.o commfreekeyf.o comm_get_attrf.o commgetnamf.o \
	comm_set_attrf.o comm_set_namef.o filecallerrf.o greqcompletef.o greqstartf.o \
	isthrmainf.o query_threadf.o statgetclf.o statsetelf.o typenewkeyf.o typedelattrf.o \
	type_dupf.o typefreekeyf.o type_get_attrf.o typegetcntsf.o typegetenvf.o typegnamef.o \
	typesetattrf.o typesetnamef.o type_match_sizef.o wincallerrf.o winnewkeyf.o windelattrf.o \
	winfreekeyf.o win_get_attrf.o win_get_namef.o win_set_attrf.o win_set_namef.o \
	alloc_memf.o commcreerrf.o commgeterrf.o commseterrf.o filecreerrf.o filegeterrf.o \
	fileseterrf.o finalizedf.o free_memf.o info_createf.o info_deletef.o info_dupf.o \
	info_freef.o info_getf.o infognkf.o infognthkf.o infovallenf.o info_setf.o \
	pack_externalf.o packesizef.o reqgetstatf.o typedarrayf.o typechindf.o typechvecf.o \
	typecindbf.o typecresizef.o typecstructf.o typecsubarrf.o typegetextentf.o typegtextf.o \
	unpackextf.o wincreerrf.o wingeterrf.o winseterrf.o reduce_localf.o op_commutativef.o \
	reduce_scatter_blockf.o dist_graph_create_adjacentf.o dist_graph_createf.o \
	dist_graph_neighbors_countf.o dist_graph_neighborsf.o file_openf.o file_closef.o \
	file_deletef.o file_set_sizef.o file_preallocatef.o file_get_sizef.o file_get_groupf.o \
	file_get_amodef.o file_set_infof.o file_get_infof.o file_set_viewf.o file_get_viewf.o \
	file_read_atf.o file_read_at_allf.o file_write_atf.o file_write_at_allf.o \
	file_iread_atf.o file_iwrite_atf.o file_readf.o file_read_allf.o file_writef.o \
	file_write_allf.o file_ireadf.o file_iwritef.o file_seekf.o file_get_positionf.o \
	file_get_byte_offsetf.o file_read_sharedf.o file_write_sharedf.o file_iread_sharedf.o \
	file_iwrite_sharedf.o file_read_orderedf.o file_write_orderedf.o file_seek_sharedf.o \
	file_get_position_sharedf.o file_read_at_all_beginf.o file_read_at_all_endf.o \
	file_write_at_all_beginf.o file_write_at_all_endf.o file_read_all_beginf.o \
	file_read_all_endf.o file_write_all_beginf.o file_write_all_endf.o \
	file_read_ordered_beginf.o file_read_ordered_endf.o file_write_ordered_beginf.o \
	file_write_ordered_endf.o file_get_type_extentf.o register_datarepf.o \
	file_set_atomicityf.o file_get_atomicityf.o file_syncf.o initf.o initthreadf.o \
	pcontrolf.o addressf.o getaddressf.o wtimef.o wtickf.o keyval_createf.o dup_fnf.o \
	null_del_fnf.o null_copy_fnf.o dup_comm_fnf.o null_comm_del_fnf.o null_comm_copy_fnf.o \
	dup_win_fnf.o null_win_del_fnf.o null_win_copy_fnf.o dup_type_fnf.o null_type_del_fnf.o \
	null_type_copy_fnf.o statusf2c.o statusc2f.o setbot.o setbotf.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../lib/lib${MPIFLIBNAME}.a $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../lib/lib${MPIFLIBNAME}.a $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../lib/lib${MPIFLIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${MPIFLIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../lib/lib${MPIFLIBNAME}.a ; \
	fi
	@${RANLIB} ../../../lib/lib${MPIFLIBNAME}.a
	date > .libstamp2
.libstamp1 ../../../lib/lib${FWRAPNAME}.la: _wsendf.lo _wrecvf.lo _wget_countf.lo _wbsendf.lo \
	_wssendf.lo _wrsendf.lo _wbufattachf.lo _wbufdetachf.lo _wisendf.lo _wibsendf.lo \
	_wissendf.lo _wirsendf.lo _wirecvf.lo _wwaitf.lo _wtestf.lo _wrequest_freef.lo \
	_wwaitanyf.lo _wtestanyf.lo _wwaitallf.lo _wtestallf.lo _wwaitsomef.lo _wtestsomef.lo \
	_wiprobef.lo _wprobef.lo _wcancelf.lo _wtestcancelf.lo _wsend_initf.lo _wbsend_initf.lo \
	_wssend_initf.lo _wrsend_initf.lo _wrecv_initf.lo _wstartf.lo _wstartallf.lo \
	_wsendrecvf.lo _wsndrcvrplf.lo _wtypecontigf.lo _wtype_vectorf.lo _wtype_hvectorf.lo \
	_wtype_indexedf.lo _wtype_hindexedf.lo _wtype_structf.lo _wtype_extentf.lo \
	_wtype_sizef.lo _wtype_lbf.lo _wtype_ubf.lo _wtype_commitf.lo _wtype_freef.lo \
	_wget_elementsf.lo _wpackf.lo _wunpackf.lo _wpack_sizef.lo _wbarrierf.lo _wbcastf.lo \
	_wgatherf.lo _wgathervf.lo _wscatterf.lo _wscattervf.lo _wallgatherf.lo _wallgathervf.lo \
	_walltoallf.lo _walltoallvf.lo _wreducef.lo _wop_createf.lo _wop_freef.lo _wallreducef.lo \
	_wredscatf.lo _wscanf.lo _wgroup_sizef.lo _wgroup_rankf.lo _wgrouptranksf.lo \
	_wgroup_comparef.lo _wcomm_groupf.lo _wgroup_unionf.lo _wgroupinterf.lo _wgroupdifff.lo \
	_wgroup_inclf.lo _wgroup_exclf.lo _wgrouprinclf.lo _wgrouprexclf.lo _wgroup_freef.lo \
	_wcomm_sizef.lo _wcomm_rankf.lo _wcomm_comparef.lo _wcomm_dupf.lo _wcomm_createf.lo \
	_wcomm_splitf.lo _wcomm_freef.lo _wcommtesticf.lo _wcommrsizef.lo _wcommrgroupf.lo \
	_wiccreatef.lo _wicmergef.lo _wkeyval_freef.lo _wattr_putf.lo _wattr_getf.lo \
	_wattr_deletef.lo _wtopo_testf.lo _wcart_createf.lo _wdims_createf.lo _wgraph_createf.lo \
	_wgraphdims_getf.lo _wgraph_getf.lo _wcartdim_getf.lo _wcart_getf.lo _wcart_rankf.lo \
	_wcart_coordsf.lo _wgrfnbcountf.lo _wgrfnbrsf.lo _wcart_shiftf.lo _wcart_subf.lo \
	_wcart_mapf.lo _wgraph_mapf.lo _wgetpnamef.lo _wget_versionf.lo _werrhcreatef.lo \
	_werrhsetf.lo _werrhgetf.lo _werrhfreef.lo _werror_stringf.lo _werror_classf.lo \
	_wfinalizef.lo _winitializedf.lo _wabortf.lo _wclose_portf.lo _wcomm_acceptf.lo \
	_wcomm_connectf.lo _wcommdiscf.lo _wcommparentf.lo _wcomm_joinf.lo _wcomm_spawnf.lo \
	_wspawnmultf.lo _wlookup_namef.lo _wopen_portf.lo _wpublish_namef.lo _wunpubnamef.lo \
	_waccumulatef.lo _wgetf.lo _wputf.lo _wwin_completef.lo _wwin_createf.lo _wwin_fencef.lo \
	_wwin_freef.lo _wwin_get_groupf.lo _wwin_lockf.lo _wwin_postf.lo _wwin_startf.lo \
	_wwin_testf.lo _wwin_unlockf.lo _wwin_waitf.lo _walltoallwf.lo _wexscanf.lo \
	_wadderrclassf.lo _wadderrcodef.lo _wadderrstringf.lo _wcommcallerrf.lo _wcommnewkeyf.lo \
	_wcommdelattrf.lo _wcommfreekeyf.lo _wcomm_get_attrf.lo _wcommgetnamf.lo \
	_wcomm_set_attrf.lo _wcomm_set_namef.lo _wfilecallerrf.lo _wgreqcompletef.lo \
	_wgreqstartf.lo _wisthrmainf.lo _wquery_threadf.lo _wstatgetclf.lo _wstatsetelf.lo \
	_wtypenewkeyf.lo _wtypedelattrf.lo _wtype_dupf.lo _wtypefreekeyf.lo _wtype_get_attrf.lo \
	_wtypegetcntsf.lo _wtypegetenvf.lo _wtypegnamef.lo _wtypesetattrf.lo _wtypesetnamef.lo \
	_wtype_match_sizef.lo _wwincallerrf.lo _wwinnewkeyf.lo _wwindelattrf.lo _wwinfreekeyf.lo \
	_wwin_get_attrf.lo _wwin_get_namef.lo _wwin_set_attrf.lo _wwin_set_namef.lo \
	_walloc_memf.lo _wcommcreerrf.lo _wcommgeterrf.lo _wcommseterrf.lo _wfilecreerrf.lo \
	_wfilegeterrf.lo _wfileseterrf.lo _wfinalizedf.lo _wfree_memf.lo _winfo_createf.lo \
	_winfo_deletef.lo _winfo_dupf.lo _winfo_freef.lo _winfo_getf.lo _winfognkf.lo \
	_winfognthkf.lo _winfovallenf.lo _winfo_setf.lo _wpack_externalf.lo _wpackesizef.lo \
	_wreqgetstatf.lo _wtypedarrayf.lo _wtypechindf.lo _wtypechvecf.lo _wtypecindbf.lo \
	_wtypecresizef.lo _wtypecstructf.lo _wtypecsubarrf.lo _wtypegetextentf.lo _wtypegtextf.lo \
	_wunpackextf.lo _wwincreerrf.lo _wwingeterrf.lo _wwinseterrf.lo _wreduce_localf.lo \
	_wop_commutativef.lo _wreduce_scatter_blockf.lo _wdist_graph_create_adjacentf.lo \
	_wdist_graph_createf.lo _wdist_graph_neighbors_countf.lo _wdist_graph_neighborsf.lo \
	_wfile_openf.lo _wfile_closef.lo _wfile_deletef.lo _wfile_set_sizef.lo \
	_wfile_preallocatef.lo _wfile_get_sizef.lo _wfile_get_groupf.lo _wfile_get_amodef.lo \
	_wfile_set_infof.lo _wfile_get_infof.lo _wfile_set_viewf.lo _wfile_get_viewf.lo \
	_wfile_read_atf.lo _wfile_read_at_allf.lo _wfile_write_atf.lo _wfile_write_at_allf.lo \
	_wfile_iread_atf.lo _wfile_iwrite_atf.lo _wfile_readf.lo _wfile_read_allf.lo \
	_wfile_writef.lo _wfile_write_allf.lo _wfile_ireadf.lo _wfile_iwritef.lo _wfile_seekf.lo \
	_wfile_get_positionf.lo _wfile_get_byte_offsetf.lo _wfile_read_sharedf.lo \
	_wfile_write_sharedf.lo _wfile_iread_sharedf.lo _wfile_iwrite_sharedf.lo \
	_wfile_read_orderedf.lo _wfile_write_orderedf.lo _wfile_seek_sharedf.lo \
	_wfile_get_position_sharedf.lo _wfile_read_at_all_beginf.lo _wfile_read_at_all_endf.lo \
	_wfile_write_at_all_beginf.lo _wfile_write_at_all_endf.lo _wfile_read_all_beginf.lo \
	_wfile_read_all_endf.lo _wfile_write_all_beginf.lo _wfile_write_all_endf.lo \
	_wfile_read_ordered_beginf.lo _wfile_read_ordered_endf.lo _wfile_write_ordered_beginf.lo \
	_wfile_write_ordered_endf.lo _wfile_get_type_extentf.lo _wregister_datarepf.lo \
	_wfile_set_atomicityf.lo _wfile_get_atomicityf.lo _wfile_syncf.lo _winitf.lo \
	_winitthreadf.lo _wpcontrolf.lo _waddressf.lo _wgetaddressf.lo _wwtimef.lo _wwtickf.lo \
	_wkeyval_createf.lo _wdup_fnf.lo _wnull_del_fnf.lo _wnull_copy_fnf.lo _wdup_comm_fnf.lo \
	_wnull_comm_del_fnf.lo _wnull_comm_copy_fnf.lo _wdup_win_fnf.lo _wnull_win_del_fnf.lo \
	_wnull_win_copy_fnf.lo _wdup_type_fnf.lo _wnull_type_del_fnf.lo _wnull_type_copy_fnf.lo \
	_wstatusf2c.lo _wstatusc2f.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../lib/lib${FWRAPNAME}.la $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../lib/lib${FWRAPNAME}.la $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../lib/lib${FWRAPNAME}.la $?
	date > .libstamp1
.libstamp3 ../../../lib/lib${MPIFLIBNAME}.la: sendf.lo recvf.lo get_countf.lo bsendf.lo ssendf.lo \
	rsendf.lo bufattachf.lo bufdetachf.lo isendf.lo ibsendf.lo issendf.lo irsendf.lo \
	irecvf.lo waitf.lo testf.lo request_freef.lo waitanyf.lo testanyf.lo waitallf.lo \
	testallf.lo waitsomef.lo testsomef.lo iprobef.lo probef.lo cancelf.lo testcancelf.lo \
	send_initf.lo bsend_initf.lo ssend_initf.lo rsend_initf.lo recv_initf.lo startf.lo \
	startallf.lo sendrecvf.lo sndrcvrplf.lo typecontigf.lo type_vectorf.lo type_hvectorf.lo \
	type_indexedf.lo type_hindexedf.lo type_structf.lo type_extentf.lo type_sizef.lo \
	type_lbf.lo type_ubf.lo type_commitf.lo type_freef.lo get_elementsf.lo packf.lo \
	unpackf.lo pack_sizef.lo barrierf.lo bcastf.lo gatherf.lo gathervf.lo scatterf.lo \
	scattervf.lo allgatherf.lo allgathervf.lo alltoallf.lo alltoallvf.lo reducef.lo \
	op_createf.lo op_freef.lo allreducef.lo redscatf.lo scanf.lo group_sizef.lo \
	group_rankf.lo grouptranksf.lo group_comparef.lo comm_groupf.lo group_unionf.lo \
	groupinterf.lo groupdifff.lo group_inclf.lo group_exclf.lo grouprinclf.lo grouprexclf.lo \
	group_freef.lo comm_sizef.lo comm_rankf.lo comm_comparef.lo comm_dupf.lo comm_createf.lo \
	comm_splitf.lo comm_freef.lo commtesticf.lo commrsizef.lo commrgroupf.lo iccreatef.lo \
	icmergef.lo keyval_freef.lo attr_putf.lo attr_getf.lo attr_deletef.lo topo_testf.lo \
	cart_createf.lo dims_createf.lo graph_createf.lo graphdims_getf.lo graph_getf.lo \
	cartdim_getf.lo cart_getf.lo cart_rankf.lo cart_coordsf.lo grfnbcountf.lo grfnbrsf.lo \
	cart_shiftf.lo cart_subf.lo cart_mapf.lo graph_mapf.lo getpnamef.lo get_versionf.lo \
	errhcreatef.lo errhsetf.lo errhgetf.lo errhfreef.lo error_stringf.lo error_classf.lo \
	finalizef.lo initializedf.lo abortf.lo close_portf.lo comm_acceptf.lo comm_connectf.lo \
	commdiscf.lo commparentf.lo comm_joinf.lo comm_spawnf.lo spawnmultf.lo lookup_namef.lo \
	open_portf.lo publish_namef.lo unpubnamef.lo accumulatef.lo getf.lo putf.lo \
	win_completef.lo win_createf.lo win_fencef.lo win_freef.lo win_get_groupf.lo win_lockf.lo \
	win_postf.lo win_startf.lo win_testf.lo win_unlockf.lo win_waitf.lo alltoallwf.lo \
	exscanf.lo adderrclassf.lo adderrcodef.lo adderrstringf.lo commcallerrf.lo commnewkeyf.lo \
	commdelattrf.lo commfreekeyf.lo comm_get_attrf.lo commgetnamf.lo comm_set_attrf.lo \
	comm_set_namef.lo filecallerrf.lo greqcompletef.lo greqstartf.lo isthrmainf.lo \
	query_threadf.lo statgetclf.lo statsetelf.lo typenewkeyf.lo typedelattrf.lo type_dupf.lo \
	typefreekeyf.lo type_get_attrf.lo typegetcntsf.lo typegetenvf.lo typegnamef.lo \
	typesetattrf.lo typesetnamef.lo type_match_sizef.lo wincallerrf.lo winnewkeyf.lo \
	windelattrf.lo winfreekeyf.lo win_get_attrf.lo win_get_namef.lo win_set_attrf.lo \
	win_set_namef.lo alloc_memf.lo commcreerrf.lo commgeterrf.lo commseterrf.lo \
	filecreerrf.lo filegeterrf.lo fileseterrf.lo finalizedf.lo free_memf.lo info_createf.lo \
	info_deletef.lo info_dupf.lo info_freef.lo info_getf.lo infognkf.lo infognthkf.lo \
	infovallenf.lo info_setf.lo pack_externalf.lo packesizef.lo reqgetstatf.lo typedarrayf.lo \
	typechindf.lo typechvecf.lo typecindbf.lo typecresizef.lo typecstructf.lo typecsubarrf.lo \
	typegetextentf.lo typegtextf.lo unpackextf.lo wincreerrf.lo wingeterrf.lo winseterrf.lo \
	reduce_localf.lo op_commutativef.lo reduce_scatter_blockf.lo \
	dist_graph_create_adjacentf.lo dist_graph_createf.lo dist_graph_neighbors_countf.lo \
	dist_graph_neighborsf.lo file_openf.lo file_closef.lo file_deletef.lo file_set_sizef.lo \
	file_preallocatef.lo file_get_sizef.lo file_get_groupf.lo file_get_amodef.lo \
	file_set_infof.lo file_get_infof.lo file_set_viewf.lo file_get_viewf.lo file_read_atf.lo \
	file_read_at_allf.lo file_write_atf.lo file_write_at_allf.lo file_iread_atf.lo \
	file_iwrite_atf.lo file_readf.lo file_read_allf.lo file_writef.lo file_write_allf.lo \
	file_ireadf.lo file_iwritef.lo file_seekf.lo file_get_positionf.lo \
	file_get_byte_offsetf.lo file_read_sharedf.lo file_write_sharedf.lo file_iread_sharedf.lo \
	file_iwrite_sharedf.lo file_read_orderedf.lo file_write_orderedf.lo file_seek_sharedf.lo \
	file_get_position_sharedf.lo file_read_at_all_beginf.lo file_read_at_all_endf.lo \
	file_write_at_all_beginf.lo file_write_at_all_endf.lo file_read_all_beginf.lo \
	file_read_all_endf.lo file_write_all_beginf.lo file_write_all_endf.lo \
	file_read_ordered_beginf.lo file_read_ordered_endf.lo file_write_ordered_beginf.lo \
	file_write_ordered_endf.lo file_get_type_extentf.lo register_datarepf.lo \
	file_set_atomicityf.lo file_get_atomicityf.lo file_syncf.lo initf.lo initthreadf.lo \
	pcontrolf.lo addressf.lo getaddressf.lo wtimef.lo wtickf.lo keyval_createf.lo dup_fnf.lo \
	null_del_fnf.lo null_copy_fnf.lo dup_comm_fnf.lo null_comm_del_fnf.lo \
	null_comm_copy_fnf.lo dup_win_fnf.lo null_win_del_fnf.lo null_win_copy_fnf.lo \
	dup_type_fnf.lo null_type_del_fnf.lo null_type_copy_fnf.lo statusf2c.lo statusc2f.lo \
	setbot.lo setbotf.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../lib/lib${MPIFLIBNAME}.la $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../lib/lib${MPIFLIBNAME}.la $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../lib/lib${MPIFLIBNAME}.la $?
	date > .libstamp3

# --------------------------------------------------------------------------
.libstamp4: _sendf.o _recvf.o _get_countf.o _bsendf.o _ssendf.o _rsendf.o _bufattachf.o _bufdetachf.o \
	_isendf.o _ibsendf.o _issendf.o _irsendf.o _irecvf.o _waitf.o _testf.o _request_freef.o \
	_waitanyf.o _testanyf.o _waitallf.o _testallf.o _waitsomef.o _testsomef.o _iprobef.o \
	_probef.o _cancelf.o _testcancelf.o _send_initf.o _bsend_initf.o _ssend_initf.o \
	_rsend_initf.o _recv_initf.o _startf.o _startallf.o _sendrecvf.o _sndrcvrplf.o \
	_typecontigf.o _type_vectorf.o _type_hvectorf.o _type_indexedf.o _type_hindexedf.o \
	_type_structf.o _type_extentf.o _type_sizef.o _type_lbf.o _type_ubf.o _type_commitf.o \
	_type_freef.o _get_elementsf.o _packf.o _unpackf.o _pack_sizef.o _barrierf.o _bcastf.o \
	_gatherf.o _gathervf.o _scatterf.o _scattervf.o _allgatherf.o _allgathervf.o _alltoallf.o \
	_alltoallvf.o _reducef.o _op_createf.o _op_freef.o _allreducef.o _redscatf.o _scanf.o \
	_group_sizef.o _group_rankf.o _grouptranksf.o _group_comparef.o _comm_groupf.o \
	_group_unionf.o _groupinterf.o _groupdifff.o _group_inclf.o _group_exclf.o _grouprinclf.o \
	_grouprexclf.o _group_freef.o _comm_sizef.o _comm_rankf.o _comm_comparef.o _comm_dupf.o \
	_comm_createf.o _comm_splitf.o _comm_freef.o _commtesticf.o _commrsizef.o _commrgroupf.o \
	_iccreatef.o _icmergef.o _keyval_freef.o _attr_putf.o _attr_getf.o _attr_deletef.o \
	_topo_testf.o _cart_createf.o _dims_createf.o _graph_createf.o _graphdims_getf.o \
	_graph_getf.o _cartdim_getf.o _cart_getf.o _cart_rankf.o _cart_coordsf.o _grfnbcountf.o \
	_grfnbrsf.o _cart_shiftf.o _cart_subf.o _cart_mapf.o _graph_mapf.o _getpnamef.o \
	_get_versionf.o _errhcreatef.o _errhsetf.o _errhgetf.o _errhfreef.o _error_stringf.o \
	_error_classf.o _finalizef.o _initializedf.o _abortf.o _close_portf.o _comm_acceptf.o \
	_comm_connectf.o _commdiscf.o _commparentf.o _comm_joinf.o _comm_spawnf.o _spawnmultf.o \
	_lookup_namef.o _open_portf.o _publish_namef.o _unpubnamef.o _accumulatef.o _getf.o \
	_putf.o _win_completef.o _win_createf.o _win_fencef.o _win_freef.o _win_get_groupf.o \
	_win_lockf.o _win_postf.o _win_startf.o _win_testf.o _win_unlockf.o _win_waitf.o \
	_alltoallwf.o _exscanf.o _adderrclassf.o _adderrcodef.o _adderrstringf.o _commcallerrf.o \
	_commnewkeyf.o _commdelattrf.o _commfreekeyf.o _comm_get_attrf.o _commgetnamf.o \
	_comm_set_attrf.o _comm_set_namef.o _filecallerrf.o _greqcompletef.o _greqstartf.o \
	_isthrmainf.o _query_threadf.o _statgetclf.o _statsetelf.o _typenewkeyf.o _typedelattrf.o \
	_type_dupf.o _typefreekeyf.o _type_get_attrf.o _typegetcntsf.o _typegetenvf.o \
	_typegnamef.o _typesetattrf.o _typesetnamef.o _type_match_sizef.o _wincallerrf.o \
	_winnewkeyf.o _windelattrf.o _winfreekeyf.o _win_get_attrf.o _win_get_namef.o \
	_win_set_attrf.o _win_set_namef.o _alloc_memf.o _commcreerrf.o _commgeterrf.o \
	_commseterrf.o _filecreerrf.o _filegeterrf.o _fileseterrf.o _finalizedf.o _free_memf.o \
	_info_createf.o _info_deletef.o _info_dupf.o _info_freef.o _info_getf.o _infognkf.o \
	_infognthkf.o _infovallenf.o _info_setf.o _pack_externalf.o _packesizef.o _reqgetstatf.o \
	_typedarrayf.o _typechindf.o _typechvecf.o _typecindbf.o _typecresizef.o _typecstructf.o \
	_typecsubarrf.o _typegetextentf.o _typegtextf.o _unpackextf.o _wincreerrf.o _wingeterrf.o \
	_winseterrf.o _reduce_localf.o _op_commutativef.o _reduce_scatter_blockf.o \
	_dist_graph_create_adjacentf.o _dist_graph_createf.o _dist_graph_neighbors_countf.o \
	_dist_graph_neighborsf.o _file_openf.o _file_closef.o _file_deletef.o _file_set_sizef.o \
	_file_preallocatef.o _file_get_sizef.o _file_get_groupf.o _file_get_amodef.o \
	_file_set_infof.o _file_get_infof.o _file_set_viewf.o _file_get_viewf.o _file_read_atf.o \
	_file_read_at_allf.o _file_write_atf.o _file_write_at_allf.o _file_iread_atf.o \
	_file_iwrite_atf.o _file_readf.o _file_read_allf.o _file_writef.o _file_write_allf.o \
	_file_ireadf.o _file_iwritef.o _file_seekf.o _file_get_positionf.o \
	_file_get_byte_offsetf.o _file_read_sharedf.o _file_write_sharedf.o _file_iread_sharedf.o \
	_file_iwrite_sharedf.o _file_read_orderedf.o _file_write_orderedf.o _file_seek_sharedf.o \
	_file_get_position_sharedf.o _file_read_at_all_beginf.o _file_read_at_all_endf.o \
	_file_write_at_all_beginf.o _file_write_at_all_endf.o _file_read_all_beginf.o \
	_file_read_all_endf.o _file_write_all_beginf.o _file_write_all_endf.o \
	_file_read_ordered_beginf.o _file_read_ordered_endf.o _file_write_ordered_beginf.o \
	_file_write_ordered_endf.o _file_get_type_extentf.o _register_datarepf.o \
	_file_set_atomicityf.o _file_get_atomicityf.o _file_syncf.o _initf.o _initthreadf.o \
	_pcontrolf.o _addressf.o _getaddressf.o _wtimef.o _wtickf.o _keyval_createf.o _dup_fnf.o \
	_null_del_fnf.o _null_copy_fnf.o _dup_comm_fnf.o _null_comm_del_fnf.o \
	_null_comm_copy_fnf.o _dup_win_fnf.o _null_win_del_fnf.o _null_win_copy_fnf.o \
	_dup_type_fnf.o _null_type_del_fnf.o _null_type_copy_fnf.o _statusf2c.o _statusc2f.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../lib/lib${PMPIFLIBNAME}.a $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../lib/lib${PMPIFLIBNAME}.a $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../lib/lib${PMPIFLIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${PMPIFLIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../lib/lib${PMPIFLIBNAME}.a ; \
	fi
	@${RANLIB} ../../../lib/lib${PMPIFLIBNAME}.a
	date > .libstamp4
.libstamp5: _sendf.lo _recvf.lo _get_countf.lo _bsendf.lo _ssendf.lo _rsendf.lo _bufattachf.lo _bufdetachf.lo \
	_isendf.lo _ibsendf.lo _issendf.lo _irsendf.lo _irecvf.lo _waitf.lo _testf.lo \
	_request_freef.lo _waitanyf.lo _testanyf.lo _waitallf.lo _testallf.lo _waitsomef.lo \
	_testsomef.lo _iprobef.lo _probef.lo _cancelf.lo _testcancelf.lo _send_initf.lo \
	_bsend_initf.lo _ssend_initf.lo _rsend_initf.lo _recv_initf.lo _startf.lo _startallf.lo \
	_sendrecvf.lo _sndrcvrplf.lo _typecontigf.lo _type_vectorf.lo _type_hvectorf.lo \
	_type_indexedf.lo _type_hindexedf.lo _type_structf.lo _type_extentf.lo _type_sizef.lo \
	_type_lbf.lo _type_ubf.lo _type_commitf.lo _type_freef.lo _get_elementsf.lo _packf.lo \
	_unpackf.lo _pack_sizef.lo _barrierf.lo _bcastf.lo _gatherf.lo _gathervf.lo _scatterf.lo \
	_scattervf.lo _allgatherf.lo _allgathervf.lo _alltoallf.lo _alltoallvf.lo _reducef.lo \
	_op_createf.lo _op_freef.lo _allreducef.lo _redscatf.lo _scanf.lo _group_sizef.lo \
	_group_rankf.lo _grouptranksf.lo _group_comparef.lo _comm_groupf.lo _group_unionf.lo \
	_groupinterf.lo _groupdifff.lo _group_inclf.lo _group_exclf.lo _grouprinclf.lo \
	_grouprexclf.lo _group_freef.lo _comm_sizef.lo _comm_rankf.lo _comm_comparef.lo \
	_comm_dupf.lo _comm_createf.lo _comm_splitf.lo _comm_freef.lo _commtesticf.lo \
	_commrsizef.lo _commrgroupf.lo _iccreatef.lo _icmergef.lo _keyval_freef.lo _attr_putf.lo \
	_attr_getf.lo _attr_deletef.lo _topo_testf.lo _cart_createf.lo _dims_createf.lo \
	_graph_createf.lo _graphdims_getf.lo _graph_getf.lo _cartdim_getf.lo _cart_getf.lo \
	_cart_rankf.lo _cart_coordsf.lo _grfnbcountf.lo _grfnbrsf.lo _cart_shiftf.lo \
	_cart_subf.lo _cart_mapf.lo _graph_mapf.lo _getpnamef.lo _get_versionf.lo _errhcreatef.lo \
	_errhsetf.lo _errhgetf.lo _errhfreef.lo _error_stringf.lo _error_classf.lo _finalizef.lo \
	_initializedf.lo _abortf.lo _close_portf.lo _comm_acceptf.lo _comm_connectf.lo \
	_commdiscf.lo _commparentf.lo _comm_joinf.lo _comm_spawnf.lo _spawnmultf.lo \
	_lookup_namef.lo _open_portf.lo _publish_namef.lo _unpubnamef.lo _accumulatef.lo _getf.lo \
	_putf.lo _win_completef.lo _win_createf.lo _win_fencef.lo _win_freef.lo \
	_win_get_groupf.lo _win_lockf.lo _win_postf.lo _win_startf.lo _win_testf.lo \
	_win_unlockf.lo _win_waitf.lo _alltoallwf.lo _exscanf.lo _adderrclassf.lo _adderrcodef.lo \
	_adderrstringf.lo _commcallerrf.lo _commnewkeyf.lo _commdelattrf.lo _commfreekeyf.lo \
	_comm_get_attrf.lo _commgetnamf.lo _comm_set_attrf.lo _comm_set_namef.lo _filecallerrf.lo \
	_greqcompletef.lo _greqstartf.lo _isthrmainf.lo _query_threadf.lo _statgetclf.lo \
	_statsetelf.lo _typenewkeyf.lo _typedelattrf.lo _type_dupf.lo _typefreekeyf.lo \
	_type_get_attrf.lo _typegetcntsf.lo _typegetenvf.lo _typegnamef.lo _typesetattrf.lo \
	_typesetnamef.lo _type_match_sizef.lo _wincallerrf.lo _winnewkeyf.lo _windelattrf.lo \
	_winfreekeyf.lo _win_get_attrf.lo _win_get_namef.lo _win_set_attrf.lo _win_set_namef.lo \
	_alloc_memf.lo _commcreerrf.lo _commgeterrf.lo _commseterrf.lo _filecreerrf.lo \
	_filegeterrf.lo _fileseterrf.lo _finalizedf.lo _free_memf.lo _info_createf.lo \
	_info_deletef.lo _info_dupf.lo _info_freef.lo _info_getf.lo _infognkf.lo _infognthkf.lo \
	_infovallenf.lo _info_setf.lo _pack_externalf.lo _packesizef.lo _reqgetstatf.lo \
	_typedarrayf.lo _typechindf.lo _typechvecf.lo _typecindbf.lo _typecresizef.lo \
	_typecstructf.lo _typecsubarrf.lo _typegetextentf.lo _typegtextf.lo _unpackextf.lo \
	_wincreerrf.lo _wingeterrf.lo _winseterrf.lo _reduce_localf.lo _op_commutativef.lo \
	_reduce_scatter_blockf.lo _dist_graph_create_adjacentf.lo _dist_graph_createf.lo \
	_dist_graph_neighbors_countf.lo _dist_graph_neighborsf.lo _file_openf.lo _file_closef.lo \
	_file_deletef.lo _file_set_sizef.lo _file_preallocatef.lo _file_get_sizef.lo \
	_file_get_groupf.lo _file_get_amodef.lo _file_set_infof.lo _file_get_infof.lo \
	_file_set_viewf.lo _file_get_viewf.lo _file_read_atf.lo _file_read_at_allf.lo \
	_file_write_atf.lo _file_write_at_allf.lo _file_iread_atf.lo _file_iwrite_atf.lo \
	_file_readf.lo _file_read_allf.lo _file_writef.lo _file_write_allf.lo _file_ireadf.lo \
	_file_iwritef.lo _file_seekf.lo _file_get_positionf.lo _file_get_byte_offsetf.lo \
	_file_read_sharedf.lo _file_write_sharedf.lo _file_iread_sharedf.lo \
	_file_iwrite_sharedf.lo _file_read_orderedf.lo _file_write_orderedf.lo \
	_file_seek_sharedf.lo _file_get_position_sharedf.lo _file_read_at_all_beginf.lo \
	_file_read_at_all_endf.lo _file_write_at_all_beginf.lo _file_write_at_all_endf.lo \
	_file_read_all_beginf.lo _file_read_all_endf.lo _file_write_all_beginf.lo \
	_file_write_all_endf.lo _file_read_ordered_beginf.lo _file_read_ordered_endf.lo \
	_file_write_ordered_beginf.lo _file_write_ordered_endf.lo _file_get_type_extentf.lo \
	_register_datarepf.lo _file_set_atomicityf.lo _file_get_atomicityf.lo _file_syncf.lo \
	_initf.lo _initthreadf.lo _pcontrolf.lo _addressf.lo _getaddressf.lo _wtimef.lo \
	_wtickf.lo _keyval_createf.lo _dup_fnf.lo _null_del_fnf.lo _null_copy_fnf.lo \
	_dup_comm_fnf.lo _null_comm_del_fnf.lo _null_comm_copy_fnf.lo _dup_win_fnf.lo \
	_null_win_del_fnf.lo _null_win_copy_fnf.lo _dup_type_fnf.lo _null_type_del_fnf.lo \
	_null_type_copy_fnf.lo _statusf2c.lo _statusc2f.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} ../../../lib/lib${PMPIFLIBNAME}.la $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} ../../../lib/lib${PMPIFLIBNAME}.la $? ; \
	fi
	@${AR} ${AR_FLAGS} ../../../lib/lib${PMPIFLIBNAME}.la $?
	date > .libstamp5
_sendf.o: sendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/sendf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/sendf.c -o _sendf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/sendf.c -o _sendf.o
_sendf.lo: sendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/sendf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/sendf.c -o _sendf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/sendf.c -o _sendf.lo
_recvf.o: recvf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/recvf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/recvf.c -o _recvf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/recvf.c -o _recvf.o
_recvf.lo: recvf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/recvf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/recvf.c -o _recvf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/recvf.c -o _recvf.lo
_get_countf.o: get_countf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/get_countf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/get_countf.c -o _get_countf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/get_countf.c -o _get_countf.o
_get_countf.lo: get_countf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/get_countf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/get_countf.c -o _get_countf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/get_countf.c -o _get_countf.lo
_bsendf.o: bsendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/bsendf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bsendf.c -o _bsendf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bsendf.c -o _bsendf.o
_bsendf.lo: bsendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/bsendf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bsendf.c -o _bsendf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bsendf.c -o _bsendf.lo
_ssendf.o: ssendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/ssendf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/ssendf.c -o _ssendf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/ssendf.c -o _ssendf.o
_ssendf.lo: ssendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/ssendf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/ssendf.c -o _ssendf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/ssendf.c -o _ssendf.lo
_rsendf.o: rsendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/rsendf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/rsendf.c -o _rsendf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/rsendf.c -o _rsendf.o
_rsendf.lo: rsendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/rsendf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/rsendf.c -o _rsendf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/rsendf.c -o _rsendf.lo
_bufattachf.o: bufattachf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/bufattachf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bufattachf.c -o _bufattachf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bufattachf.c -o _bufattachf.o
_bufattachf.lo: bufattachf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/bufattachf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bufattachf.c -o _bufattachf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bufattachf.c -o _bufattachf.lo
_bufdetachf.o: bufdetachf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/bufdetachf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bufdetachf.c -o _bufdetachf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bufdetachf.c -o _bufdetachf.o
_bufdetachf.lo: bufdetachf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/bufdetachf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bufdetachf.c -o _bufdetachf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bufdetachf.c -o _bufdetachf.lo
_isendf.o: isendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/isendf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/isendf.c -o _isendf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/isendf.c -o _isendf.o
_isendf.lo: isendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/isendf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/isendf.c -o _isendf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/isendf.c -o _isendf.lo
_ibsendf.o: ibsendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/ibsendf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/ibsendf.c -o _ibsendf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/ibsendf.c -o _ibsendf.o
_ibsendf.lo: ibsendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/ibsendf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/ibsendf.c -o _ibsendf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/ibsendf.c -o _ibsendf.lo
_issendf.o: issendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/issendf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/issendf.c -o _issendf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/issendf.c -o _issendf.o
_issendf.lo: issendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/issendf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/issendf.c -o _issendf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/issendf.c -o _issendf.lo
_irsendf.o: irsendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/irsendf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/irsendf.c -o _irsendf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/irsendf.c -o _irsendf.o
_irsendf.lo: irsendf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/irsendf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/irsendf.c -o _irsendf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/irsendf.c -o _irsendf.lo
_irecvf.o: irecvf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/irecvf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/irecvf.c -o _irecvf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/irecvf.c -o _irecvf.o
_irecvf.lo: irecvf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/irecvf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/irecvf.c -o _irecvf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/irecvf.c -o _irecvf.lo
_waitf.o: waitf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/waitf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/waitf.c -o _waitf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/waitf.c -o _waitf.o
_waitf.lo: waitf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/waitf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/waitf.c -o _waitf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/waitf.c -o _waitf.lo
_testf.o: testf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/testf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/testf.c -o _testf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/testf.c -o _testf.o
_testf.lo: testf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/testf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/testf.c -o _testf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/testf.c -o _testf.lo
_request_freef.o: request_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/request_freef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/request_freef.c -o _request_freef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/request_freef.c -o _request_freef.o
_request_freef.lo: request_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/request_freef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/request_freef.c -o _request_freef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/request_freef.c -o _request_freef.lo
_waitanyf.o: waitanyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/waitanyf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/waitanyf.c -o _waitanyf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/waitanyf.c -o _waitanyf.o
_waitanyf.lo: waitanyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/waitanyf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/waitanyf.c -o _waitanyf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/waitanyf.c -o _waitanyf.lo
_testanyf.o: testanyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/testanyf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/testanyf.c -o _testanyf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/testanyf.c -o _testanyf.o
_testanyf.lo: testanyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/testanyf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/testanyf.c -o _testanyf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/testanyf.c -o _testanyf.lo
_waitallf.o: waitallf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/waitallf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/waitallf.c -o _waitallf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/waitallf.c -o _waitallf.o
_waitallf.lo: waitallf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/waitallf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/waitallf.c -o _waitallf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/waitallf.c -o _waitallf.lo
_testallf.o: testallf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/testallf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/testallf.c -o _testallf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/testallf.c -o _testallf.o
_testallf.lo: testallf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/testallf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/testallf.c -o _testallf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/testallf.c -o _testallf.lo
_waitsomef.o: waitsomef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/waitsomef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/waitsomef.c -o _waitsomef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/waitsomef.c -o _waitsomef.o
_waitsomef.lo: waitsomef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/waitsomef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/waitsomef.c -o _waitsomef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/waitsomef.c -o _waitsomef.lo
_testsomef.o: testsomef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/testsomef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/testsomef.c -o _testsomef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/testsomef.c -o _testsomef.o
_testsomef.lo: testsomef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/testsomef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/testsomef.c -o _testsomef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/testsomef.c -o _testsomef.lo
_iprobef.o: iprobef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/iprobef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/iprobef.c -o _iprobef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/iprobef.c -o _iprobef.o
_iprobef.lo: iprobef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/iprobef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/iprobef.c -o _iprobef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/iprobef.c -o _iprobef.lo
_probef.o: probef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/probef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/probef.c -o _probef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/probef.c -o _probef.o
_probef.lo: probef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/probef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/probef.c -o _probef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/probef.c -o _probef.lo
_cancelf.o: cancelf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/cancelf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cancelf.c -o _cancelf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cancelf.c -o _cancelf.o
_cancelf.lo: cancelf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/cancelf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cancelf.c -o _cancelf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cancelf.c -o _cancelf.lo
_testcancelf.o: testcancelf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/testcancelf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/testcancelf.c -o _testcancelf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/testcancelf.c -o _testcancelf.o
_testcancelf.lo: testcancelf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/testcancelf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/testcancelf.c -o _testcancelf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/testcancelf.c -o _testcancelf.lo
_send_initf.o: send_initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/send_initf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/send_initf.c -o _send_initf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/send_initf.c -o _send_initf.o
_send_initf.lo: send_initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/send_initf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/send_initf.c -o _send_initf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/send_initf.c -o _send_initf.lo
_bsend_initf.o: bsend_initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/bsend_initf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bsend_initf.c -o _bsend_initf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bsend_initf.c -o _bsend_initf.o
_bsend_initf.lo: bsend_initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/bsend_initf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bsend_initf.c -o _bsend_initf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bsend_initf.c -o _bsend_initf.lo
_ssend_initf.o: ssend_initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/ssend_initf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/ssend_initf.c -o _ssend_initf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/ssend_initf.c -o _ssend_initf.o
_ssend_initf.lo: ssend_initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/ssend_initf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/ssend_initf.c -o _ssend_initf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/ssend_initf.c -o _ssend_initf.lo
_rsend_initf.o: rsend_initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/rsend_initf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/rsend_initf.c -o _rsend_initf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/rsend_initf.c -o _rsend_initf.o
_rsend_initf.lo: rsend_initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/rsend_initf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/rsend_initf.c -o _rsend_initf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/rsend_initf.c -o _rsend_initf.lo
_recv_initf.o: recv_initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/recv_initf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/recv_initf.c -o _recv_initf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/recv_initf.c -o _recv_initf.o
_recv_initf.lo: recv_initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/recv_initf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/recv_initf.c -o _recv_initf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/recv_initf.c -o _recv_initf.lo
_startf.o: startf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/startf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/startf.c -o _startf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/startf.c -o _startf.o
_startf.lo: startf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/startf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/startf.c -o _startf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/startf.c -o _startf.lo
_startallf.o: startallf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/startallf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/startallf.c -o _startallf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/startallf.c -o _startallf.o
_startallf.lo: startallf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/startallf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/startallf.c -o _startallf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/startallf.c -o _startallf.lo
_sendrecvf.o: sendrecvf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/sendrecvf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/sendrecvf.c -o _sendrecvf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/sendrecvf.c -o _sendrecvf.o
_sendrecvf.lo: sendrecvf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/sendrecvf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/sendrecvf.c -o _sendrecvf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/sendrecvf.c -o _sendrecvf.lo
_sndrcvrplf.o: sndrcvrplf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/sndrcvrplf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/sndrcvrplf.c -o _sndrcvrplf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/sndrcvrplf.c -o _sndrcvrplf.o
_sndrcvrplf.lo: sndrcvrplf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/sndrcvrplf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/sndrcvrplf.c -o _sndrcvrplf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/sndrcvrplf.c -o _sndrcvrplf.lo
_typecontigf.o: typecontigf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typecontigf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typecontigf.c -o _typecontigf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typecontigf.c -o _typecontigf.o
_typecontigf.lo: typecontigf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typecontigf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typecontigf.c -o _typecontigf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typecontigf.c -o _typecontigf.lo
_type_vectorf.o: type_vectorf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_vectorf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_vectorf.c -o _type_vectorf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_vectorf.c -o _type_vectorf.o
_type_vectorf.lo: type_vectorf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_vectorf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_vectorf.c -o _type_vectorf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_vectorf.c -o _type_vectorf.lo
_type_hvectorf.o: type_hvectorf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_hvectorf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_hvectorf.c -o _type_hvectorf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_hvectorf.c -o _type_hvectorf.o
_type_hvectorf.lo: type_hvectorf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_hvectorf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_hvectorf.c -o _type_hvectorf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_hvectorf.c -o _type_hvectorf.lo
_type_indexedf.o: type_indexedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_indexedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_indexedf.c -o _type_indexedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_indexedf.c -o _type_indexedf.o
_type_indexedf.lo: type_indexedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_indexedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_indexedf.c -o _type_indexedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_indexedf.c -o _type_indexedf.lo
_type_hindexedf.o: type_hindexedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_hindexedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_hindexedf.c -o _type_hindexedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_hindexedf.c -o _type_hindexedf.o
_type_hindexedf.lo: type_hindexedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_hindexedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_hindexedf.c -o _type_hindexedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_hindexedf.c -o _type_hindexedf.lo
_type_structf.o: type_structf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_structf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_structf.c -o _type_structf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_structf.c -o _type_structf.o
_type_structf.lo: type_structf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_structf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_structf.c -o _type_structf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_structf.c -o _type_structf.lo
_type_extentf.o: type_extentf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_extentf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_extentf.c -o _type_extentf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_extentf.c -o _type_extentf.o
_type_extentf.lo: type_extentf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_extentf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_extentf.c -o _type_extentf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_extentf.c -o _type_extentf.lo
_type_sizef.o: type_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_sizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_sizef.c -o _type_sizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_sizef.c -o _type_sizef.o
_type_sizef.lo: type_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_sizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_sizef.c -o _type_sizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_sizef.c -o _type_sizef.lo
_type_lbf.o: type_lbf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_lbf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_lbf.c -o _type_lbf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_lbf.c -o _type_lbf.o
_type_lbf.lo: type_lbf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_lbf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_lbf.c -o _type_lbf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_lbf.c -o _type_lbf.lo
_type_ubf.o: type_ubf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_ubf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_ubf.c -o _type_ubf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_ubf.c -o _type_ubf.o
_type_ubf.lo: type_ubf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_ubf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_ubf.c -o _type_ubf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_ubf.c -o _type_ubf.lo
_type_commitf.o: type_commitf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_commitf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_commitf.c -o _type_commitf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_commitf.c -o _type_commitf.o
_type_commitf.lo: type_commitf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_commitf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_commitf.c -o _type_commitf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_commitf.c -o _type_commitf.lo
_type_freef.o: type_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_freef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_freef.c -o _type_freef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_freef.c -o _type_freef.o
_type_freef.lo: type_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_freef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_freef.c -o _type_freef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_freef.c -o _type_freef.lo
_get_elementsf.o: get_elementsf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/get_elementsf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/get_elementsf.c -o _get_elementsf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/get_elementsf.c -o _get_elementsf.o
_get_elementsf.lo: get_elementsf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/get_elementsf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/get_elementsf.c -o _get_elementsf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/get_elementsf.c -o _get_elementsf.lo
_packf.o: packf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/packf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/packf.c -o _packf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/packf.c -o _packf.o
_packf.lo: packf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/packf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/packf.c -o _packf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/packf.c -o _packf.lo
_unpackf.o: unpackf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/unpackf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/unpackf.c -o _unpackf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/unpackf.c -o _unpackf.o
_unpackf.lo: unpackf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/unpackf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/unpackf.c -o _unpackf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/unpackf.c -o _unpackf.lo
_pack_sizef.o: pack_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/pack_sizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/pack_sizef.c -o _pack_sizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/pack_sizef.c -o _pack_sizef.o
_pack_sizef.lo: pack_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/pack_sizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/pack_sizef.c -o _pack_sizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/pack_sizef.c -o _pack_sizef.lo
_barrierf.o: barrierf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/barrierf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/barrierf.c -o _barrierf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/barrierf.c -o _barrierf.o
_barrierf.lo: barrierf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/barrierf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/barrierf.c -o _barrierf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/barrierf.c -o _barrierf.lo
_bcastf.o: bcastf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/bcastf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bcastf.c -o _bcastf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/bcastf.c -o _bcastf.o
_bcastf.lo: bcastf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/bcastf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bcastf.c -o _bcastf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/bcastf.c -o _bcastf.lo
_gatherf.o: gatherf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/gatherf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/gatherf.c -o _gatherf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/gatherf.c -o _gatherf.o
_gatherf.lo: gatherf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/gatherf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/gatherf.c -o _gatherf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/gatherf.c -o _gatherf.lo
_gathervf.o: gathervf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/gathervf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/gathervf.c -o _gathervf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/gathervf.c -o _gathervf.o
_gathervf.lo: gathervf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/gathervf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/gathervf.c -o _gathervf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/gathervf.c -o _gathervf.lo
_scatterf.o: scatterf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/scatterf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scatterf.c -o _scatterf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scatterf.c -o _scatterf.o
_scatterf.lo: scatterf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/scatterf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/scatterf.c -o _scatterf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/scatterf.c -o _scatterf.lo
_scattervf.o: scattervf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/scattervf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scattervf.c -o _scattervf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scattervf.c -o _scattervf.o
_scattervf.lo: scattervf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/scattervf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/scattervf.c -o _scattervf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/scattervf.c -o _scattervf.lo
_allgatherf.o: allgatherf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/allgatherf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allgatherf.c -o _allgatherf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allgatherf.c -o _allgatherf.o
_allgatherf.lo: allgatherf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/allgatherf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/allgatherf.c -o _allgatherf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/allgatherf.c -o _allgatherf.lo
_allgathervf.o: allgathervf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/allgathervf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allgathervf.c -o _allgathervf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allgathervf.c -o _allgathervf.o
_allgathervf.lo: allgathervf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/allgathervf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/allgathervf.c -o _allgathervf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/allgathervf.c -o _allgathervf.lo
_alltoallf.o: alltoallf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/alltoallf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallf.c -o _alltoallf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallf.c -o _alltoallf.o
_alltoallf.lo: alltoallf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/alltoallf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallf.c -o _alltoallf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallf.c -o _alltoallf.lo
_alltoallvf.o: alltoallvf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/alltoallvf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallvf.c -o _alltoallvf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallvf.c -o _alltoallvf.o
_alltoallvf.lo: alltoallvf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/alltoallvf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallvf.c -o _alltoallvf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallvf.c -o _alltoallvf.lo
_reducef.o: reducef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/reducef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/reducef.c -o _reducef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/reducef.c -o _reducef.o
_reducef.lo: reducef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/reducef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/reducef.c -o _reducef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/reducef.c -o _reducef.lo
_op_createf.o: op_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/op_createf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/op_createf.c -o _op_createf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/op_createf.c -o _op_createf.o
_op_createf.lo: op_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/op_createf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/op_createf.c -o _op_createf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/op_createf.c -o _op_createf.lo
_op_freef.o: op_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/op_freef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/op_freef.c -o _op_freef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/op_freef.c -o _op_freef.o
_op_freef.lo: op_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/op_freef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/op_freef.c -o _op_freef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/op_freef.c -o _op_freef.lo
_allreducef.o: allreducef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/allreducef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allreducef.c -o _allreducef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/allreducef.c -o _allreducef.o
_allreducef.lo: allreducef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/allreducef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/allreducef.c -o _allreducef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/allreducef.c -o _allreducef.lo
_redscatf.o: redscatf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/redscatf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/redscatf.c -o _redscatf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/redscatf.c -o _redscatf.o
_redscatf.lo: redscatf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/redscatf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/redscatf.c -o _redscatf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/redscatf.c -o _redscatf.lo
_scanf.o: scanf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/scanf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scanf.c -o _scanf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/scanf.c -o _scanf.o
_scanf.lo: scanf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/scanf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/scanf.c -o _scanf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/scanf.c -o _scanf.lo
_group_sizef.o: group_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/group_sizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_sizef.c -o _group_sizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_sizef.c -o _group_sizef.o
_group_sizef.lo: group_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/group_sizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_sizef.c -o _group_sizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_sizef.c -o _group_sizef.lo
_group_rankf.o: group_rankf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/group_rankf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_rankf.c -o _group_rankf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_rankf.c -o _group_rankf.o
_group_rankf.lo: group_rankf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/group_rankf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_rankf.c -o _group_rankf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_rankf.c -o _group_rankf.lo
_grouptranksf.o: grouptranksf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/grouptranksf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/grouptranksf.c -o _grouptranksf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/grouptranksf.c -o _grouptranksf.o
_grouptranksf.lo: grouptranksf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/grouptranksf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/grouptranksf.c -o _grouptranksf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/grouptranksf.c -o _grouptranksf.lo
_group_comparef.o: group_comparef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/group_comparef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_comparef.c -o _group_comparef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_comparef.c -o _group_comparef.o
_group_comparef.lo: group_comparef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/group_comparef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_comparef.c -o _group_comparef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_comparef.c -o _group_comparef.lo
_comm_groupf.o: comm_groupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_groupf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_groupf.c -o _comm_groupf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_groupf.c -o _comm_groupf.o
_comm_groupf.lo: comm_groupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_groupf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_groupf.c -o _comm_groupf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_groupf.c -o _comm_groupf.lo
_group_unionf.o: group_unionf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/group_unionf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_unionf.c -o _group_unionf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_unionf.c -o _group_unionf.o
_group_unionf.lo: group_unionf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/group_unionf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_unionf.c -o _group_unionf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_unionf.c -o _group_unionf.lo
_groupinterf.o: groupinterf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/groupinterf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/groupinterf.c -o _groupinterf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/groupinterf.c -o _groupinterf.o
_groupinterf.lo: groupinterf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/groupinterf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/groupinterf.c -o _groupinterf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/groupinterf.c -o _groupinterf.lo
_groupdifff.o: groupdifff.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/groupdifff.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/groupdifff.c -o _groupdifff.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/groupdifff.c -o _groupdifff.o
_groupdifff.lo: groupdifff.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/groupdifff.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/groupdifff.c -o _groupdifff.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/groupdifff.c -o _groupdifff.lo
_group_inclf.o: group_inclf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/group_inclf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_inclf.c -o _group_inclf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_inclf.c -o _group_inclf.o
_group_inclf.lo: group_inclf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/group_inclf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_inclf.c -o _group_inclf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_inclf.c -o _group_inclf.lo
_group_exclf.o: group_exclf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/group_exclf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_exclf.c -o _group_exclf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_exclf.c -o _group_exclf.o
_group_exclf.lo: group_exclf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/group_exclf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_exclf.c -o _group_exclf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_exclf.c -o _group_exclf.lo
_grouprinclf.o: grouprinclf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/grouprinclf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/grouprinclf.c -o _grouprinclf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/grouprinclf.c -o _grouprinclf.o
_grouprinclf.lo: grouprinclf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/grouprinclf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/grouprinclf.c -o _grouprinclf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/grouprinclf.c -o _grouprinclf.lo
_grouprexclf.o: grouprexclf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/grouprexclf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/grouprexclf.c -o _grouprexclf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/grouprexclf.c -o _grouprexclf.o
_grouprexclf.lo: grouprexclf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/grouprexclf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/grouprexclf.c -o _grouprexclf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/grouprexclf.c -o _grouprexclf.lo
_group_freef.o: group_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/group_freef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_freef.c -o _group_freef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/group_freef.c -o _group_freef.o
_group_freef.lo: group_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/group_freef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_freef.c -o _group_freef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/group_freef.c -o _group_freef.lo
_comm_sizef.o: comm_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_sizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_sizef.c -o _comm_sizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_sizef.c -o _comm_sizef.o
_comm_sizef.lo: comm_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_sizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_sizef.c -o _comm_sizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_sizef.c -o _comm_sizef.lo
_comm_rankf.o: comm_rankf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_rankf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_rankf.c -o _comm_rankf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_rankf.c -o _comm_rankf.o
_comm_rankf.lo: comm_rankf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_rankf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_rankf.c -o _comm_rankf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_rankf.c -o _comm_rankf.lo
_comm_comparef.o: comm_comparef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_comparef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_comparef.c -o _comm_comparef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_comparef.c -o _comm_comparef.o
_comm_comparef.lo: comm_comparef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_comparef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_comparef.c -o _comm_comparef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_comparef.c -o _comm_comparef.lo
_comm_dupf.o: comm_dupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_dupf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_dupf.c -o _comm_dupf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_dupf.c -o _comm_dupf.o
_comm_dupf.lo: comm_dupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_dupf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_dupf.c -o _comm_dupf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_dupf.c -o _comm_dupf.lo
_comm_createf.o: comm_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_createf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_createf.c -o _comm_createf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_createf.c -o _comm_createf.o
_comm_createf.lo: comm_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_createf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_createf.c -o _comm_createf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_createf.c -o _comm_createf.lo
_comm_splitf.o: comm_splitf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_splitf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_splitf.c -o _comm_splitf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_splitf.c -o _comm_splitf.o
_comm_splitf.lo: comm_splitf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_splitf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_splitf.c -o _comm_splitf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_splitf.c -o _comm_splitf.lo
_comm_freef.o: comm_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_freef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_freef.c -o _comm_freef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_freef.c -o _comm_freef.o
_comm_freef.lo: comm_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_freef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_freef.c -o _comm_freef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_freef.c -o _comm_freef.lo
_commtesticf.o: commtesticf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commtesticf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commtesticf.c -o _commtesticf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commtesticf.c -o _commtesticf.o
_commtesticf.lo: commtesticf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commtesticf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commtesticf.c -o _commtesticf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commtesticf.c -o _commtesticf.lo
_commrsizef.o: commrsizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commrsizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commrsizef.c -o _commrsizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commrsizef.c -o _commrsizef.o
_commrsizef.lo: commrsizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commrsizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commrsizef.c -o _commrsizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commrsizef.c -o _commrsizef.lo
_commrgroupf.o: commrgroupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commrgroupf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commrgroupf.c -o _commrgroupf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commrgroupf.c -o _commrgroupf.o
_commrgroupf.lo: commrgroupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commrgroupf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commrgroupf.c -o _commrgroupf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commrgroupf.c -o _commrgroupf.lo
_iccreatef.o: iccreatef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/iccreatef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/iccreatef.c -o _iccreatef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/iccreatef.c -o _iccreatef.o
_iccreatef.lo: iccreatef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/iccreatef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/iccreatef.c -o _iccreatef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/iccreatef.c -o _iccreatef.lo
_icmergef.o: icmergef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/icmergef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/icmergef.c -o _icmergef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/icmergef.c -o _icmergef.o
_icmergef.lo: icmergef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/icmergef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/icmergef.c -o _icmergef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/icmergef.c -o _icmergef.lo
_keyval_freef.o: keyval_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/keyval_freef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/keyval_freef.c -o _keyval_freef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/keyval_freef.c -o _keyval_freef.o
_keyval_freef.lo: keyval_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/keyval_freef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/keyval_freef.c -o _keyval_freef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/keyval_freef.c -o _keyval_freef.lo
_attr_putf.o: attr_putf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/attr_putf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_putf.c -o _attr_putf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_putf.c -o _attr_putf.o
_attr_putf.lo: attr_putf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/attr_putf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_putf.c -o _attr_putf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_putf.c -o _attr_putf.lo
_attr_getf.o: attr_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/attr_getf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_getf.c -o _attr_getf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_getf.c -o _attr_getf.o
_attr_getf.lo: attr_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/attr_getf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_getf.c -o _attr_getf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_getf.c -o _attr_getf.lo
_attr_deletef.o: attr_deletef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/attr_deletef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_deletef.c -o _attr_deletef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_deletef.c -o _attr_deletef.o
_attr_deletef.lo: attr_deletef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/attr_deletef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_deletef.c -o _attr_deletef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/attr_deletef.c -o _attr_deletef.lo
_topo_testf.o: topo_testf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/topo_testf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/topo_testf.c -o _topo_testf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/topo_testf.c -o _topo_testf.o
_topo_testf.lo: topo_testf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/topo_testf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/topo_testf.c -o _topo_testf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/topo_testf.c -o _topo_testf.lo
_cart_createf.o: cart_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/cart_createf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_createf.c -o _cart_createf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_createf.c -o _cart_createf.o
_cart_createf.lo: cart_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/cart_createf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_createf.c -o _cart_createf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_createf.c -o _cart_createf.lo
_dims_createf.o: dims_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/dims_createf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dims_createf.c -o _dims_createf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dims_createf.c -o _dims_createf.o
_dims_createf.lo: dims_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/dims_createf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dims_createf.c -o _dims_createf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dims_createf.c -o _dims_createf.lo
_graph_createf.o: graph_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/graph_createf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_createf.c -o _graph_createf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_createf.c -o _graph_createf.o
_graph_createf.lo: graph_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/graph_createf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_createf.c -o _graph_createf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_createf.c -o _graph_createf.lo
_graphdims_getf.o: graphdims_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/graphdims_getf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graphdims_getf.c -o _graphdims_getf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graphdims_getf.c -o _graphdims_getf.o
_graphdims_getf.lo: graphdims_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/graphdims_getf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graphdims_getf.c -o _graphdims_getf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graphdims_getf.c -o _graphdims_getf.lo
_graph_getf.o: graph_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/graph_getf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_getf.c -o _graph_getf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_getf.c -o _graph_getf.o
_graph_getf.lo: graph_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/graph_getf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_getf.c -o _graph_getf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_getf.c -o _graph_getf.lo
_cartdim_getf.o: cartdim_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/cartdim_getf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cartdim_getf.c -o _cartdim_getf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cartdim_getf.c -o _cartdim_getf.o
_cartdim_getf.lo: cartdim_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/cartdim_getf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cartdim_getf.c -o _cartdim_getf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cartdim_getf.c -o _cartdim_getf.lo
_cart_getf.o: cart_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/cart_getf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_getf.c -o _cart_getf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_getf.c -o _cart_getf.o
_cart_getf.lo: cart_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/cart_getf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_getf.c -o _cart_getf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_getf.c -o _cart_getf.lo
_cart_rankf.o: cart_rankf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/cart_rankf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_rankf.c -o _cart_rankf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_rankf.c -o _cart_rankf.o
_cart_rankf.lo: cart_rankf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/cart_rankf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_rankf.c -o _cart_rankf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_rankf.c -o _cart_rankf.lo
_cart_coordsf.o: cart_coordsf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/cart_coordsf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_coordsf.c -o _cart_coordsf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_coordsf.c -o _cart_coordsf.o
_cart_coordsf.lo: cart_coordsf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/cart_coordsf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_coordsf.c -o _cart_coordsf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_coordsf.c -o _cart_coordsf.lo
_grfnbcountf.o: grfnbcountf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/grfnbcountf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/grfnbcountf.c -o _grfnbcountf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/grfnbcountf.c -o _grfnbcountf.o
_grfnbcountf.lo: grfnbcountf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/grfnbcountf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/grfnbcountf.c -o _grfnbcountf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/grfnbcountf.c -o _grfnbcountf.lo
_grfnbrsf.o: grfnbrsf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/grfnbrsf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/grfnbrsf.c -o _grfnbrsf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/grfnbrsf.c -o _grfnbrsf.o
_grfnbrsf.lo: grfnbrsf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/grfnbrsf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/grfnbrsf.c -o _grfnbrsf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/grfnbrsf.c -o _grfnbrsf.lo
_cart_shiftf.o: cart_shiftf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/cart_shiftf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_shiftf.c -o _cart_shiftf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_shiftf.c -o _cart_shiftf.o
_cart_shiftf.lo: cart_shiftf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/cart_shiftf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_shiftf.c -o _cart_shiftf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_shiftf.c -o _cart_shiftf.lo
_cart_subf.o: cart_subf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/cart_subf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_subf.c -o _cart_subf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_subf.c -o _cart_subf.o
_cart_subf.lo: cart_subf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/cart_subf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_subf.c -o _cart_subf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_subf.c -o _cart_subf.lo
_cart_mapf.o: cart_mapf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/cart_mapf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_mapf.c -o _cart_mapf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_mapf.c -o _cart_mapf.o
_cart_mapf.lo: cart_mapf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/cart_mapf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_mapf.c -o _cart_mapf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/cart_mapf.c -o _cart_mapf.lo
_graph_mapf.o: graph_mapf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/graph_mapf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_mapf.c -o _graph_mapf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_mapf.c -o _graph_mapf.o
_graph_mapf.lo: graph_mapf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/graph_mapf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_mapf.c -o _graph_mapf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/graph_mapf.c -o _graph_mapf.lo
_getpnamef.o: getpnamef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/getpnamef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/getpnamef.c -o _getpnamef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/getpnamef.c -o _getpnamef.o
_getpnamef.lo: getpnamef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/getpnamef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/getpnamef.c -o _getpnamef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/getpnamef.c -o _getpnamef.lo
_get_versionf.o: get_versionf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/get_versionf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/get_versionf.c -o _get_versionf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/get_versionf.c -o _get_versionf.o
_get_versionf.lo: get_versionf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/get_versionf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/get_versionf.c -o _get_versionf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/get_versionf.c -o _get_versionf.lo
_errhcreatef.o: errhcreatef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/errhcreatef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhcreatef.c -o _errhcreatef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhcreatef.c -o _errhcreatef.o
_errhcreatef.lo: errhcreatef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/errhcreatef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhcreatef.c -o _errhcreatef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhcreatef.c -o _errhcreatef.lo
_errhsetf.o: errhsetf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/errhsetf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhsetf.c -o _errhsetf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhsetf.c -o _errhsetf.o
_errhsetf.lo: errhsetf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/errhsetf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhsetf.c -o _errhsetf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhsetf.c -o _errhsetf.lo
_errhgetf.o: errhgetf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/errhgetf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhgetf.c -o _errhgetf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhgetf.c -o _errhgetf.o
_errhgetf.lo: errhgetf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/errhgetf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhgetf.c -o _errhgetf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhgetf.c -o _errhgetf.lo
_errhfreef.o: errhfreef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/errhfreef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhfreef.c -o _errhfreef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhfreef.c -o _errhfreef.o
_errhfreef.lo: errhfreef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/errhfreef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhfreef.c -o _errhfreef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhfreef.c -o _errhfreef.lo
_error_stringf.o: error_stringf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/error_stringf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/error_stringf.c -o _error_stringf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/error_stringf.c -o _error_stringf.o
_error_stringf.lo: error_stringf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/error_stringf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/error_stringf.c -o _error_stringf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/error_stringf.c -o _error_stringf.lo
_error_classf.o: error_classf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/error_classf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/error_classf.c -o _error_classf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/error_classf.c -o _error_classf.o
_error_classf.lo: error_classf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/error_classf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/error_classf.c -o _error_classf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/error_classf.c -o _error_classf.lo
_finalizef.o: finalizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/finalizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/finalizef.c -o _finalizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/finalizef.c -o _finalizef.o
_finalizef.lo: finalizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/finalizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/finalizef.c -o _finalizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/finalizef.c -o _finalizef.lo
_initializedf.o: initializedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/initializedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/initializedf.c -o _initializedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/initializedf.c -o _initializedf.o
_initializedf.lo: initializedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/initializedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/initializedf.c -o _initializedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/initializedf.c -o _initializedf.lo
_abortf.o: abortf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/abortf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/abortf.c -o _abortf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/abortf.c -o _abortf.o
_abortf.lo: abortf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/abortf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/abortf.c -o _abortf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/abortf.c -o _abortf.lo
_close_portf.o: close_portf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/close_portf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/close_portf.c -o _close_portf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/close_portf.c -o _close_portf.o
_close_portf.lo: close_portf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/close_portf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/close_portf.c -o _close_portf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/close_portf.c -o _close_portf.lo
_comm_acceptf.o: comm_acceptf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_acceptf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_acceptf.c -o _comm_acceptf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_acceptf.c -o _comm_acceptf.o
_comm_acceptf.lo: comm_acceptf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_acceptf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_acceptf.c -o _comm_acceptf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_acceptf.c -o _comm_acceptf.lo
_comm_connectf.o: comm_connectf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_connectf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_connectf.c -o _comm_connectf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_connectf.c -o _comm_connectf.o
_comm_connectf.lo: comm_connectf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_connectf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_connectf.c -o _comm_connectf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_connectf.c -o _comm_connectf.lo
_commdiscf.o: commdiscf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commdiscf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commdiscf.c -o _commdiscf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commdiscf.c -o _commdiscf.o
_commdiscf.lo: commdiscf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commdiscf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commdiscf.c -o _commdiscf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commdiscf.c -o _commdiscf.lo
_commparentf.o: commparentf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commparentf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commparentf.c -o _commparentf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commparentf.c -o _commparentf.o
_commparentf.lo: commparentf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commparentf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commparentf.c -o _commparentf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commparentf.c -o _commparentf.lo
_comm_joinf.o: comm_joinf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_joinf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_joinf.c -o _comm_joinf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_joinf.c -o _comm_joinf.o
_comm_joinf.lo: comm_joinf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_joinf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_joinf.c -o _comm_joinf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_joinf.c -o _comm_joinf.lo
_comm_spawnf.o: comm_spawnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_spawnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_spawnf.c -o _comm_spawnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_spawnf.c -o _comm_spawnf.o
_comm_spawnf.lo: comm_spawnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_spawnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_spawnf.c -o _comm_spawnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_spawnf.c -o _comm_spawnf.lo
_spawnmultf.o: spawnmultf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/spawnmultf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/spawnmultf.c -o _spawnmultf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/spawnmultf.c -o _spawnmultf.o
_spawnmultf.lo: spawnmultf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/spawnmultf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/spawnmultf.c -o _spawnmultf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/spawnmultf.c -o _spawnmultf.lo
_lookup_namef.o: lookup_namef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/lookup_namef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/lookup_namef.c -o _lookup_namef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/lookup_namef.c -o _lookup_namef.o
_lookup_namef.lo: lookup_namef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/lookup_namef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/lookup_namef.c -o _lookup_namef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/lookup_namef.c -o _lookup_namef.lo
_open_portf.o: open_portf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/open_portf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/open_portf.c -o _open_portf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/open_portf.c -o _open_portf.o
_open_portf.lo: open_portf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/open_portf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/open_portf.c -o _open_portf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/open_portf.c -o _open_portf.lo
_publish_namef.o: publish_namef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/publish_namef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/publish_namef.c -o _publish_namef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/publish_namef.c -o _publish_namef.o
_publish_namef.lo: publish_namef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/publish_namef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/publish_namef.c -o _publish_namef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/publish_namef.c -o _publish_namef.lo
_unpubnamef.o: unpubnamef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/unpubnamef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/unpubnamef.c -o _unpubnamef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/unpubnamef.c -o _unpubnamef.o
_unpubnamef.lo: unpubnamef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/unpubnamef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/unpubnamef.c -o _unpubnamef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/unpubnamef.c -o _unpubnamef.lo
_accumulatef.o: accumulatef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/accumulatef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/accumulatef.c -o _accumulatef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/accumulatef.c -o _accumulatef.o
_accumulatef.lo: accumulatef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/accumulatef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/accumulatef.c -o _accumulatef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/accumulatef.c -o _accumulatef.lo
_getf.o: getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/getf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/getf.c -o _getf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/getf.c -o _getf.o
_getf.lo: getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/getf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/getf.c -o _getf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/getf.c -o _getf.lo
_putf.o: putf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/putf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/putf.c -o _putf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/putf.c -o _putf.o
_putf.lo: putf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/putf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/putf.c -o _putf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/putf.c -o _putf.lo
_win_completef.o: win_completef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_completef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_completef.c -o _win_completef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_completef.c -o _win_completef.o
_win_completef.lo: win_completef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_completef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_completef.c -o _win_completef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_completef.c -o _win_completef.lo
_win_createf.o: win_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_createf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_createf.c -o _win_createf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_createf.c -o _win_createf.o
_win_createf.lo: win_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_createf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_createf.c -o _win_createf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_createf.c -o _win_createf.lo
_win_fencef.o: win_fencef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_fencef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_fencef.c -o _win_fencef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_fencef.c -o _win_fencef.o
_win_fencef.lo: win_fencef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_fencef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_fencef.c -o _win_fencef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_fencef.c -o _win_fencef.lo
_win_freef.o: win_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_freef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_freef.c -o _win_freef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_freef.c -o _win_freef.o
_win_freef.lo: win_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_freef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_freef.c -o _win_freef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_freef.c -o _win_freef.lo
_win_get_groupf.o: win_get_groupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_get_groupf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_groupf.c -o _win_get_groupf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_groupf.c -o _win_get_groupf.o
_win_get_groupf.lo: win_get_groupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_get_groupf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_groupf.c -o _win_get_groupf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_groupf.c -o _win_get_groupf.lo
_win_lockf.o: win_lockf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_lockf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_lockf.c -o _win_lockf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_lockf.c -o _win_lockf.o
_win_lockf.lo: win_lockf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_lockf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_lockf.c -o _win_lockf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_lockf.c -o _win_lockf.lo
_win_postf.o: win_postf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_postf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_postf.c -o _win_postf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_postf.c -o _win_postf.o
_win_postf.lo: win_postf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_postf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_postf.c -o _win_postf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_postf.c -o _win_postf.lo
_win_startf.o: win_startf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_startf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_startf.c -o _win_startf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_startf.c -o _win_startf.o
_win_startf.lo: win_startf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_startf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_startf.c -o _win_startf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_startf.c -o _win_startf.lo
_win_testf.o: win_testf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_testf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_testf.c -o _win_testf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_testf.c -o _win_testf.o
_win_testf.lo: win_testf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_testf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_testf.c -o _win_testf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_testf.c -o _win_testf.lo
_win_unlockf.o: win_unlockf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_unlockf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_unlockf.c -o _win_unlockf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_unlockf.c -o _win_unlockf.o
_win_unlockf.lo: win_unlockf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_unlockf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_unlockf.c -o _win_unlockf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_unlockf.c -o _win_unlockf.lo
_win_waitf.o: win_waitf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_waitf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_waitf.c -o _win_waitf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_waitf.c -o _win_waitf.o
_win_waitf.lo: win_waitf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_waitf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_waitf.c -o _win_waitf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_waitf.c -o _win_waitf.lo
_alltoallwf.o: alltoallwf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/alltoallwf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallwf.c -o _alltoallwf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallwf.c -o _alltoallwf.o
_alltoallwf.lo: alltoallwf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/alltoallwf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallwf.c -o _alltoallwf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alltoallwf.c -o _alltoallwf.lo
_exscanf.o: exscanf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/exscanf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/exscanf.c -o _exscanf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/exscanf.c -o _exscanf.o
_exscanf.lo: exscanf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/exscanf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/exscanf.c -o _exscanf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/exscanf.c -o _exscanf.lo
_adderrclassf.o: adderrclassf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/adderrclassf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrclassf.c -o _adderrclassf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrclassf.c -o _adderrclassf.o
_adderrclassf.lo: adderrclassf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/adderrclassf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrclassf.c -o _adderrclassf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrclassf.c -o _adderrclassf.lo
_adderrcodef.o: adderrcodef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/adderrcodef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrcodef.c -o _adderrcodef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrcodef.c -o _adderrcodef.o
_adderrcodef.lo: adderrcodef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/adderrcodef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrcodef.c -o _adderrcodef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrcodef.c -o _adderrcodef.lo
_adderrstringf.o: adderrstringf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/adderrstringf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrstringf.c -o _adderrstringf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrstringf.c -o _adderrstringf.o
_adderrstringf.lo: adderrstringf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/adderrstringf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrstringf.c -o _adderrstringf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/adderrstringf.c -o _adderrstringf.lo
_commcallerrf.o: commcallerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commcallerrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commcallerrf.c -o _commcallerrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commcallerrf.c -o _commcallerrf.o
_commcallerrf.lo: commcallerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commcallerrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commcallerrf.c -o _commcallerrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commcallerrf.c -o _commcallerrf.lo
_commnewkeyf.o: commnewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commnewkeyf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commnewkeyf.c -o _commnewkeyf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commnewkeyf.c -o _commnewkeyf.o
_commnewkeyf.lo: commnewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commnewkeyf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commnewkeyf.c -o _commnewkeyf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commnewkeyf.c -o _commnewkeyf.lo
_commdelattrf.o: commdelattrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commdelattrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commdelattrf.c -o _commdelattrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commdelattrf.c -o _commdelattrf.o
_commdelattrf.lo: commdelattrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commdelattrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commdelattrf.c -o _commdelattrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commdelattrf.c -o _commdelattrf.lo
_commfreekeyf.o: commfreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commfreekeyf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commfreekeyf.c -o _commfreekeyf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commfreekeyf.c -o _commfreekeyf.o
_commfreekeyf.lo: commfreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commfreekeyf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commfreekeyf.c -o _commfreekeyf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commfreekeyf.c -o _commfreekeyf.lo
_comm_get_attrf.o: comm_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_get_attrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_get_attrf.c -o _comm_get_attrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_get_attrf.c -o _comm_get_attrf.o
_comm_get_attrf.lo: comm_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_get_attrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_get_attrf.c -o _comm_get_attrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_get_attrf.c -o _comm_get_attrf.lo
_commgetnamf.o: commgetnamf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commgetnamf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commgetnamf.c -o _commgetnamf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commgetnamf.c -o _commgetnamf.o
_commgetnamf.lo: commgetnamf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commgetnamf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commgetnamf.c -o _commgetnamf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commgetnamf.c -o _commgetnamf.lo
_comm_set_attrf.o: comm_set_attrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_set_attrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_attrf.c -o _comm_set_attrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_attrf.c -o _comm_set_attrf.o
_comm_set_attrf.lo: comm_set_attrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_set_attrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_attrf.c -o _comm_set_attrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_attrf.c -o _comm_set_attrf.lo
_comm_set_namef.o: comm_set_namef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_set_namef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_namef.c -o _comm_set_namef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_namef.c -o _comm_set_namef.o
_comm_set_namef.lo: comm_set_namef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_set_namef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_namef.c -o _comm_set_namef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_namef.c -o _comm_set_namef.lo
_filecallerrf.o: filecallerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/filecallerrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/filecallerrf.c -o _filecallerrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/filecallerrf.c -o _filecallerrf.o
_filecallerrf.lo: filecallerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/filecallerrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/filecallerrf.c -o _filecallerrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/filecallerrf.c -o _filecallerrf.lo
_greqcompletef.o: greqcompletef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/greqcompletef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/greqcompletef.c -o _greqcompletef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/greqcompletef.c -o _greqcompletef.o
_greqcompletef.lo: greqcompletef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/greqcompletef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/greqcompletef.c -o _greqcompletef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/greqcompletef.c -o _greqcompletef.lo
_greqstartf.o: greqstartf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/greqstartf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/greqstartf.c -o _greqstartf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/greqstartf.c -o _greqstartf.o
_greqstartf.lo: greqstartf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/greqstartf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/greqstartf.c -o _greqstartf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/greqstartf.c -o _greqstartf.lo
_isthrmainf.o: isthrmainf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/isthrmainf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/isthrmainf.c -o _isthrmainf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/isthrmainf.c -o _isthrmainf.o
_isthrmainf.lo: isthrmainf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/isthrmainf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/isthrmainf.c -o _isthrmainf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/isthrmainf.c -o _isthrmainf.lo
_query_threadf.o: query_threadf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/query_threadf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/query_threadf.c -o _query_threadf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/query_threadf.c -o _query_threadf.o
_query_threadf.lo: query_threadf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/query_threadf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/query_threadf.c -o _query_threadf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/query_threadf.c -o _query_threadf.lo
_statgetclf.o: statgetclf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/statgetclf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/statgetclf.c -o _statgetclf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/statgetclf.c -o _statgetclf.o
_statgetclf.lo: statgetclf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/statgetclf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/statgetclf.c -o _statgetclf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/statgetclf.c -o _statgetclf.lo
_statsetelf.o: statsetelf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/statsetelf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/statsetelf.c -o _statsetelf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/statsetelf.c -o _statsetelf.o
_statsetelf.lo: statsetelf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/statsetelf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/statsetelf.c -o _statsetelf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/statsetelf.c -o _statsetelf.lo
_typenewkeyf.o: typenewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typenewkeyf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typenewkeyf.c -o _typenewkeyf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typenewkeyf.c -o _typenewkeyf.o
_typenewkeyf.lo: typenewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typenewkeyf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typenewkeyf.c -o _typenewkeyf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typenewkeyf.c -o _typenewkeyf.lo
_typedelattrf.o: typedelattrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typedelattrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typedelattrf.c -o _typedelattrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typedelattrf.c -o _typedelattrf.o
_typedelattrf.lo: typedelattrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typedelattrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typedelattrf.c -o _typedelattrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typedelattrf.c -o _typedelattrf.lo
_type_dupf.o: type_dupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_dupf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_dupf.c -o _type_dupf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_dupf.c -o _type_dupf.o
_type_dupf.lo: type_dupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_dupf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_dupf.c -o _type_dupf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_dupf.c -o _type_dupf.lo
_typefreekeyf.o: typefreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typefreekeyf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typefreekeyf.c -o _typefreekeyf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typefreekeyf.c -o _typefreekeyf.o
_typefreekeyf.lo: typefreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typefreekeyf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typefreekeyf.c -o _typefreekeyf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typefreekeyf.c -o _typefreekeyf.lo
_type_get_attrf.o: type_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_get_attrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_get_attrf.c -o _type_get_attrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_get_attrf.c -o _type_get_attrf.o
_type_get_attrf.lo: type_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_get_attrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_get_attrf.c -o _type_get_attrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_get_attrf.c -o _type_get_attrf.lo
_typegetcntsf.o: typegetcntsf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typegetcntsf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetcntsf.c -o _typegetcntsf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetcntsf.c -o _typegetcntsf.o
_typegetcntsf.lo: typegetcntsf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typegetcntsf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetcntsf.c -o _typegetcntsf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetcntsf.c -o _typegetcntsf.lo
_typegetenvf.o: typegetenvf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typegetenvf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetenvf.c -o _typegetenvf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetenvf.c -o _typegetenvf.o
_typegetenvf.lo: typegetenvf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typegetenvf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetenvf.c -o _typegetenvf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetenvf.c -o _typegetenvf.lo
_typegnamef.o: typegnamef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typegnamef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typegnamef.c -o _typegnamef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typegnamef.c -o _typegnamef.o
_typegnamef.lo: typegnamef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typegnamef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typegnamef.c -o _typegnamef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typegnamef.c -o _typegnamef.lo
_typesetattrf.o: typesetattrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typesetattrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typesetattrf.c -o _typesetattrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typesetattrf.c -o _typesetattrf.o
_typesetattrf.lo: typesetattrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typesetattrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typesetattrf.c -o _typesetattrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typesetattrf.c -o _typesetattrf.lo
_typesetnamef.o: typesetnamef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typesetnamef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typesetnamef.c -o _typesetnamef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typesetnamef.c -o _typesetnamef.o
_typesetnamef.lo: typesetnamef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typesetnamef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typesetnamef.c -o _typesetnamef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typesetnamef.c -o _typesetnamef.lo
_type_match_sizef.o: type_match_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/type_match_sizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_match_sizef.c -o _type_match_sizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/type_match_sizef.c -o _type_match_sizef.o
_type_match_sizef.lo: type_match_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/type_match_sizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_match_sizef.c -o _type_match_sizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/type_match_sizef.c -o _type_match_sizef.lo
_wincallerrf.o: wincallerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/wincallerrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/wincallerrf.c -o _wincallerrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/wincallerrf.c -o _wincallerrf.o
_wincallerrf.lo: wincallerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/wincallerrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/wincallerrf.c -o _wincallerrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/wincallerrf.c -o _wincallerrf.lo
_winnewkeyf.o: winnewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/winnewkeyf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/winnewkeyf.c -o _winnewkeyf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/winnewkeyf.c -o _winnewkeyf.o
_winnewkeyf.lo: winnewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/winnewkeyf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/winnewkeyf.c -o _winnewkeyf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/winnewkeyf.c -o _winnewkeyf.lo
_windelattrf.o: windelattrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/windelattrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/windelattrf.c -o _windelattrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/windelattrf.c -o _windelattrf.o
_windelattrf.lo: windelattrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/windelattrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/windelattrf.c -o _windelattrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/windelattrf.c -o _windelattrf.lo
_winfreekeyf.o: winfreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/winfreekeyf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/winfreekeyf.c -o _winfreekeyf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/winfreekeyf.c -o _winfreekeyf.o
_winfreekeyf.lo: winfreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/winfreekeyf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/winfreekeyf.c -o _winfreekeyf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/winfreekeyf.c -o _winfreekeyf.lo
_win_get_attrf.o: win_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_get_attrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_attrf.c -o _win_get_attrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_attrf.c -o _win_get_attrf.o
_win_get_attrf.lo: win_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_get_attrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_attrf.c -o _win_get_attrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_attrf.c -o _win_get_attrf.lo
_win_get_namef.o: win_get_namef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_get_namef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_namef.c -o _win_get_namef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_namef.c -o _win_get_namef.o
_win_get_namef.lo: win_get_namef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_get_namef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_namef.c -o _win_get_namef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_namef.c -o _win_get_namef.lo
_win_set_attrf.o: win_set_attrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_set_attrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_attrf.c -o _win_set_attrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_attrf.c -o _win_set_attrf.o
_win_set_attrf.lo: win_set_attrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_set_attrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_attrf.c -o _win_set_attrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_attrf.c -o _win_set_attrf.lo
_win_set_namef.o: win_set_namef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_set_namef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_namef.c -o _win_set_namef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_namef.c -o _win_set_namef.o
_win_set_namef.lo: win_set_namef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_set_namef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_namef.c -o _win_set_namef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_namef.c -o _win_set_namef.lo
_alloc_memf.o: alloc_memf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/alloc_memf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alloc_memf.c -o _alloc_memf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/alloc_memf.c -o _alloc_memf.o
_alloc_memf.lo: alloc_memf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/alloc_memf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alloc_memf.c -o _alloc_memf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/alloc_memf.c -o _alloc_memf.lo
_commcreerrf.o: commcreerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commcreerrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commcreerrf.c -o _commcreerrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commcreerrf.c -o _commcreerrf.o
_commcreerrf.lo: commcreerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commcreerrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commcreerrf.c -o _commcreerrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commcreerrf.c -o _commcreerrf.lo
_commgeterrf.o: commgeterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commgeterrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commgeterrf.c -o _commgeterrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commgeterrf.c -o _commgeterrf.o
_commgeterrf.lo: commgeterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commgeterrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commgeterrf.c -o _commgeterrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commgeterrf.c -o _commgeterrf.lo
_commseterrf.o: commseterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/commseterrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commseterrf.c -o _commseterrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/commseterrf.c -o _commseterrf.o
_commseterrf.lo: commseterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/commseterrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commseterrf.c -o _commseterrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/commseterrf.c -o _commseterrf.lo
_filecreerrf.o: filecreerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/filecreerrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/filecreerrf.c -o _filecreerrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/filecreerrf.c -o _filecreerrf.o
_filecreerrf.lo: filecreerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/filecreerrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/filecreerrf.c -o _filecreerrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/filecreerrf.c -o _filecreerrf.lo
_filegeterrf.o: filegeterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/filegeterrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/filegeterrf.c -o _filegeterrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/filegeterrf.c -o _filegeterrf.o
_filegeterrf.lo: filegeterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/filegeterrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/filegeterrf.c -o _filegeterrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/filegeterrf.c -o _filegeterrf.lo
_fileseterrf.o: fileseterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/fileseterrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/fileseterrf.c -o _fileseterrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/fileseterrf.c -o _fileseterrf.o
_fileseterrf.lo: fileseterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/fileseterrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/fileseterrf.c -o _fileseterrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/fileseterrf.c -o _fileseterrf.lo
_finalizedf.o: finalizedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/finalizedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/finalizedf.c -o _finalizedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/finalizedf.c -o _finalizedf.o
_finalizedf.lo: finalizedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/finalizedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/finalizedf.c -o _finalizedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/finalizedf.c -o _finalizedf.lo
_free_memf.o: free_memf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/free_memf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/free_memf.c -o _free_memf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/free_memf.c -o _free_memf.o
_free_memf.lo: free_memf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/free_memf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/free_memf.c -o _free_memf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/free_memf.c -o _free_memf.lo
_info_createf.o: info_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/info_createf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_createf.c -o _info_createf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_createf.c -o _info_createf.o
_info_createf.lo: info_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/info_createf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_createf.c -o _info_createf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_createf.c -o _info_createf.lo
_info_deletef.o: info_deletef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/info_deletef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_deletef.c -o _info_deletef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_deletef.c -o _info_deletef.o
_info_deletef.lo: info_deletef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/info_deletef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_deletef.c -o _info_deletef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_deletef.c -o _info_deletef.lo
_info_dupf.o: info_dupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/info_dupf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_dupf.c -o _info_dupf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_dupf.c -o _info_dupf.o
_info_dupf.lo: info_dupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/info_dupf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_dupf.c -o _info_dupf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_dupf.c -o _info_dupf.lo
_info_freef.o: info_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/info_freef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_freef.c -o _info_freef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_freef.c -o _info_freef.o
_info_freef.lo: info_freef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/info_freef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_freef.c -o _info_freef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_freef.c -o _info_freef.lo
_info_getf.o: info_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/info_getf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_getf.c -o _info_getf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_getf.c -o _info_getf.o
_info_getf.lo: info_getf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/info_getf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_getf.c -o _info_getf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_getf.c -o _info_getf.lo
_infognkf.o: infognkf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/infognkf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/infognkf.c -o _infognkf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/infognkf.c -o _infognkf.o
_infognkf.lo: infognkf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/infognkf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/infognkf.c -o _infognkf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/infognkf.c -o _infognkf.lo
_infognthkf.o: infognthkf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/infognthkf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/infognthkf.c -o _infognthkf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/infognthkf.c -o _infognthkf.o
_infognthkf.lo: infognthkf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/infognthkf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/infognthkf.c -o _infognthkf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/infognthkf.c -o _infognthkf.lo
_infovallenf.o: infovallenf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/infovallenf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/infovallenf.c -o _infovallenf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/infovallenf.c -o _infovallenf.o
_infovallenf.lo: infovallenf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/infovallenf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/infovallenf.c -o _infovallenf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/infovallenf.c -o _infovallenf.lo
_info_setf.o: info_setf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/info_setf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_setf.c -o _info_setf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/info_setf.c -o _info_setf.o
_info_setf.lo: info_setf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/info_setf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_setf.c -o _info_setf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/info_setf.c -o _info_setf.lo
_pack_externalf.o: pack_externalf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/pack_externalf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/pack_externalf.c -o _pack_externalf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/pack_externalf.c -o _pack_externalf.o
_pack_externalf.lo: pack_externalf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/pack_externalf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/pack_externalf.c -o _pack_externalf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/pack_externalf.c -o _pack_externalf.lo
_packesizef.o: packesizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/packesizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/packesizef.c -o _packesizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/packesizef.c -o _packesizef.o
_packesizef.lo: packesizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/packesizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/packesizef.c -o _packesizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/packesizef.c -o _packesizef.lo
_reqgetstatf.o: reqgetstatf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/reqgetstatf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/reqgetstatf.c -o _reqgetstatf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/reqgetstatf.c -o _reqgetstatf.o
_reqgetstatf.lo: reqgetstatf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/reqgetstatf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/reqgetstatf.c -o _reqgetstatf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/reqgetstatf.c -o _reqgetstatf.lo
_typedarrayf.o: typedarrayf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typedarrayf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typedarrayf.c -o _typedarrayf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typedarrayf.c -o _typedarrayf.o
_typedarrayf.lo: typedarrayf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typedarrayf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typedarrayf.c -o _typedarrayf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typedarrayf.c -o _typedarrayf.lo
_typechindf.o: typechindf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typechindf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typechindf.c -o _typechindf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typechindf.c -o _typechindf.o
_typechindf.lo: typechindf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typechindf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typechindf.c -o _typechindf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typechindf.c -o _typechindf.lo
_typechvecf.o: typechvecf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typechvecf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typechvecf.c -o _typechvecf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typechvecf.c -o _typechvecf.o
_typechvecf.lo: typechvecf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typechvecf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typechvecf.c -o _typechvecf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typechvecf.c -o _typechvecf.lo
_typecindbf.o: typecindbf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typecindbf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typecindbf.c -o _typecindbf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typecindbf.c -o _typecindbf.o
_typecindbf.lo: typecindbf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typecindbf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typecindbf.c -o _typecindbf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typecindbf.c -o _typecindbf.lo
_typecresizef.o: typecresizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typecresizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typecresizef.c -o _typecresizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typecresizef.c -o _typecresizef.o
_typecresizef.lo: typecresizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typecresizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typecresizef.c -o _typecresizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typecresizef.c -o _typecresizef.lo
_typecstructf.o: typecstructf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typecstructf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typecstructf.c -o _typecstructf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typecstructf.c -o _typecstructf.o
_typecstructf.lo: typecstructf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typecstructf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typecstructf.c -o _typecstructf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typecstructf.c -o _typecstructf.lo
_typecsubarrf.o: typecsubarrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typecsubarrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typecsubarrf.c -o _typecsubarrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typecsubarrf.c -o _typecsubarrf.o
_typecsubarrf.lo: typecsubarrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typecsubarrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typecsubarrf.c -o _typecsubarrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typecsubarrf.c -o _typecsubarrf.lo
_typegetextentf.o: typegetextentf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typegetextentf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetextentf.c -o _typegetextentf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetextentf.c -o _typegetextentf.o
_typegetextentf.lo: typegetextentf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typegetextentf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetextentf.c -o _typegetextentf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typegetextentf.c -o _typegetextentf.lo
_typegtextf.o: typegtextf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/typegtextf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typegtextf.c -o _typegtextf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/typegtextf.c -o _typegtextf.o
_typegtextf.lo: typegtextf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/typegtextf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typegtextf.c -o _typegtextf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/typegtextf.c -o _typegtextf.lo
_unpackextf.o: unpackextf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/unpackextf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/unpackextf.c -o _unpackextf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/unpackextf.c -o _unpackextf.o
_unpackextf.lo: unpackextf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/unpackextf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/unpackextf.c -o _unpackextf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/unpackextf.c -o _unpackextf.lo
_wincreerrf.o: wincreerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/wincreerrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/wincreerrf.c -o _wincreerrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/wincreerrf.c -o _wincreerrf.o
_wincreerrf.lo: wincreerrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/wincreerrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/wincreerrf.c -o _wincreerrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/wincreerrf.c -o _wincreerrf.lo
_wingeterrf.o: wingeterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/wingeterrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/wingeterrf.c -o _wingeterrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/wingeterrf.c -o _wingeterrf.o
_wingeterrf.lo: wingeterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/wingeterrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/wingeterrf.c -o _wingeterrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/wingeterrf.c -o _wingeterrf.lo
_winseterrf.o: winseterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/winseterrf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/winseterrf.c -o _winseterrf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/winseterrf.c -o _winseterrf.o
_winseterrf.lo: winseterrf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/winseterrf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/winseterrf.c -o _winseterrf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/winseterrf.c -o _winseterrf.lo
_reduce_localf.o: reduce_localf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/reduce_localf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce_localf.c -o _reduce_localf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce_localf.c -o _reduce_localf.o
_reduce_localf.lo: reduce_localf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/reduce_localf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce_localf.c -o _reduce_localf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce_localf.c -o _reduce_localf.lo
_op_commutativef.o: op_commutativef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/op_commutativef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/op_commutativef.c -o _op_commutativef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/op_commutativef.c -o _op_commutativef.o
_op_commutativef.lo: op_commutativef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/op_commutativef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/op_commutativef.c -o _op_commutativef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/op_commutativef.c -o _op_commutativef.lo
_reduce_scatter_blockf.o: reduce_scatter_blockf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/reduce_scatter_blockf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce_scatter_blockf.c -o _reduce_scatter_blockf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce_scatter_blockf.c -o _reduce_scatter_blockf.o
_reduce_scatter_blockf.lo: reduce_scatter_blockf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/reduce_scatter_blockf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce_scatter_blockf.c -o _reduce_scatter_blockf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/reduce_scatter_blockf.c -o _reduce_scatter_blockf.lo
_dist_graph_create_adjacentf.o: dist_graph_create_adjacentf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/dist_graph_create_adjacentf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_create_adjacentf.c -o _dist_graph_create_adjacentf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_create_adjacentf.c -o _dist_graph_create_adjacentf.o
_dist_graph_create_adjacentf.lo: dist_graph_create_adjacentf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/dist_graph_create_adjacentf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_create_adjacentf.c -o _dist_graph_create_adjacentf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_create_adjacentf.c -o _dist_graph_create_adjacentf.lo
_dist_graph_createf.o: dist_graph_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/dist_graph_createf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_createf.c -o _dist_graph_createf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_createf.c -o _dist_graph_createf.o
_dist_graph_createf.lo: dist_graph_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/dist_graph_createf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_createf.c -o _dist_graph_createf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_createf.c -o _dist_graph_createf.lo
_dist_graph_neighbors_countf.o: dist_graph_neighbors_countf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/dist_graph_neighbors_countf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_neighbors_countf.c -o _dist_graph_neighbors_countf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_neighbors_countf.c -o _dist_graph_neighbors_countf.o
_dist_graph_neighbors_countf.lo: dist_graph_neighbors_countf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/dist_graph_neighbors_countf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_neighbors_countf.c -o _dist_graph_neighbors_countf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_neighbors_countf.c -o _dist_graph_neighbors_countf.lo
_dist_graph_neighborsf.o: dist_graph_neighborsf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/dist_graph_neighborsf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_neighborsf.c -o _dist_graph_neighborsf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_neighborsf.c -o _dist_graph_neighborsf.o
_dist_graph_neighborsf.lo: dist_graph_neighborsf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/dist_graph_neighborsf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_neighborsf.c -o _dist_graph_neighborsf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dist_graph_neighborsf.c -o _dist_graph_neighborsf.lo
_file_openf.o: file_openf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_openf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_openf.c -o _file_openf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_openf.c -o _file_openf.o
_file_openf.lo: file_openf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_openf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_openf.c -o _file_openf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_openf.c -o _file_openf.lo
_file_closef.o: file_closef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_closef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_closef.c -o _file_closef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_closef.c -o _file_closef.o
_file_closef.lo: file_closef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_closef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_closef.c -o _file_closef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_closef.c -o _file_closef.lo
_file_deletef.o: file_deletef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_deletef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_deletef.c -o _file_deletef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_deletef.c -o _file_deletef.o
_file_deletef.lo: file_deletef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_deletef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_deletef.c -o _file_deletef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_deletef.c -o _file_deletef.lo
_file_set_sizef.o: file_set_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_set_sizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_sizef.c -o _file_set_sizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_sizef.c -o _file_set_sizef.o
_file_set_sizef.lo: file_set_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_set_sizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_sizef.c -o _file_set_sizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_sizef.c -o _file_set_sizef.lo
_file_preallocatef.o: file_preallocatef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_preallocatef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_preallocatef.c -o _file_preallocatef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_preallocatef.c -o _file_preallocatef.o
_file_preallocatef.lo: file_preallocatef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_preallocatef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_preallocatef.c -o _file_preallocatef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_preallocatef.c -o _file_preallocatef.lo
_file_get_sizef.o: file_get_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_sizef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_sizef.c -o _file_get_sizef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_sizef.c -o _file_get_sizef.o
_file_get_sizef.lo: file_get_sizef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_sizef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_sizef.c -o _file_get_sizef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_sizef.c -o _file_get_sizef.lo
_file_get_groupf.o: file_get_groupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_groupf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_groupf.c -o _file_get_groupf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_groupf.c -o _file_get_groupf.o
_file_get_groupf.lo: file_get_groupf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_groupf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_groupf.c -o _file_get_groupf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_groupf.c -o _file_get_groupf.lo
_file_get_amodef.o: file_get_amodef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_amodef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_amodef.c -o _file_get_amodef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_amodef.c -o _file_get_amodef.o
_file_get_amodef.lo: file_get_amodef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_amodef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_amodef.c -o _file_get_amodef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_amodef.c -o _file_get_amodef.lo
_file_set_infof.o: file_set_infof.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_set_infof.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_infof.c -o _file_set_infof.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_infof.c -o _file_set_infof.o
_file_set_infof.lo: file_set_infof.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_set_infof.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_infof.c -o _file_set_infof.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_infof.c -o _file_set_infof.lo
_file_get_infof.o: file_get_infof.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_infof.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_infof.c -o _file_get_infof.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_infof.c -o _file_get_infof.o
_file_get_infof.lo: file_get_infof.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_infof.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_infof.c -o _file_get_infof.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_infof.c -o _file_get_infof.lo
_file_set_viewf.o: file_set_viewf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_set_viewf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_viewf.c -o _file_set_viewf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_viewf.c -o _file_set_viewf.o
_file_set_viewf.lo: file_set_viewf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_set_viewf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_viewf.c -o _file_set_viewf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_viewf.c -o _file_set_viewf.lo
_file_get_viewf.o: file_get_viewf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_viewf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_viewf.c -o _file_get_viewf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_viewf.c -o _file_get_viewf.o
_file_get_viewf.lo: file_get_viewf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_viewf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_viewf.c -o _file_get_viewf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_viewf.c -o _file_get_viewf.lo
_file_read_atf.o: file_read_atf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_atf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_atf.c -o _file_read_atf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_atf.c -o _file_read_atf.o
_file_read_atf.lo: file_read_atf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_atf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_atf.c -o _file_read_atf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_atf.c -o _file_read_atf.lo
_file_read_at_allf.o: file_read_at_allf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_at_allf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_allf.c -o _file_read_at_allf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_allf.c -o _file_read_at_allf.o
_file_read_at_allf.lo: file_read_at_allf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_at_allf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_allf.c -o _file_read_at_allf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_allf.c -o _file_read_at_allf.lo
_file_write_atf.o: file_write_atf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_atf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_atf.c -o _file_write_atf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_atf.c -o _file_write_atf.o
_file_write_atf.lo: file_write_atf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_atf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_atf.c -o _file_write_atf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_atf.c -o _file_write_atf.lo
_file_write_at_allf.o: file_write_at_allf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_at_allf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_allf.c -o _file_write_at_allf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_allf.c -o _file_write_at_allf.o
_file_write_at_allf.lo: file_write_at_allf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_at_allf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_allf.c -o _file_write_at_allf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_allf.c -o _file_write_at_allf.lo
_file_iread_atf.o: file_iread_atf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_iread_atf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iread_atf.c -o _file_iread_atf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iread_atf.c -o _file_iread_atf.o
_file_iread_atf.lo: file_iread_atf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_iread_atf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iread_atf.c -o _file_iread_atf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iread_atf.c -o _file_iread_atf.lo
_file_iwrite_atf.o: file_iwrite_atf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_iwrite_atf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwrite_atf.c -o _file_iwrite_atf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwrite_atf.c -o _file_iwrite_atf.o
_file_iwrite_atf.lo: file_iwrite_atf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_iwrite_atf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwrite_atf.c -o _file_iwrite_atf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwrite_atf.c -o _file_iwrite_atf.lo
_file_readf.o: file_readf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_readf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_readf.c -o _file_readf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_readf.c -o _file_readf.o
_file_readf.lo: file_readf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_readf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_readf.c -o _file_readf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_readf.c -o _file_readf.lo
_file_read_allf.o: file_read_allf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_allf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_allf.c -o _file_read_allf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_allf.c -o _file_read_allf.o
_file_read_allf.lo: file_read_allf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_allf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_allf.c -o _file_read_allf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_allf.c -o _file_read_allf.lo
_file_writef.o: file_writef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_writef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_writef.c -o _file_writef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_writef.c -o _file_writef.o
_file_writef.lo: file_writef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_writef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_writef.c -o _file_writef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_writef.c -o _file_writef.lo
_file_write_allf.o: file_write_allf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_allf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_allf.c -o _file_write_allf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_allf.c -o _file_write_allf.o
_file_write_allf.lo: file_write_allf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_allf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_allf.c -o _file_write_allf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_allf.c -o _file_write_allf.lo
_file_ireadf.o: file_ireadf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_ireadf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_ireadf.c -o _file_ireadf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_ireadf.c -o _file_ireadf.o
_file_ireadf.lo: file_ireadf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_ireadf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_ireadf.c -o _file_ireadf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_ireadf.c -o _file_ireadf.lo
_file_iwritef.o: file_iwritef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_iwritef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwritef.c -o _file_iwritef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwritef.c -o _file_iwritef.o
_file_iwritef.lo: file_iwritef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_iwritef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwritef.c -o _file_iwritef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwritef.c -o _file_iwritef.lo
_file_seekf.o: file_seekf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_seekf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_seekf.c -o _file_seekf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_seekf.c -o _file_seekf.o
_file_seekf.lo: file_seekf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_seekf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_seekf.c -o _file_seekf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_seekf.c -o _file_seekf.lo
_file_get_positionf.o: file_get_positionf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_positionf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_positionf.c -o _file_get_positionf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_positionf.c -o _file_get_positionf.o
_file_get_positionf.lo: file_get_positionf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_positionf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_positionf.c -o _file_get_positionf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_positionf.c -o _file_get_positionf.lo
_file_get_byte_offsetf.o: file_get_byte_offsetf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_byte_offsetf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_byte_offsetf.c -o _file_get_byte_offsetf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_byte_offsetf.c -o _file_get_byte_offsetf.o
_file_get_byte_offsetf.lo: file_get_byte_offsetf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_byte_offsetf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_byte_offsetf.c -o _file_get_byte_offsetf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_byte_offsetf.c -o _file_get_byte_offsetf.lo
_file_read_sharedf.o: file_read_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_sharedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_sharedf.c -o _file_read_sharedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_sharedf.c -o _file_read_sharedf.o
_file_read_sharedf.lo: file_read_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_sharedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_sharedf.c -o _file_read_sharedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_sharedf.c -o _file_read_sharedf.lo
_file_write_sharedf.o: file_write_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_sharedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_sharedf.c -o _file_write_sharedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_sharedf.c -o _file_write_sharedf.o
_file_write_sharedf.lo: file_write_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_sharedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_sharedf.c -o _file_write_sharedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_sharedf.c -o _file_write_sharedf.lo
_file_iread_sharedf.o: file_iread_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_iread_sharedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iread_sharedf.c -o _file_iread_sharedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iread_sharedf.c -o _file_iread_sharedf.o
_file_iread_sharedf.lo: file_iread_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_iread_sharedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iread_sharedf.c -o _file_iread_sharedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iread_sharedf.c -o _file_iread_sharedf.lo
_file_iwrite_sharedf.o: file_iwrite_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_iwrite_sharedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwrite_sharedf.c -o _file_iwrite_sharedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwrite_sharedf.c -o _file_iwrite_sharedf.o
_file_iwrite_sharedf.lo: file_iwrite_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_iwrite_sharedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwrite_sharedf.c -o _file_iwrite_sharedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_iwrite_sharedf.c -o _file_iwrite_sharedf.lo
_file_read_orderedf.o: file_read_orderedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_orderedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_orderedf.c -o _file_read_orderedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_orderedf.c -o _file_read_orderedf.o
_file_read_orderedf.lo: file_read_orderedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_orderedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_orderedf.c -o _file_read_orderedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_orderedf.c -o _file_read_orderedf.lo
_file_write_orderedf.o: file_write_orderedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_orderedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_orderedf.c -o _file_write_orderedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_orderedf.c -o _file_write_orderedf.o
_file_write_orderedf.lo: file_write_orderedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_orderedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_orderedf.c -o _file_write_orderedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_orderedf.c -o _file_write_orderedf.lo
_file_seek_sharedf.o: file_seek_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_seek_sharedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_seek_sharedf.c -o _file_seek_sharedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_seek_sharedf.c -o _file_seek_sharedf.o
_file_seek_sharedf.lo: file_seek_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_seek_sharedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_seek_sharedf.c -o _file_seek_sharedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_seek_sharedf.c -o _file_seek_sharedf.lo
_file_get_position_sharedf.o: file_get_position_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_position_sharedf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_position_sharedf.c -o _file_get_position_sharedf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_position_sharedf.c -o _file_get_position_sharedf.o
_file_get_position_sharedf.lo: file_get_position_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_position_sharedf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_position_sharedf.c -o _file_get_position_sharedf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_position_sharedf.c -o _file_get_position_sharedf.lo
_file_read_at_all_beginf.o: file_read_at_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_at_all_beginf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_all_beginf.c -o _file_read_at_all_beginf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_all_beginf.c -o _file_read_at_all_beginf.o
_file_read_at_all_beginf.lo: file_read_at_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_at_all_beginf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_all_beginf.c -o _file_read_at_all_beginf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_all_beginf.c -o _file_read_at_all_beginf.lo
_file_read_at_all_endf.o: file_read_at_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_at_all_endf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_all_endf.c -o _file_read_at_all_endf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_all_endf.c -o _file_read_at_all_endf.o
_file_read_at_all_endf.lo: file_read_at_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_at_all_endf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_all_endf.c -o _file_read_at_all_endf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_at_all_endf.c -o _file_read_at_all_endf.lo
_file_write_at_all_beginf.o: file_write_at_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_at_all_beginf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_all_beginf.c -o _file_write_at_all_beginf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_all_beginf.c -o _file_write_at_all_beginf.o
_file_write_at_all_beginf.lo: file_write_at_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_at_all_beginf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_all_beginf.c -o _file_write_at_all_beginf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_all_beginf.c -o _file_write_at_all_beginf.lo
_file_write_at_all_endf.o: file_write_at_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_at_all_endf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_all_endf.c -o _file_write_at_all_endf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_all_endf.c -o _file_write_at_all_endf.o
_file_write_at_all_endf.lo: file_write_at_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_at_all_endf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_all_endf.c -o _file_write_at_all_endf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_at_all_endf.c -o _file_write_at_all_endf.lo
_file_read_all_beginf.o: file_read_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_all_beginf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_all_beginf.c -o _file_read_all_beginf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_all_beginf.c -o _file_read_all_beginf.o
_file_read_all_beginf.lo: file_read_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_all_beginf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_all_beginf.c -o _file_read_all_beginf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_all_beginf.c -o _file_read_all_beginf.lo
_file_read_all_endf.o: file_read_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_all_endf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_all_endf.c -o _file_read_all_endf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_all_endf.c -o _file_read_all_endf.o
_file_read_all_endf.lo: file_read_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_all_endf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_all_endf.c -o _file_read_all_endf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_all_endf.c -o _file_read_all_endf.lo
_file_write_all_beginf.o: file_write_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_all_beginf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_all_beginf.c -o _file_write_all_beginf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_all_beginf.c -o _file_write_all_beginf.o
_file_write_all_beginf.lo: file_write_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_all_beginf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_all_beginf.c -o _file_write_all_beginf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_all_beginf.c -o _file_write_all_beginf.lo
_file_write_all_endf.o: file_write_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_all_endf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_all_endf.c -o _file_write_all_endf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_all_endf.c -o _file_write_all_endf.o
_file_write_all_endf.lo: file_write_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_all_endf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_all_endf.c -o _file_write_all_endf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_all_endf.c -o _file_write_all_endf.lo
_file_read_ordered_beginf.o: file_read_ordered_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_ordered_beginf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_ordered_beginf.c -o _file_read_ordered_beginf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_ordered_beginf.c -o _file_read_ordered_beginf.o
_file_read_ordered_beginf.lo: file_read_ordered_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_ordered_beginf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_ordered_beginf.c -o _file_read_ordered_beginf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_ordered_beginf.c -o _file_read_ordered_beginf.lo
_file_read_ordered_endf.o: file_read_ordered_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_read_ordered_endf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_ordered_endf.c -o _file_read_ordered_endf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_ordered_endf.c -o _file_read_ordered_endf.o
_file_read_ordered_endf.lo: file_read_ordered_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_read_ordered_endf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_ordered_endf.c -o _file_read_ordered_endf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_read_ordered_endf.c -o _file_read_ordered_endf.lo
_file_write_ordered_beginf.o: file_write_ordered_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_ordered_beginf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_ordered_beginf.c -o _file_write_ordered_beginf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_ordered_beginf.c -o _file_write_ordered_beginf.o
_file_write_ordered_beginf.lo: file_write_ordered_beginf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_ordered_beginf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_ordered_beginf.c -o _file_write_ordered_beginf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_ordered_beginf.c -o _file_write_ordered_beginf.lo
_file_write_ordered_endf.o: file_write_ordered_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_write_ordered_endf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_ordered_endf.c -o _file_write_ordered_endf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_ordered_endf.c -o _file_write_ordered_endf.o
_file_write_ordered_endf.lo: file_write_ordered_endf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_write_ordered_endf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_ordered_endf.c -o _file_write_ordered_endf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_write_ordered_endf.c -o _file_write_ordered_endf.lo
_file_get_type_extentf.o: file_get_type_extentf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_type_extentf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_type_extentf.c -o _file_get_type_extentf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_type_extentf.c -o _file_get_type_extentf.o
_file_get_type_extentf.lo: file_get_type_extentf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_type_extentf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_type_extentf.c -o _file_get_type_extentf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_type_extentf.c -o _file_get_type_extentf.lo
_register_datarepf.o: register_datarepf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/register_datarepf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/register_datarepf.c -o _register_datarepf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/register_datarepf.c -o _register_datarepf.o
_register_datarepf.lo: register_datarepf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/register_datarepf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/register_datarepf.c -o _register_datarepf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/register_datarepf.c -o _register_datarepf.lo
_file_set_atomicityf.o: file_set_atomicityf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_set_atomicityf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_atomicityf.c -o _file_set_atomicityf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_atomicityf.c -o _file_set_atomicityf.o
_file_set_atomicityf.lo: file_set_atomicityf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_set_atomicityf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_atomicityf.c -o _file_set_atomicityf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_atomicityf.c -o _file_set_atomicityf.lo
_file_get_atomicityf.o: file_get_atomicityf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_atomicityf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_atomicityf.c -o _file_get_atomicityf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_atomicityf.c -o _file_get_atomicityf.o
_file_get_atomicityf.lo: file_get_atomicityf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_atomicityf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_atomicityf.c -o _file_get_atomicityf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_atomicityf.c -o _file_get_atomicityf.lo
_file_syncf.o: file_syncf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_syncf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_syncf.c -o _file_syncf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_syncf.c -o _file_syncf.o
_file_syncf.lo: file_syncf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_syncf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_syncf.c -o _file_syncf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_syncf.c -o _file_syncf.lo
_initf.o: initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/initf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/initf.c -o _initf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/initf.c -o _initf.o
_initf.lo: initf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/initf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/initf.c -o _initf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/initf.c -o _initf.lo
_initthreadf.o: initthreadf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/initthreadf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/initthreadf.c -o _initthreadf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/initthreadf.c -o _initthreadf.o
_initthreadf.lo: initthreadf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/initthreadf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/initthreadf.c -o _initthreadf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/initthreadf.c -o _initthreadf.lo
_pcontrolf.o: pcontrolf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/pcontrolf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/pcontrolf.c -o _pcontrolf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/pcontrolf.c -o _pcontrolf.o
_pcontrolf.lo: pcontrolf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/pcontrolf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/pcontrolf.c -o _pcontrolf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/pcontrolf.c -o _pcontrolf.lo
_addressf.o: addressf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/addressf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/addressf.c -o _addressf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/addressf.c -o _addressf.o
_addressf.lo: addressf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/addressf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/addressf.c -o _addressf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/addressf.c -o _addressf.lo
_getaddressf.o: getaddressf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/getaddressf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/getaddressf.c -o _getaddressf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/getaddressf.c -o _getaddressf.o
_getaddressf.lo: getaddressf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/getaddressf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/getaddressf.c -o _getaddressf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/getaddressf.c -o _getaddressf.lo
_wtimef.o: wtimef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/wtimef.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/wtimef.c -o _wtimef.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/wtimef.c -o _wtimef.o
_wtimef.lo: wtimef.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/wtimef.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/wtimef.c -o _wtimef.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/wtimef.c -o _wtimef.lo
_wtickf.o: wtickf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/wtickf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/wtickf.c -o _wtickf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/wtickf.c -o _wtickf.o
_wtickf.lo: wtickf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/wtickf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/wtickf.c -o _wtickf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/wtickf.c -o _wtickf.lo
_keyval_createf.o: keyval_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/keyval_createf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/keyval_createf.c -o _keyval_createf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/keyval_createf.c -o _keyval_createf.o
_keyval_createf.lo: keyval_createf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/keyval_createf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/keyval_createf.c -o _keyval_createf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/keyval_createf.c -o _keyval_createf.lo
_dup_fnf.o: dup_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/dup_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_fnf.c -o _dup_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_fnf.c -o _dup_fnf.o
_dup_fnf.lo: dup_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/dup_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_fnf.c -o _dup_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_fnf.c -o _dup_fnf.lo
_null_del_fnf.o: null_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/null_del_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_del_fnf.c -o _null_del_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_del_fnf.c -o _null_del_fnf.o
_null_del_fnf.lo: null_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/null_del_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_del_fnf.c -o _null_del_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_del_fnf.c -o _null_del_fnf.lo
_null_copy_fnf.o: null_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/null_copy_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_copy_fnf.c -o _null_copy_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_copy_fnf.c -o _null_copy_fnf.o
_null_copy_fnf.lo: null_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/null_copy_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_copy_fnf.c -o _null_copy_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_copy_fnf.c -o _null_copy_fnf.lo
_dup_comm_fnf.o: dup_comm_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/dup_comm_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_comm_fnf.c -o _dup_comm_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_comm_fnf.c -o _dup_comm_fnf.o
_dup_comm_fnf.lo: dup_comm_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/dup_comm_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_comm_fnf.c -o _dup_comm_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_comm_fnf.c -o _dup_comm_fnf.lo
_null_comm_del_fnf.o: null_comm_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/null_comm_del_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_comm_del_fnf.c -o _null_comm_del_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_comm_del_fnf.c -o _null_comm_del_fnf.o
_null_comm_del_fnf.lo: null_comm_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/null_comm_del_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_comm_del_fnf.c -o _null_comm_del_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_comm_del_fnf.c -o _null_comm_del_fnf.lo
_null_comm_copy_fnf.o: null_comm_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/null_comm_copy_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_comm_copy_fnf.c -o _null_comm_copy_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_comm_copy_fnf.c -o _null_comm_copy_fnf.o
_null_comm_copy_fnf.lo: null_comm_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/null_comm_copy_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_comm_copy_fnf.c -o _null_comm_copy_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_comm_copy_fnf.c -o _null_comm_copy_fnf.lo
_dup_win_fnf.o: dup_win_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/dup_win_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_win_fnf.c -o _dup_win_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_win_fnf.c -o _dup_win_fnf.o
_dup_win_fnf.lo: dup_win_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/dup_win_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_win_fnf.c -o _dup_win_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_win_fnf.c -o _dup_win_fnf.lo
_null_win_del_fnf.o: null_win_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/null_win_del_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_win_del_fnf.c -o _null_win_del_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_win_del_fnf.c -o _null_win_del_fnf.o
_null_win_del_fnf.lo: null_win_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/null_win_del_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_win_del_fnf.c -o _null_win_del_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_win_del_fnf.c -o _null_win_del_fnf.lo
_null_win_copy_fnf.o: null_win_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/null_win_copy_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_win_copy_fnf.c -o _null_win_copy_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_win_copy_fnf.c -o _null_win_copy_fnf.o
_null_win_copy_fnf.lo: null_win_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/null_win_copy_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_win_copy_fnf.c -o _null_win_copy_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_win_copy_fnf.c -o _null_win_copy_fnf.lo
_dup_type_fnf.o: dup_type_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/dup_type_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_type_fnf.c -o _dup_type_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_type_fnf.c -o _dup_type_fnf.o
_dup_type_fnf.lo: dup_type_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/dup_type_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_type_fnf.c -o _dup_type_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/dup_type_fnf.c -o _dup_type_fnf.lo
_null_type_del_fnf.o: null_type_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/null_type_del_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_type_del_fnf.c -o _null_type_del_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_type_del_fnf.c -o _null_type_del_fnf.o
_null_type_del_fnf.lo: null_type_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/null_type_del_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_type_del_fnf.c -o _null_type_del_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_type_del_fnf.c -o _null_type_del_fnf.lo
_null_type_copy_fnf.o: null_type_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/null_type_copy_fnf.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_type_copy_fnf.c -o _null_type_copy_fnf.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/null_type_copy_fnf.c -o _null_type_copy_fnf.o
_null_type_copy_fnf.lo: null_type_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/null_type_copy_fnf.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_type_copy_fnf.c -o _null_type_copy_fnf.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/null_type_copy_fnf.c -o _null_type_copy_fnf.lo
_statusf2c.o: statusf2c.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/statusf2c.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/statusf2c.c -o _statusf2c.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/statusf2c.c -o _statusf2c.o
_statusf2c.lo: statusf2c.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/statusf2c.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/statusf2c.c -o _statusf2c.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/statusf2c.c -o _statusf2c.lo
_statusc2f.o: statusc2f.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/statusc2f.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/statusc2f.c -o _statusc2f.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/statusc2f.c -o _statusc2f.o
_statusc2f.lo: statusc2f.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/statusc2f.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/statusc2f.c -o _statusc2f.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/statusc2f.c -o _statusc2f.lo
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Install target
install:  FORCE_TARGET 
	if [ ! -d ${DESTDIR}${prefix} ] ; then $(MKDIR_P) ${DESTDIR}${prefix} ; fi
	if [ ! -d ${DESTDIR}${includedir} ] ; then $(MKDIR_P) ${DESTDIR}${includedir} ; fi
	$(INSTALL_DATA)  mpif.h ${DESTDIR}${includedir}/mpif.h

install-strip:
	$(MAKE) INSTALL_STRIP_FLAG=-s install
uninstall: 
	-rm -f ${DESTDIR}${includedir}/mpif.h
installcheck: 
# --------------------------------------------------------------------------
dependencies:
# --------------------------------------------------------------------------
SOURCES         =  sendf.c recvf.c get_countf.c bsendf.c ssendf.c rsendf.c bufattachf.c \
	bufdetachf.c isendf.c ibsendf.c issendf.c irsendf.c irecvf.c waitf.c testf.c \
	request_freef.c waitanyf.c testanyf.c waitallf.c testallf.c waitsomef.c testsomef.c \
	iprobef.c probef.c cancelf.c testcancelf.c send_initf.c bsend_initf.c ssend_initf.c \
	rsend_initf.c recv_initf.c startf.c startallf.c sendrecvf.c sndrcvrplf.c typecontigf.c \
	type_vectorf.c type_hvectorf.c type_indexedf.c type_hindexedf.c type_structf.c \
	type_extentf.c type_sizef.c type_lbf.c type_ubf.c type_commitf.c type_freef.c \
	get_elementsf.c packf.c unpackf.c pack_sizef.c barrierf.c bcastf.c gatherf.c gathervf.c \
	scatterf.c scattervf.c allgatherf.c allgathervf.c alltoallf.c alltoallvf.c reducef.c \
	op_createf.c op_freef.c allreducef.c redscatf.c scanf.c group_sizef.c group_rankf.c \
	grouptranksf.c group_comparef.c comm_groupf.c group_unionf.c groupinterf.c groupdifff.c \
	group_inclf.c group_exclf.c grouprinclf.c grouprexclf.c group_freef.c comm_sizef.c \
	comm_rankf.c comm_comparef.c comm_dupf.c comm_createf.c comm_splitf.c comm_freef.c \
	commtesticf.c commrsizef.c commrgroupf.c iccreatef.c icmergef.c keyval_freef.c \
	attr_putf.c attr_getf.c attr_deletef.c topo_testf.c cart_createf.c dims_createf.c \
	graph_createf.c graphdims_getf.c graph_getf.c cartdim_getf.c cart_getf.c cart_rankf.c \
	cart_coordsf.c grfnbcountf.c grfnbrsf.c cart_shiftf.c cart_subf.c cart_mapf.c \
	graph_mapf.c getpnamef.c get_versionf.c errhcreatef.c errhsetf.c errhgetf.c errhfreef.c \
	error_stringf.c error_classf.c finalizef.c initializedf.c abortf.c close_portf.c \
	comm_acceptf.c comm_connectf.c commdiscf.c commparentf.c comm_joinf.c comm_spawnf.c \
	spawnmultf.c lookup_namef.c open_portf.c publish_namef.c unpubnamef.c accumulatef.c \
	getf.c putf.c win_completef.c win_createf.c win_fencef.c win_freef.c win_get_groupf.c \
	win_lockf.c win_postf.c win_startf.c win_testf.c win_unlockf.c win_waitf.c alltoallwf.c \
	exscanf.c adderrclassf.c adderrcodef.c adderrstringf.c commcallerrf.c commnewkeyf.c \
	commdelattrf.c commfreekeyf.c comm_get_attrf.c commgetnamf.c comm_set_attrf.c \
	comm_set_namef.c filecallerrf.c greqcompletef.c greqstartf.c isthrmainf.c query_threadf.c \
	statgetclf.c statsetelf.c typenewkeyf.c typedelattrf.c type_dupf.c typefreekeyf.c \
	type_get_attrf.c typegetcntsf.c typegetenvf.c typegnamef.c typesetattrf.c typesetnamef.c \
	type_match_sizef.c wincallerrf.c winnewkeyf.c windelattrf.c winfreekeyf.c win_get_attrf.c \
	win_get_namef.c win_set_attrf.c win_set_namef.c alloc_memf.c commcreerrf.c commgeterrf.c \
	commseterrf.c filecreerrf.c filegeterrf.c fileseterrf.c finalizedf.c free_memf.c \
	info_createf.c info_deletef.c info_dupf.c info_freef.c info_getf.c infognkf.c \
	infognthkf.c infovallenf.c info_setf.c pack_externalf.c packesizef.c reqgetstatf.c \
	typedarrayf.c typechindf.c typechvecf.c typecindbf.c typecresizef.c typecstructf.c \
	typecsubarrf.c typegetextentf.c typegtextf.c unpackextf.c wincreerrf.c wingeterrf.c \
	winseterrf.c reduce_localf.c op_commutativef.c reduce_scatter_blockf.c \
	dist_graph_create_adjacentf.c dist_graph_createf.c dist_graph_neighbors_countf.c \
	dist_graph_neighborsf.c file_openf.c file_closef.c file_deletef.c file_set_sizef.c \
	file_preallocatef.c file_get_sizef.c file_get_groupf.c file_get_amodef.c file_set_infof.c \
	file_get_infof.c file_set_viewf.c file_get_viewf.c file_read_atf.c file_read_at_allf.c \
	file_write_atf.c file_write_at_allf.c file_iread_atf.c file_iwrite_atf.c file_readf.c \
	file_read_allf.c file_writef.c file_write_allf.c file_ireadf.c file_iwritef.c \
	file_seekf.c file_get_positionf.c file_get_byte_offsetf.c file_read_sharedf.c \
	file_write_sharedf.c file_iread_sharedf.c file_iwrite_sharedf.c file_read_orderedf.c \
	file_write_orderedf.c file_seek_sharedf.c file_get_position_sharedf.c \
	file_read_at_all_beginf.c file_read_at_all_endf.c file_write_at_all_beginf.c \
	file_write_at_all_endf.c file_read_all_beginf.c file_read_all_endf.c \
	file_write_all_beginf.c file_write_all_endf.c file_read_ordered_beginf.c \
	file_read_ordered_endf.c file_write_ordered_beginf.c file_write_ordered_endf.c \
	file_get_type_extentf.c register_datarepf.c file_set_atomicityf.c file_get_atomicityf.c \
	file_syncf.c initf.c initthreadf.c pcontrolf.c addressf.c getaddressf.c wtimef.c wtickf.c \
	keyval_createf.c dup_fnf.c null_del_fnf.c null_copy_fnf.c dup_comm_fnf.c \
	null_comm_del_fnf.c null_comm_copy_fnf.c dup_win_fnf.c null_win_del_fnf.c \
	null_win_copy_fnf.c dup_type_fnf.c null_type_del_fnf.c null_type_copy_fnf.c statusf2c.c \
	statusc2f.c setbot.c setbotf.f 
HEADERFILES     = $(HEADERS)
SOURCEFILES     = sendf.c recvf.c get_countf.c bsendf.c ssendf.c rsendf.c bufattachf.c \
	bufdetachf.c isendf.c ibsendf.c issendf.c irsendf.c irecvf.c waitf.c testf.c \
	request_freef.c waitanyf.c testanyf.c waitallf.c testallf.c waitsomef.c testsomef.c \
	iprobef.c probef.c cancelf.c testcancelf.c send_initf.c bsend_initf.c ssend_initf.c \
	rsend_initf.c recv_initf.c startf.c startallf.c sendrecvf.c sndrcvrplf.c typecontigf.c \
	type_vectorf.c type_hvectorf.c type_indexedf.c type_hindexedf.c type_structf.c \
	type_extentf.c type_sizef.c type_lbf.c type_ubf.c type_commitf.c type_freef.c \
	get_elementsf.c packf.c unpackf.c pack_sizef.c barrierf.c bcastf.c gatherf.c gathervf.c \
	scatterf.c scattervf.c allgatherf.c allgathervf.c alltoallf.c alltoallvf.c reducef.c \
	op_createf.c op_freef.c allreducef.c redscatf.c scanf.c group_sizef.c group_rankf.c \
	grouptranksf.c group_comparef.c comm_groupf.c group_unionf.c groupinterf.c groupdifff.c \
	group_inclf.c group_exclf.c grouprinclf.c grouprexclf.c group_freef.c comm_sizef.c \
	comm_rankf.c comm_comparef.c comm_dupf.c comm_createf.c comm_splitf.c comm_freef.c \
	commtesticf.c commrsizef.c commrgroupf.c iccreatef.c icmergef.c keyval_freef.c \
	attr_putf.c attr_getf.c attr_deletef.c topo_testf.c cart_createf.c dims_createf.c \
	graph_createf.c graphdims_getf.c graph_getf.c cartdim_getf.c cart_getf.c cart_rankf.c \
	cart_coordsf.c grfnbcountf.c grfnbrsf.c cart_shiftf.c cart_subf.c cart_mapf.c \
	graph_mapf.c getpnamef.c get_versionf.c errhcreatef.c errhsetf.c errhgetf.c errhfreef.c \
	error_stringf.c error_classf.c finalizef.c initializedf.c abortf.c close_portf.c \
	comm_acceptf.c comm_connectf.c commdiscf.c commparentf.c comm_joinf.c comm_spawnf.c \
	spawnmultf.c lookup_namef.c open_portf.c publish_namef.c unpubnamef.c accumulatef.c \
	getf.c putf.c win_completef.c win_createf.c win_fencef.c win_freef.c win_get_groupf.c \
	win_lockf.c win_postf.c win_startf.c win_testf.c win_unlockf.c win_waitf.c alltoallwf.c \
	exscanf.c adderrclassf.c adderrcodef.c adderrstringf.c commcallerrf.c commnewkeyf.c \
	commdelattrf.c commfreekeyf.c comm_get_attrf.c commgetnamf.c comm_set_attrf.c \
	comm_set_namef.c filecallerrf.c greqcompletef.c greqstartf.c isthrmainf.c query_threadf.c \
	statgetclf.c statsetelf.c typenewkeyf.c typedelattrf.c type_dupf.c typefreekeyf.c \
	type_get_attrf.c typegetcntsf.c typegetenvf.c typegnamef.c typesetattrf.c typesetnamef.c \
	type_match_sizef.c wincallerrf.c winnewkeyf.c windelattrf.c winfreekeyf.c win_get_attrf.c \
	win_get_namef.c win_set_attrf.c win_set_namef.c alloc_memf.c commcreerrf.c commgeterrf.c \
	commseterrf.c filecreerrf.c filegeterrf.c fileseterrf.c finalizedf.c free_memf.c \
	info_createf.c info_deletef.c info_dupf.c info_freef.c info_getf.c infognkf.c \
	infognthkf.c infovallenf.c info_setf.c pack_externalf.c packesizef.c reqgetstatf.c \
	typedarrayf.c typechindf.c typechvecf.c typecindbf.c typecresizef.c typecstructf.c \
	typecsubarrf.c typegetextentf.c typegtextf.c unpackextf.c wincreerrf.c wingeterrf.c \
	winseterrf.c reduce_localf.c op_commutativef.c reduce_scatter_blockf.c \
	dist_graph_create_adjacentf.c dist_graph_createf.c dist_graph_neighbors_countf.c \
	dist_graph_neighborsf.c file_openf.c file_closef.c file_deletef.c file_set_sizef.c \
	file_preallocatef.c file_get_sizef.c file_get_groupf.c file_get_amodef.c file_set_infof.c \
	file_get_infof.c file_set_viewf.c file_get_viewf.c file_read_atf.c file_read_at_allf.c \
	file_write_atf.c file_write_at_allf.c file_iread_atf.c file_iwrite_atf.c file_readf.c \
	file_read_allf.c file_writef.c file_write_allf.c file_ireadf.c file_iwritef.c \
	file_seekf.c file_get_positionf.c file_get_byte_offsetf.c file_read_sharedf.c \
	file_write_sharedf.c file_iread_sharedf.c file_iwrite_sharedf.c file_read_orderedf.c \
	file_write_orderedf.c file_seek_sharedf.c file_get_position_sharedf.c \
	file_read_at_all_beginf.c file_read_at_all_endf.c file_write_at_all_beginf.c \
	file_write_at_all_endf.c file_read_all_beginf.c file_read_all_endf.c \
	file_write_all_beginf.c file_write_all_endf.c file_read_ordered_beginf.c \
	file_read_ordered_endf.c file_write_ordered_beginf.c file_write_ordered_endf.c \
	file_get_type_extentf.c register_datarepf.c file_set_atomicityf.c file_get_atomicityf.c \
	file_syncf.c initf.c initthreadf.c pcontrolf.c addressf.c getaddressf.c wtimef.c wtickf.c \
	keyval_createf.c dup_fnf.c null_del_fnf.c null_copy_fnf.c dup_comm_fnf.c \
	null_comm_del_fnf.c null_comm_copy_fnf.c dup_win_fnf.c null_win_del_fnf.c \
	null_win_copy_fnf.c dup_type_fnf.c null_type_del_fnf.c null_type_copy_fnf.c statusf2c.c \
	statusc2f.c $(abs_builddir)/setbot.c $(abs_builddir)/setbotf.f 
# --------------------------------------------------------------------------
# DO NOT EDIT
# This file created by buildiface 



maint-clean:
	rm -f ${mpi_sources} fproto.h
# Documentation sources
distclean-local:
	rm -f mpif_bottom.h
	rm -f ../../../src/include/mpif.h
	rm -f ../../../bin/mpif77
maintainerclean-local:
	rm -f sendf.c recvf.c get_countf.c bsendf.c ssendf.c rsendf.c bufattachf.c \
	bufdetachf.c isendf.c ibsendf.c issendf.c irsendf.c irecvf.c waitf.c \
	testf.c request_freef.c waitanyf.c testanyf.c waitallf.c 
	rm -f testallf.c waitsomef.c testsomef.c iprobef.c probef.c cancelf.c \
	testcancelf.c send_initf.c bsend_initf.c ssend_initf.c rsend_initf.c \
	recv_initf.c startf.c startallf.c sendrecvf.c sndrcvrplf.c \
	typecontigf.c type_vectorf.c type_hvectorf.c type_indexedf.c 
	rm -f type_hindexedf.c type_structf.c type_extentf.c type_sizef.c type_lbf.c \
	type_ubf.c type_commitf.c type_freef.c get_elementsf.c packf.c \
	unpackf.c pack_sizef.c barrierf.c bcastf.c gatherf.c gathervf.c \
	scatterf.c scattervf.c allgatherf.c allgathervf.c 
	rm -f alltoallf.c alltoallvf.c reducef.c op_createf.c op_freef.c allreducef.c \
	redscatf.c scanf.c group_sizef.c group_rankf.c grouptranksf.c \
	group_comparef.c comm_groupf.c group_unionf.c groupinterf.c \
	groupdifff.c group_inclf.c group_exclf.c grouprinclf.c grouprexclf.c 
	rm -f group_freef.c comm_sizef.c comm_rankf.c comm_comparef.c comm_dupf.c \
	comm_createf.c comm_splitf.c comm_freef.c commtesticf.c commrsizef.c \
	commrgroupf.c iccreatef.c icmergef.c keyval_freef.c attr_putf.c \
	attr_getf.c attr_deletef.c topo_testf.c cart_createf.c dims_createf.c 
	rm -f graph_createf.c graphdims_getf.c graph_getf.c cartdim_getf.c cart_getf.c \
	cart_rankf.c cart_coordsf.c grfnbcountf.c grfnbrsf.c cart_shiftf.c \
	cart_subf.c cart_mapf.c graph_mapf.c getpnamef.c get_versionf.c \
	errhcreatef.c errhsetf.c errhgetf.c errhfreef.c error_stringf.c 
	rm -f error_classf.c finalizef.c initializedf.c abortf.c close_portf.c \
	comm_acceptf.c comm_connectf.c commdiscf.c commparentf.c comm_joinf.c \
	comm_spawnf.c spawnmultf.c lookup_namef.c open_portf.c publish_namef.c \
	unpubnamef.c accumulatef.c getf.c putf.c win_completef.c 
	rm -f win_createf.c win_fencef.c win_freef.c win_get_groupf.c win_lockf.c \
	win_postf.c win_startf.c win_testf.c win_unlockf.c win_waitf.c \
	alltoallwf.c exscanf.c adderrclassf.c adderrcodef.c adderrstringf.c \
	commcallerrf.c commnewkeyf.c commdelattrf.c commfreekeyf.c \
	comm_get_attrf.c 
	rm -f commgetnamf.c comm_set_attrf.c comm_set_namef.c filecallerrf.c \
	greqcompletef.c greqstartf.c isthrmainf.c query_threadf.c statgetclf.c \
	statsetelf.c typenewkeyf.c typedelattrf.c type_dupf.c typefreekeyf.c \
	type_get_attrf.c typegetcntsf.c typegetenvf.c typegnamef.c \
	typesetattrf.c typesetnamef.c 
	rm -f type_match_sizef.c wincallerrf.c winnewkeyf.c windelattrf.c \
	winfreekeyf.c win_get_attrf.c win_get_namef.c win_set_attrf.c \
	win_set_namef.c alloc_memf.c commcreerrf.c commgeterrf.c commseterrf.c \
	filecreerrf.c filegeterrf.c fileseterrf.c finalizedf.c free_memf.c \
	info_createf.c info_deletef.c 
	rm -f info_dupf.c info_freef.c info_getf.c infognkf.c infognthkf.c \
	infovallenf.c info_setf.c pack_externalf.c packesizef.c reqgetstatf.c \
	typedarrayf.c typechindf.c typechvecf.c typecindbf.c typecresizef.c \
	typecstructf.c typecsubarrf.c typegetextentf.c typegtextf.c \
	unpackextf.c 
	rm -f wincreerrf.c wingeterrf.c winseterrf.c reduce_localf.c op_commutativef.c \
	reduce_scatter_blockf.c dist_graph_create_adjacentf.c \
	dist_graph_createf.c dist_graph_neighbors_countf.c \
	dist_graph_neighborsf.c file_openf.c file_closef.c file_deletef.c \
	file_set_sizef.c file_preallocatef.c file_get_sizef.c file_get_groupf.c \
	file_get_amodef.c file_set_infof.c file_get_infof.c 
	rm -f file_set_viewf.c file_get_viewf.c file_read_atf.c file_read_at_allf.c \
	file_write_atf.c file_write_at_allf.c file_iread_atf.c \
	file_iwrite_atf.c file_readf.c file_read_allf.c file_writef.c \
	file_write_allf.c file_ireadf.c file_iwritef.c file_seekf.c \
	file_get_positionf.c file_get_byte_offsetf.c file_read_sharedf.c \
	file_write_sharedf.c file_iread_sharedf.c 
	rm -f file_iwrite_sharedf.c file_read_orderedf.c file_write_orderedf.c \
	file_seek_sharedf.c file_get_position_sharedf.c \
	file_read_at_all_beginf.c file_read_at_all_endf.c \
	file_write_at_all_beginf.c file_write_at_all_endf.c \
	file_read_all_beginf.c file_read_all_endf.c file_write_all_beginf.c \
	file_write_all_endf.c file_read_ordered_beginf.c \
	file_read_ordered_endf.c file_write_ordered_beginf.c \
	file_write_ordered_endf.c file_get_type_extentf.c register_datarepf.c \
	file_set_atomicityf.c 
	rm -f file_get_atomicityf.c file_syncf.c initf.c initthreadf.c pcontrolf.c \
	addressf.c getaddressf.c wtimef.c wtickf.c keyval_createf.c dup_fnf.c \
	null_del_fnf.c null_copy_fnf.c dup_comm_fnf.c null_comm_del_fnf.c \
	null_comm_copy_fnf.c dup_win_fnf.c null_win_del_fnf.c \
	null_win_copy_fnf.c dup_type_fnf.c 
	rm -f null_type_del_fnf.c null_type_copy_fnf.c statusf2c.c statusc2f.c 
	rm -f Makefile.sm
_wsendf.o: sendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wsendf.o -c -D... $(srcdir)/sendf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sendf.c" ; \
	fi
	@$(C_COMPILE) -o _wsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sendf.c
_wsendf.lo: sendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swsendf.o -c -D... $(srcdir)/sendf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sendf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sendf.c
	@mv -f _swsendf.o _wsendf.lo
_wrecvf.o: recvf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wrecvf.o -c -D... $(srcdir)/recvf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wrecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/recvf.c" ; \
	fi
	@$(C_COMPILE) -o _wrecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/recvf.c
_wrecvf.lo: recvf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swrecvf.o -c -D... $(srcdir)/recvf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swrecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/recvf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swrecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/recvf.c
	@mv -f _swrecvf.o _wrecvf.lo
_wget_countf.o: get_countf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wget_countf.o -c -D... $(srcdir)/get_countf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wget_countf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_countf.c" ; \
	fi
	@$(C_COMPILE) -o _wget_countf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_countf.c
_wget_countf.lo: get_countf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swget_countf.o -c -D... $(srcdir)/get_countf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swget_countf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_countf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swget_countf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_countf.c
	@mv -f _swget_countf.o _wget_countf.lo
_wbsendf.o: bsendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wbsendf.o -c -D... $(srcdir)/bsendf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wbsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bsendf.c" ; \
	fi
	@$(C_COMPILE) -o _wbsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bsendf.c
_wbsendf.lo: bsendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swbsendf.o -c -D... $(srcdir)/bsendf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swbsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bsendf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swbsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bsendf.c
	@mv -f _swbsendf.o _wbsendf.lo
_wssendf.o: ssendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wssendf.o -c -D... $(srcdir)/ssendf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wssendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ssendf.c" ; \
	fi
	@$(C_COMPILE) -o _wssendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ssendf.c
_wssendf.lo: ssendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swssendf.o -c -D... $(srcdir)/ssendf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swssendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ssendf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swssendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ssendf.c
	@mv -f _swssendf.o _wssendf.lo
_wrsendf.o: rsendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wrsendf.o -c -D... $(srcdir)/rsendf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wrsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/rsendf.c" ; \
	fi
	@$(C_COMPILE) -o _wrsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/rsendf.c
_wrsendf.lo: rsendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swrsendf.o -c -D... $(srcdir)/rsendf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swrsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/rsendf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swrsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/rsendf.c
	@mv -f _swrsendf.o _wrsendf.lo
_wbufattachf.o: bufattachf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wbufattachf.o -c -D... $(srcdir)/bufattachf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wbufattachf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bufattachf.c" ; \
	fi
	@$(C_COMPILE) -o _wbufattachf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bufattachf.c
_wbufattachf.lo: bufattachf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swbufattachf.o -c -D... $(srcdir)/bufattachf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swbufattachf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bufattachf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swbufattachf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bufattachf.c
	@mv -f _swbufattachf.o _wbufattachf.lo
_wbufdetachf.o: bufdetachf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wbufdetachf.o -c -D... $(srcdir)/bufdetachf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wbufdetachf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bufdetachf.c" ; \
	fi
	@$(C_COMPILE) -o _wbufdetachf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bufdetachf.c
_wbufdetachf.lo: bufdetachf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swbufdetachf.o -c -D... $(srcdir)/bufdetachf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swbufdetachf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bufdetachf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swbufdetachf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bufdetachf.c
	@mv -f _swbufdetachf.o _wbufdetachf.lo
_wisendf.o: isendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wisendf.o -c -D... $(srcdir)/isendf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wisendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/isendf.c" ; \
	fi
	@$(C_COMPILE) -o _wisendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/isendf.c
_wisendf.lo: isendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swisendf.o -c -D... $(srcdir)/isendf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swisendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/isendf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swisendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/isendf.c
	@mv -f _swisendf.o _wisendf.lo
_wibsendf.o: ibsendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wibsendf.o -c -D... $(srcdir)/ibsendf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wibsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ibsendf.c" ; \
	fi
	@$(C_COMPILE) -o _wibsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ibsendf.c
_wibsendf.lo: ibsendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swibsendf.o -c -D... $(srcdir)/ibsendf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swibsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ibsendf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swibsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ibsendf.c
	@mv -f _swibsendf.o _wibsendf.lo
_wissendf.o: issendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wissendf.o -c -D... $(srcdir)/issendf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wissendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/issendf.c" ; \
	fi
	@$(C_COMPILE) -o _wissendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/issendf.c
_wissendf.lo: issendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swissendf.o -c -D... $(srcdir)/issendf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swissendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/issendf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swissendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/issendf.c
	@mv -f _swissendf.o _wissendf.lo
_wirsendf.o: irsendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wirsendf.o -c -D... $(srcdir)/irsendf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wirsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/irsendf.c" ; \
	fi
	@$(C_COMPILE) -o _wirsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/irsendf.c
_wirsendf.lo: irsendf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swirsendf.o -c -D... $(srcdir)/irsendf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swirsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/irsendf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swirsendf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/irsendf.c
	@mv -f _swirsendf.o _wirsendf.lo
_wirecvf.o: irecvf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wirecvf.o -c -D... $(srcdir)/irecvf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wirecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/irecvf.c" ; \
	fi
	@$(C_COMPILE) -o _wirecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/irecvf.c
_wirecvf.lo: irecvf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swirecvf.o -c -D... $(srcdir)/irecvf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swirecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/irecvf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swirecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/irecvf.c
	@mv -f _swirecvf.o _wirecvf.lo
_wwaitf.o: waitf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwaitf.o -c -D... $(srcdir)/waitf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwaitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitf.c" ; \
	fi
	@$(C_COMPILE) -o _wwaitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitf.c
_wwaitf.lo: waitf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwaitf.o -c -D... $(srcdir)/waitf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwaitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwaitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitf.c
	@mv -f _swwaitf.o _wwaitf.lo
_wtestf.o: testf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtestf.o -c -D... $(srcdir)/testf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtestf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testf.c" ; \
	fi
	@$(C_COMPILE) -o _wtestf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testf.c
_wtestf.lo: testf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtestf.o -c -D... $(srcdir)/testf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtestf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtestf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testf.c
	@mv -f _swtestf.o _wtestf.lo
_wrequest_freef.o: request_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wrequest_freef.o -c -D... $(srcdir)/request_freef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wrequest_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/request_freef.c" ; \
	fi
	@$(C_COMPILE) -o _wrequest_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/request_freef.c
_wrequest_freef.lo: request_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swrequest_freef.o -c -D... $(srcdir)/request_freef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swrequest_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/request_freef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swrequest_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/request_freef.c
	@mv -f _swrequest_freef.o _wrequest_freef.lo
_wwaitanyf.o: waitanyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwaitanyf.o -c -D... $(srcdir)/waitanyf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwaitanyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitanyf.c" ; \
	fi
	@$(C_COMPILE) -o _wwaitanyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitanyf.c
_wwaitanyf.lo: waitanyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwaitanyf.o -c -D... $(srcdir)/waitanyf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwaitanyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitanyf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwaitanyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitanyf.c
	@mv -f _swwaitanyf.o _wwaitanyf.lo
_wtestanyf.o: testanyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtestanyf.o -c -D... $(srcdir)/testanyf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtestanyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testanyf.c" ; \
	fi
	@$(C_COMPILE) -o _wtestanyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testanyf.c
_wtestanyf.lo: testanyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtestanyf.o -c -D... $(srcdir)/testanyf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtestanyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testanyf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtestanyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testanyf.c
	@mv -f _swtestanyf.o _wtestanyf.lo
_wwaitallf.o: waitallf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwaitallf.o -c -D... $(srcdir)/waitallf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwaitallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitallf.c" ; \
	fi
	@$(C_COMPILE) -o _wwaitallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitallf.c
_wwaitallf.lo: waitallf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwaitallf.o -c -D... $(srcdir)/waitallf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwaitallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitallf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwaitallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitallf.c
	@mv -f _swwaitallf.o _wwaitallf.lo
_wtestallf.o: testallf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtestallf.o -c -D... $(srcdir)/testallf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtestallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testallf.c" ; \
	fi
	@$(C_COMPILE) -o _wtestallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testallf.c
_wtestallf.lo: testallf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtestallf.o -c -D... $(srcdir)/testallf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtestallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testallf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtestallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testallf.c
	@mv -f _swtestallf.o _wtestallf.lo
_wwaitsomef.o: waitsomef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwaitsomef.o -c -D... $(srcdir)/waitsomef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwaitsomef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitsomef.c" ; \
	fi
	@$(C_COMPILE) -o _wwaitsomef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitsomef.c
_wwaitsomef.lo: waitsomef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwaitsomef.o -c -D... $(srcdir)/waitsomef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwaitsomef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitsomef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwaitsomef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/waitsomef.c
	@mv -f _swwaitsomef.o _wwaitsomef.lo
_wtestsomef.o: testsomef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtestsomef.o -c -D... $(srcdir)/testsomef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtestsomef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testsomef.c" ; \
	fi
	@$(C_COMPILE) -o _wtestsomef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testsomef.c
_wtestsomef.lo: testsomef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtestsomef.o -c -D... $(srcdir)/testsomef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtestsomef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testsomef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtestsomef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testsomef.c
	@mv -f _swtestsomef.o _wtestsomef.lo
_wiprobef.o: iprobef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wiprobef.o -c -D... $(srcdir)/iprobef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wiprobef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/iprobef.c" ; \
	fi
	@$(C_COMPILE) -o _wiprobef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/iprobef.c
_wiprobef.lo: iprobef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swiprobef.o -c -D... $(srcdir)/iprobef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swiprobef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/iprobef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swiprobef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/iprobef.c
	@mv -f _swiprobef.o _wiprobef.lo
_wprobef.o: probef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wprobef.o -c -D... $(srcdir)/probef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wprobef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/probef.c" ; \
	fi
	@$(C_COMPILE) -o _wprobef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/probef.c
_wprobef.lo: probef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swprobef.o -c -D... $(srcdir)/probef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swprobef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/probef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swprobef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/probef.c
	@mv -f _swprobef.o _wprobef.lo
_wcancelf.o: cancelf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcancelf.o -c -D... $(srcdir)/cancelf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcancelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cancelf.c" ; \
	fi
	@$(C_COMPILE) -o _wcancelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cancelf.c
_wcancelf.lo: cancelf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcancelf.o -c -D... $(srcdir)/cancelf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcancelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cancelf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcancelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cancelf.c
	@mv -f _swcancelf.o _wcancelf.lo
_wtestcancelf.o: testcancelf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtestcancelf.o -c -D... $(srcdir)/testcancelf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtestcancelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testcancelf.c" ; \
	fi
	@$(C_COMPILE) -o _wtestcancelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testcancelf.c
_wtestcancelf.lo: testcancelf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtestcancelf.o -c -D... $(srcdir)/testcancelf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtestcancelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testcancelf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtestcancelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/testcancelf.c
	@mv -f _swtestcancelf.o _wtestcancelf.lo
_wsend_initf.o: send_initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wsend_initf.o -c -D... $(srcdir)/send_initf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/send_initf.c" ; \
	fi
	@$(C_COMPILE) -o _wsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/send_initf.c
_wsend_initf.lo: send_initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swsend_initf.o -c -D... $(srcdir)/send_initf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/send_initf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/send_initf.c
	@mv -f _swsend_initf.o _wsend_initf.lo
_wbsend_initf.o: bsend_initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wbsend_initf.o -c -D... $(srcdir)/bsend_initf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wbsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bsend_initf.c" ; \
	fi
	@$(C_COMPILE) -o _wbsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bsend_initf.c
_wbsend_initf.lo: bsend_initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swbsend_initf.o -c -D... $(srcdir)/bsend_initf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swbsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bsend_initf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swbsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bsend_initf.c
	@mv -f _swbsend_initf.o _wbsend_initf.lo
_wssend_initf.o: ssend_initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wssend_initf.o -c -D... $(srcdir)/ssend_initf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wssend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ssend_initf.c" ; \
	fi
	@$(C_COMPILE) -o _wssend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ssend_initf.c
_wssend_initf.lo: ssend_initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swssend_initf.o -c -D... $(srcdir)/ssend_initf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swssend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ssend_initf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swssend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/ssend_initf.c
	@mv -f _swssend_initf.o _wssend_initf.lo
_wrsend_initf.o: rsend_initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wrsend_initf.o -c -D... $(srcdir)/rsend_initf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wrsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/rsend_initf.c" ; \
	fi
	@$(C_COMPILE) -o _wrsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/rsend_initf.c
_wrsend_initf.lo: rsend_initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swrsend_initf.o -c -D... $(srcdir)/rsend_initf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swrsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/rsend_initf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swrsend_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/rsend_initf.c
	@mv -f _swrsend_initf.o _wrsend_initf.lo
_wrecv_initf.o: recv_initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wrecv_initf.o -c -D... $(srcdir)/recv_initf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wrecv_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/recv_initf.c" ; \
	fi
	@$(C_COMPILE) -o _wrecv_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/recv_initf.c
_wrecv_initf.lo: recv_initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swrecv_initf.o -c -D... $(srcdir)/recv_initf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swrecv_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/recv_initf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swrecv_initf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/recv_initf.c
	@mv -f _swrecv_initf.o _wrecv_initf.lo
_wstartf.o: startf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wstartf.o -c -D... $(srcdir)/startf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wstartf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/startf.c" ; \
	fi
	@$(C_COMPILE) -o _wstartf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/startf.c
_wstartf.lo: startf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swstartf.o -c -D... $(srcdir)/startf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swstartf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/startf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swstartf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/startf.c
	@mv -f _swstartf.o _wstartf.lo
_wstartallf.o: startallf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wstartallf.o -c -D... $(srcdir)/startallf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wstartallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/startallf.c" ; \
	fi
	@$(C_COMPILE) -o _wstartallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/startallf.c
_wstartallf.lo: startallf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swstartallf.o -c -D... $(srcdir)/startallf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swstartallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/startallf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swstartallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/startallf.c
	@mv -f _swstartallf.o _wstartallf.lo
_wsendrecvf.o: sendrecvf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wsendrecvf.o -c -D... $(srcdir)/sendrecvf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wsendrecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sendrecvf.c" ; \
	fi
	@$(C_COMPILE) -o _wsendrecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sendrecvf.c
_wsendrecvf.lo: sendrecvf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swsendrecvf.o -c -D... $(srcdir)/sendrecvf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swsendrecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sendrecvf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swsendrecvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sendrecvf.c
	@mv -f _swsendrecvf.o _wsendrecvf.lo
_wsndrcvrplf.o: sndrcvrplf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wsndrcvrplf.o -c -D... $(srcdir)/sndrcvrplf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wsndrcvrplf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sndrcvrplf.c" ; \
	fi
	@$(C_COMPILE) -o _wsndrcvrplf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sndrcvrplf.c
_wsndrcvrplf.lo: sndrcvrplf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swsndrcvrplf.o -c -D... $(srcdir)/sndrcvrplf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swsndrcvrplf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sndrcvrplf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swsndrcvrplf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/sndrcvrplf.c
	@mv -f _swsndrcvrplf.o _wsndrcvrplf.lo
_wtypecontigf.o: typecontigf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypecontigf.o -c -D... $(srcdir)/typecontigf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypecontigf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecontigf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypecontigf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecontigf.c
_wtypecontigf.lo: typecontigf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypecontigf.o -c -D... $(srcdir)/typecontigf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypecontigf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecontigf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypecontigf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecontigf.c
	@mv -f _swtypecontigf.o _wtypecontigf.lo
_wtype_vectorf.o: type_vectorf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_vectorf.o -c -D... $(srcdir)/type_vectorf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_vectorf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_vectorf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_vectorf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_vectorf.c
_wtype_vectorf.lo: type_vectorf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_vectorf.o -c -D... $(srcdir)/type_vectorf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_vectorf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_vectorf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_vectorf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_vectorf.c
	@mv -f _swtype_vectorf.o _wtype_vectorf.lo
_wtype_hvectorf.o: type_hvectorf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_hvectorf.o -c -D... $(srcdir)/type_hvectorf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_hvectorf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_hvectorf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_hvectorf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_hvectorf.c
_wtype_hvectorf.lo: type_hvectorf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_hvectorf.o -c -D... $(srcdir)/type_hvectorf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_hvectorf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_hvectorf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_hvectorf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_hvectorf.c
	@mv -f _swtype_hvectorf.o _wtype_hvectorf.lo
_wtype_indexedf.o: type_indexedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_indexedf.o -c -D... $(srcdir)/type_indexedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_indexedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_indexedf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_indexedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_indexedf.c
_wtype_indexedf.lo: type_indexedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_indexedf.o -c -D... $(srcdir)/type_indexedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_indexedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_indexedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_indexedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_indexedf.c
	@mv -f _swtype_indexedf.o _wtype_indexedf.lo
_wtype_hindexedf.o: type_hindexedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_hindexedf.o -c -D... $(srcdir)/type_hindexedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_hindexedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_hindexedf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_hindexedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_hindexedf.c
_wtype_hindexedf.lo: type_hindexedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_hindexedf.o -c -D... $(srcdir)/type_hindexedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_hindexedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_hindexedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_hindexedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_hindexedf.c
	@mv -f _swtype_hindexedf.o _wtype_hindexedf.lo
_wtype_structf.o: type_structf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_structf.o -c -D... $(srcdir)/type_structf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_structf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_structf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_structf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_structf.c
_wtype_structf.lo: type_structf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_structf.o -c -D... $(srcdir)/type_structf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_structf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_structf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_structf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_structf.c
	@mv -f _swtype_structf.o _wtype_structf.lo
_wtype_extentf.o: type_extentf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_extentf.o -c -D... $(srcdir)/type_extentf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_extentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_extentf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_extentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_extentf.c
_wtype_extentf.lo: type_extentf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_extentf.o -c -D... $(srcdir)/type_extentf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_extentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_extentf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_extentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_extentf.c
	@mv -f _swtype_extentf.o _wtype_extentf.lo
_wtype_sizef.o: type_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_sizef.o -c -D... $(srcdir)/type_sizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_sizef.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_sizef.c
_wtype_sizef.lo: type_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_sizef.o -c -D... $(srcdir)/type_sizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_sizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_sizef.c
	@mv -f _swtype_sizef.o _wtype_sizef.lo
_wtype_lbf.o: type_lbf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_lbf.o -c -D... $(srcdir)/type_lbf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_lbf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_lbf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_lbf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_lbf.c
_wtype_lbf.lo: type_lbf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_lbf.o -c -D... $(srcdir)/type_lbf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_lbf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_lbf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_lbf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_lbf.c
	@mv -f _swtype_lbf.o _wtype_lbf.lo
_wtype_ubf.o: type_ubf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_ubf.o -c -D... $(srcdir)/type_ubf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_ubf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_ubf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_ubf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_ubf.c
_wtype_ubf.lo: type_ubf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_ubf.o -c -D... $(srcdir)/type_ubf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_ubf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_ubf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_ubf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_ubf.c
	@mv -f _swtype_ubf.o _wtype_ubf.lo
_wtype_commitf.o: type_commitf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_commitf.o -c -D... $(srcdir)/type_commitf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_commitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_commitf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_commitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_commitf.c
_wtype_commitf.lo: type_commitf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_commitf.o -c -D... $(srcdir)/type_commitf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_commitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_commitf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_commitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_commitf.c
	@mv -f _swtype_commitf.o _wtype_commitf.lo
_wtype_freef.o: type_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_freef.o -c -D... $(srcdir)/type_freef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_freef.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_freef.c
_wtype_freef.lo: type_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_freef.o -c -D... $(srcdir)/type_freef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_freef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_freef.c
	@mv -f _swtype_freef.o _wtype_freef.lo
_wget_elementsf.o: get_elementsf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wget_elementsf.o -c -D... $(srcdir)/get_elementsf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wget_elementsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_elementsf.c" ; \
	fi
	@$(C_COMPILE) -o _wget_elementsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_elementsf.c
_wget_elementsf.lo: get_elementsf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swget_elementsf.o -c -D... $(srcdir)/get_elementsf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swget_elementsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_elementsf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swget_elementsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_elementsf.c
	@mv -f _swget_elementsf.o _wget_elementsf.lo
_wpackf.o: packf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wpackf.o -c -D... $(srcdir)/packf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wpackf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/packf.c" ; \
	fi
	@$(C_COMPILE) -o _wpackf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/packf.c
_wpackf.lo: packf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swpackf.o -c -D... $(srcdir)/packf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swpackf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/packf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swpackf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/packf.c
	@mv -f _swpackf.o _wpackf.lo
_wunpackf.o: unpackf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wunpackf.o -c -D... $(srcdir)/unpackf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wunpackf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpackf.c" ; \
	fi
	@$(C_COMPILE) -o _wunpackf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpackf.c
_wunpackf.lo: unpackf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swunpackf.o -c -D... $(srcdir)/unpackf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swunpackf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpackf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swunpackf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpackf.c
	@mv -f _swunpackf.o _wunpackf.lo
_wpack_sizef.o: pack_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wpack_sizef.o -c -D... $(srcdir)/pack_sizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wpack_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pack_sizef.c" ; \
	fi
	@$(C_COMPILE) -o _wpack_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pack_sizef.c
_wpack_sizef.lo: pack_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swpack_sizef.o -c -D... $(srcdir)/pack_sizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swpack_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pack_sizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swpack_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pack_sizef.c
	@mv -f _swpack_sizef.o _wpack_sizef.lo
_wbarrierf.o: barrierf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wbarrierf.o -c -D... $(srcdir)/barrierf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wbarrierf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/barrierf.c" ; \
	fi
	@$(C_COMPILE) -o _wbarrierf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/barrierf.c
_wbarrierf.lo: barrierf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swbarrierf.o -c -D... $(srcdir)/barrierf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swbarrierf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/barrierf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swbarrierf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/barrierf.c
	@mv -f _swbarrierf.o _wbarrierf.lo
_wbcastf.o: bcastf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wbcastf.o -c -D... $(srcdir)/bcastf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wbcastf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bcastf.c" ; \
	fi
	@$(C_COMPILE) -o _wbcastf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bcastf.c
_wbcastf.lo: bcastf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swbcastf.o -c -D... $(srcdir)/bcastf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swbcastf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bcastf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swbcastf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/bcastf.c
	@mv -f _swbcastf.o _wbcastf.lo
_wgatherf.o: gatherf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgatherf.o -c -D... $(srcdir)/gatherf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgatherf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/gatherf.c" ; \
	fi
	@$(C_COMPILE) -o _wgatherf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/gatherf.c
_wgatherf.lo: gatherf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgatherf.o -c -D... $(srcdir)/gatherf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgatherf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/gatherf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgatherf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/gatherf.c
	@mv -f _swgatherf.o _wgatherf.lo
_wgathervf.o: gathervf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgathervf.o -c -D... $(srcdir)/gathervf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgathervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/gathervf.c" ; \
	fi
	@$(C_COMPILE) -o _wgathervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/gathervf.c
_wgathervf.lo: gathervf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgathervf.o -c -D... $(srcdir)/gathervf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgathervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/gathervf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgathervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/gathervf.c
	@mv -f _swgathervf.o _wgathervf.lo
_wscatterf.o: scatterf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wscatterf.o -c -D... $(srcdir)/scatterf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wscatterf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scatterf.c" ; \
	fi
	@$(C_COMPILE) -o _wscatterf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scatterf.c
_wscatterf.lo: scatterf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swscatterf.o -c -D... $(srcdir)/scatterf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swscatterf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scatterf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swscatterf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scatterf.c
	@mv -f _swscatterf.o _wscatterf.lo
_wscattervf.o: scattervf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wscattervf.o -c -D... $(srcdir)/scattervf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wscattervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scattervf.c" ; \
	fi
	@$(C_COMPILE) -o _wscattervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scattervf.c
_wscattervf.lo: scattervf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swscattervf.o -c -D... $(srcdir)/scattervf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swscattervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scattervf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swscattervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scattervf.c
	@mv -f _swscattervf.o _wscattervf.lo
_wallgatherf.o: allgatherf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wallgatherf.o -c -D... $(srcdir)/allgatherf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wallgatherf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allgatherf.c" ; \
	fi
	@$(C_COMPILE) -o _wallgatherf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allgatherf.c
_wallgatherf.lo: allgatherf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swallgatherf.o -c -D... $(srcdir)/allgatherf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swallgatherf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allgatherf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swallgatherf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allgatherf.c
	@mv -f _swallgatherf.o _wallgatherf.lo
_wallgathervf.o: allgathervf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wallgathervf.o -c -D... $(srcdir)/allgathervf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wallgathervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allgathervf.c" ; \
	fi
	@$(C_COMPILE) -o _wallgathervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allgathervf.c
_wallgathervf.lo: allgathervf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swallgathervf.o -c -D... $(srcdir)/allgathervf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swallgathervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allgathervf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swallgathervf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allgathervf.c
	@mv -f _swallgathervf.o _wallgathervf.lo
_walltoallf.o: alltoallf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _walltoallf.o -c -D... $(srcdir)/alltoallf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _walltoallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallf.c" ; \
	fi
	@$(C_COMPILE) -o _walltoallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallf.c
_walltoallf.lo: alltoallf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swalltoallf.o -c -D... $(srcdir)/alltoallf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swalltoallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swalltoallf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallf.c
	@mv -f _swalltoallf.o _walltoallf.lo
_walltoallvf.o: alltoallvf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _walltoallvf.o -c -D... $(srcdir)/alltoallvf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _walltoallvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallvf.c" ; \
	fi
	@$(C_COMPILE) -o _walltoallvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallvf.c
_walltoallvf.lo: alltoallvf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swalltoallvf.o -c -D... $(srcdir)/alltoallvf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swalltoallvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallvf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swalltoallvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallvf.c
	@mv -f _swalltoallvf.o _walltoallvf.lo
_wreducef.o: reducef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wreducef.o -c -D... $(srcdir)/reducef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wreducef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reducef.c" ; \
	fi
	@$(C_COMPILE) -o _wreducef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reducef.c
_wreducef.lo: reducef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swreducef.o -c -D... $(srcdir)/reducef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swreducef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reducef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swreducef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reducef.c
	@mv -f _swreducef.o _wreducef.lo
_wop_createf.o: op_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wop_createf.o -c -D... $(srcdir)/op_createf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wop_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_createf.c" ; \
	fi
	@$(C_COMPILE) -o _wop_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_createf.c
_wop_createf.lo: op_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swop_createf.o -c -D... $(srcdir)/op_createf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swop_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_createf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swop_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_createf.c
	@mv -f _swop_createf.o _wop_createf.lo
_wop_freef.o: op_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wop_freef.o -c -D... $(srcdir)/op_freef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wop_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_freef.c" ; \
	fi
	@$(C_COMPILE) -o _wop_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_freef.c
_wop_freef.lo: op_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swop_freef.o -c -D... $(srcdir)/op_freef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swop_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_freef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swop_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_freef.c
	@mv -f _swop_freef.o _wop_freef.lo
_wallreducef.o: allreducef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wallreducef.o -c -D... $(srcdir)/allreducef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wallreducef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allreducef.c" ; \
	fi
	@$(C_COMPILE) -o _wallreducef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allreducef.c
_wallreducef.lo: allreducef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swallreducef.o -c -D... $(srcdir)/allreducef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swallreducef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allreducef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swallreducef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/allreducef.c
	@mv -f _swallreducef.o _wallreducef.lo
_wredscatf.o: redscatf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wredscatf.o -c -D... $(srcdir)/redscatf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wredscatf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/redscatf.c" ; \
	fi
	@$(C_COMPILE) -o _wredscatf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/redscatf.c
_wredscatf.lo: redscatf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swredscatf.o -c -D... $(srcdir)/redscatf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swredscatf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/redscatf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swredscatf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/redscatf.c
	@mv -f _swredscatf.o _wredscatf.lo
_wscanf.o: scanf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wscanf.o -c -D... $(srcdir)/scanf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wscanf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scanf.c" ; \
	fi
	@$(C_COMPILE) -o _wscanf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scanf.c
_wscanf.lo: scanf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swscanf.o -c -D... $(srcdir)/scanf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swscanf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scanf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swscanf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/scanf.c
	@mv -f _swscanf.o _wscanf.lo
_wgroup_sizef.o: group_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgroup_sizef.o -c -D... $(srcdir)/group_sizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgroup_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_sizef.c" ; \
	fi
	@$(C_COMPILE) -o _wgroup_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_sizef.c
_wgroup_sizef.lo: group_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgroup_sizef.o -c -D... $(srcdir)/group_sizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgroup_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_sizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgroup_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_sizef.c
	@mv -f _swgroup_sizef.o _wgroup_sizef.lo
_wgroup_rankf.o: group_rankf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgroup_rankf.o -c -D... $(srcdir)/group_rankf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgroup_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_rankf.c" ; \
	fi
	@$(C_COMPILE) -o _wgroup_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_rankf.c
_wgroup_rankf.lo: group_rankf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgroup_rankf.o -c -D... $(srcdir)/group_rankf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgroup_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_rankf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgroup_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_rankf.c
	@mv -f _swgroup_rankf.o _wgroup_rankf.lo
_wgrouptranksf.o: grouptranksf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgrouptranksf.o -c -D... $(srcdir)/grouptranksf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgrouptranksf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouptranksf.c" ; \
	fi
	@$(C_COMPILE) -o _wgrouptranksf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouptranksf.c
_wgrouptranksf.lo: grouptranksf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgrouptranksf.o -c -D... $(srcdir)/grouptranksf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgrouptranksf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouptranksf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgrouptranksf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouptranksf.c
	@mv -f _swgrouptranksf.o _wgrouptranksf.lo
_wgroup_comparef.o: group_comparef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgroup_comparef.o -c -D... $(srcdir)/group_comparef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgroup_comparef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_comparef.c" ; \
	fi
	@$(C_COMPILE) -o _wgroup_comparef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_comparef.c
_wgroup_comparef.lo: group_comparef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgroup_comparef.o -c -D... $(srcdir)/group_comparef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgroup_comparef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_comparef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgroup_comparef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_comparef.c
	@mv -f _swgroup_comparef.o _wgroup_comparef.lo
_wcomm_groupf.o: comm_groupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_groupf.o -c -D... $(srcdir)/comm_groupf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_groupf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_groupf.c
_wcomm_groupf.lo: comm_groupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_groupf.o -c -D... $(srcdir)/comm_groupf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_groupf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_groupf.c
	@mv -f _swcomm_groupf.o _wcomm_groupf.lo
_wgroup_unionf.o: group_unionf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgroup_unionf.o -c -D... $(srcdir)/group_unionf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgroup_unionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_unionf.c" ; \
	fi
	@$(C_COMPILE) -o _wgroup_unionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_unionf.c
_wgroup_unionf.lo: group_unionf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgroup_unionf.o -c -D... $(srcdir)/group_unionf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgroup_unionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_unionf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgroup_unionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_unionf.c
	@mv -f _swgroup_unionf.o _wgroup_unionf.lo
_wgroupinterf.o: groupinterf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgroupinterf.o -c -D... $(srcdir)/groupinterf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgroupinterf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/groupinterf.c" ; \
	fi
	@$(C_COMPILE) -o _wgroupinterf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/groupinterf.c
_wgroupinterf.lo: groupinterf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgroupinterf.o -c -D... $(srcdir)/groupinterf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgroupinterf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/groupinterf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgroupinterf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/groupinterf.c
	@mv -f _swgroupinterf.o _wgroupinterf.lo
_wgroupdifff.o: groupdifff.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgroupdifff.o -c -D... $(srcdir)/groupdifff.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgroupdifff.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/groupdifff.c" ; \
	fi
	@$(C_COMPILE) -o _wgroupdifff.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/groupdifff.c
_wgroupdifff.lo: groupdifff.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgroupdifff.o -c -D... $(srcdir)/groupdifff.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgroupdifff.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/groupdifff.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgroupdifff.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/groupdifff.c
	@mv -f _swgroupdifff.o _wgroupdifff.lo
_wgroup_inclf.o: group_inclf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgroup_inclf.o -c -D... $(srcdir)/group_inclf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgroup_inclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_inclf.c" ; \
	fi
	@$(C_COMPILE) -o _wgroup_inclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_inclf.c
_wgroup_inclf.lo: group_inclf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgroup_inclf.o -c -D... $(srcdir)/group_inclf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgroup_inclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_inclf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgroup_inclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_inclf.c
	@mv -f _swgroup_inclf.o _wgroup_inclf.lo
_wgroup_exclf.o: group_exclf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgroup_exclf.o -c -D... $(srcdir)/group_exclf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgroup_exclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_exclf.c" ; \
	fi
	@$(C_COMPILE) -o _wgroup_exclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_exclf.c
_wgroup_exclf.lo: group_exclf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgroup_exclf.o -c -D... $(srcdir)/group_exclf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgroup_exclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_exclf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgroup_exclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_exclf.c
	@mv -f _swgroup_exclf.o _wgroup_exclf.lo
_wgrouprinclf.o: grouprinclf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgrouprinclf.o -c -D... $(srcdir)/grouprinclf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgrouprinclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouprinclf.c" ; \
	fi
	@$(C_COMPILE) -o _wgrouprinclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouprinclf.c
_wgrouprinclf.lo: grouprinclf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgrouprinclf.o -c -D... $(srcdir)/grouprinclf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgrouprinclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouprinclf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgrouprinclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouprinclf.c
	@mv -f _swgrouprinclf.o _wgrouprinclf.lo
_wgrouprexclf.o: grouprexclf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgrouprexclf.o -c -D... $(srcdir)/grouprexclf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgrouprexclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouprexclf.c" ; \
	fi
	@$(C_COMPILE) -o _wgrouprexclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouprexclf.c
_wgrouprexclf.lo: grouprexclf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgrouprexclf.o -c -D... $(srcdir)/grouprexclf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgrouprexclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouprexclf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgrouprexclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grouprexclf.c
	@mv -f _swgrouprexclf.o _wgrouprexclf.lo
_wgroup_freef.o: group_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgroup_freef.o -c -D... $(srcdir)/group_freef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgroup_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_freef.c" ; \
	fi
	@$(C_COMPILE) -o _wgroup_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_freef.c
_wgroup_freef.lo: group_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgroup_freef.o -c -D... $(srcdir)/group_freef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgroup_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_freef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgroup_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/group_freef.c
	@mv -f _swgroup_freef.o _wgroup_freef.lo
_wcomm_sizef.o: comm_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_sizef.o -c -D... $(srcdir)/comm_sizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_sizef.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_sizef.c
_wcomm_sizef.lo: comm_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_sizef.o -c -D... $(srcdir)/comm_sizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_sizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_sizef.c
	@mv -f _swcomm_sizef.o _wcomm_sizef.lo
_wcomm_rankf.o: comm_rankf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_rankf.o -c -D... $(srcdir)/comm_rankf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_rankf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_rankf.c
_wcomm_rankf.lo: comm_rankf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_rankf.o -c -D... $(srcdir)/comm_rankf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_rankf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_rankf.c
	@mv -f _swcomm_rankf.o _wcomm_rankf.lo
_wcomm_comparef.o: comm_comparef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_comparef.o -c -D... $(srcdir)/comm_comparef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_comparef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_comparef.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_comparef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_comparef.c
_wcomm_comparef.lo: comm_comparef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_comparef.o -c -D... $(srcdir)/comm_comparef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_comparef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_comparef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_comparef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_comparef.c
	@mv -f _swcomm_comparef.o _wcomm_comparef.lo
_wcomm_dupf.o: comm_dupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_dupf.o -c -D... $(srcdir)/comm_dupf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_dupf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_dupf.c
_wcomm_dupf.lo: comm_dupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_dupf.o -c -D... $(srcdir)/comm_dupf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_dupf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_dupf.c
	@mv -f _swcomm_dupf.o _wcomm_dupf.lo
_wcomm_createf.o: comm_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_createf.o -c -D... $(srcdir)/comm_createf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_createf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_createf.c
_wcomm_createf.lo: comm_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_createf.o -c -D... $(srcdir)/comm_createf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_createf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_createf.c
	@mv -f _swcomm_createf.o _wcomm_createf.lo
_wcomm_splitf.o: comm_splitf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_splitf.o -c -D... $(srcdir)/comm_splitf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_splitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_splitf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_splitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_splitf.c
_wcomm_splitf.lo: comm_splitf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_splitf.o -c -D... $(srcdir)/comm_splitf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_splitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_splitf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_splitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_splitf.c
	@mv -f _swcomm_splitf.o _wcomm_splitf.lo
_wcomm_freef.o: comm_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_freef.o -c -D... $(srcdir)/comm_freef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_freef.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_freef.c
_wcomm_freef.lo: comm_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_freef.o -c -D... $(srcdir)/comm_freef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_freef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_freef.c
	@mv -f _swcomm_freef.o _wcomm_freef.lo
_wcommtesticf.o: commtesticf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommtesticf.o -c -D... $(srcdir)/commtesticf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommtesticf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commtesticf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommtesticf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commtesticf.c
_wcommtesticf.lo: commtesticf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommtesticf.o -c -D... $(srcdir)/commtesticf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommtesticf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commtesticf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommtesticf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commtesticf.c
	@mv -f _swcommtesticf.o _wcommtesticf.lo
_wcommrsizef.o: commrsizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommrsizef.o -c -D... $(srcdir)/commrsizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommrsizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commrsizef.c" ; \
	fi
	@$(C_COMPILE) -o _wcommrsizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commrsizef.c
_wcommrsizef.lo: commrsizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommrsizef.o -c -D... $(srcdir)/commrsizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommrsizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commrsizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommrsizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commrsizef.c
	@mv -f _swcommrsizef.o _wcommrsizef.lo
_wcommrgroupf.o: commrgroupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommrgroupf.o -c -D... $(srcdir)/commrgroupf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommrgroupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commrgroupf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommrgroupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commrgroupf.c
_wcommrgroupf.lo: commrgroupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommrgroupf.o -c -D... $(srcdir)/commrgroupf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommrgroupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commrgroupf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommrgroupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commrgroupf.c
	@mv -f _swcommrgroupf.o _wcommrgroupf.lo
_wiccreatef.o: iccreatef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wiccreatef.o -c -D... $(srcdir)/iccreatef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wiccreatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/iccreatef.c" ; \
	fi
	@$(C_COMPILE) -o _wiccreatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/iccreatef.c
_wiccreatef.lo: iccreatef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swiccreatef.o -c -D... $(srcdir)/iccreatef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swiccreatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/iccreatef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swiccreatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/iccreatef.c
	@mv -f _swiccreatef.o _wiccreatef.lo
_wicmergef.o: icmergef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wicmergef.o -c -D... $(srcdir)/icmergef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wicmergef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/icmergef.c" ; \
	fi
	@$(C_COMPILE) -o _wicmergef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/icmergef.c
_wicmergef.lo: icmergef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swicmergef.o -c -D... $(srcdir)/icmergef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swicmergef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/icmergef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swicmergef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/icmergef.c
	@mv -f _swicmergef.o _wicmergef.lo
_wkeyval_freef.o: keyval_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wkeyval_freef.o -c -D... $(srcdir)/keyval_freef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wkeyval_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/keyval_freef.c" ; \
	fi
	@$(C_COMPILE) -o _wkeyval_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/keyval_freef.c
_wkeyval_freef.lo: keyval_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swkeyval_freef.o -c -D... $(srcdir)/keyval_freef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swkeyval_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/keyval_freef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swkeyval_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/keyval_freef.c
	@mv -f _swkeyval_freef.o _wkeyval_freef.lo
_wattr_putf.o: attr_putf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wattr_putf.o -c -D... $(srcdir)/attr_putf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wattr_putf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_putf.c" ; \
	fi
	@$(C_COMPILE) -o _wattr_putf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_putf.c
_wattr_putf.lo: attr_putf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swattr_putf.o -c -D... $(srcdir)/attr_putf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swattr_putf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_putf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swattr_putf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_putf.c
	@mv -f _swattr_putf.o _wattr_putf.lo
_wattr_getf.o: attr_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wattr_getf.o -c -D... $(srcdir)/attr_getf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wattr_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_getf.c" ; \
	fi
	@$(C_COMPILE) -o _wattr_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_getf.c
_wattr_getf.lo: attr_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swattr_getf.o -c -D... $(srcdir)/attr_getf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swattr_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_getf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swattr_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_getf.c
	@mv -f _swattr_getf.o _wattr_getf.lo
_wattr_deletef.o: attr_deletef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wattr_deletef.o -c -D... $(srcdir)/attr_deletef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wattr_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_deletef.c" ; \
	fi
	@$(C_COMPILE) -o _wattr_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_deletef.c
_wattr_deletef.lo: attr_deletef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swattr_deletef.o -c -D... $(srcdir)/attr_deletef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swattr_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_deletef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swattr_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/attr_deletef.c
	@mv -f _swattr_deletef.o _wattr_deletef.lo
_wtopo_testf.o: topo_testf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtopo_testf.o -c -D... $(srcdir)/topo_testf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtopo_testf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/topo_testf.c" ; \
	fi
	@$(C_COMPILE) -o _wtopo_testf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/topo_testf.c
_wtopo_testf.lo: topo_testf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtopo_testf.o -c -D... $(srcdir)/topo_testf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtopo_testf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/topo_testf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtopo_testf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/topo_testf.c
	@mv -f _swtopo_testf.o _wtopo_testf.lo
_wcart_createf.o: cart_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcart_createf.o -c -D... $(srcdir)/cart_createf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcart_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_createf.c" ; \
	fi
	@$(C_COMPILE) -o _wcart_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_createf.c
_wcart_createf.lo: cart_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcart_createf.o -c -D... $(srcdir)/cart_createf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcart_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_createf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcart_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_createf.c
	@mv -f _swcart_createf.o _wcart_createf.lo
_wdims_createf.o: dims_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wdims_createf.o -c -D... $(srcdir)/dims_createf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wdims_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dims_createf.c" ; \
	fi
	@$(C_COMPILE) -o _wdims_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dims_createf.c
_wdims_createf.lo: dims_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swdims_createf.o -c -D... $(srcdir)/dims_createf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swdims_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dims_createf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swdims_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dims_createf.c
	@mv -f _swdims_createf.o _wdims_createf.lo
_wgraph_createf.o: graph_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgraph_createf.o -c -D... $(srcdir)/graph_createf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgraph_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_createf.c" ; \
	fi
	@$(C_COMPILE) -o _wgraph_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_createf.c
_wgraph_createf.lo: graph_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgraph_createf.o -c -D... $(srcdir)/graph_createf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgraph_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_createf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgraph_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_createf.c
	@mv -f _swgraph_createf.o _wgraph_createf.lo
_wgraphdims_getf.o: graphdims_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgraphdims_getf.o -c -D... $(srcdir)/graphdims_getf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgraphdims_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graphdims_getf.c" ; \
	fi
	@$(C_COMPILE) -o _wgraphdims_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graphdims_getf.c
_wgraphdims_getf.lo: graphdims_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgraphdims_getf.o -c -D... $(srcdir)/graphdims_getf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgraphdims_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graphdims_getf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgraphdims_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graphdims_getf.c
	@mv -f _swgraphdims_getf.o _wgraphdims_getf.lo
_wgraph_getf.o: graph_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgraph_getf.o -c -D... $(srcdir)/graph_getf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgraph_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_getf.c" ; \
	fi
	@$(C_COMPILE) -o _wgraph_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_getf.c
_wgraph_getf.lo: graph_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgraph_getf.o -c -D... $(srcdir)/graph_getf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgraph_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_getf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgraph_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_getf.c
	@mv -f _swgraph_getf.o _wgraph_getf.lo
_wcartdim_getf.o: cartdim_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcartdim_getf.o -c -D... $(srcdir)/cartdim_getf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcartdim_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cartdim_getf.c" ; \
	fi
	@$(C_COMPILE) -o _wcartdim_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cartdim_getf.c
_wcartdim_getf.lo: cartdim_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcartdim_getf.o -c -D... $(srcdir)/cartdim_getf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcartdim_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cartdim_getf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcartdim_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cartdim_getf.c
	@mv -f _swcartdim_getf.o _wcartdim_getf.lo
_wcart_getf.o: cart_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcart_getf.o -c -D... $(srcdir)/cart_getf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcart_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_getf.c" ; \
	fi
	@$(C_COMPILE) -o _wcart_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_getf.c
_wcart_getf.lo: cart_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcart_getf.o -c -D... $(srcdir)/cart_getf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcart_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_getf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcart_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_getf.c
	@mv -f _swcart_getf.o _wcart_getf.lo
_wcart_rankf.o: cart_rankf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcart_rankf.o -c -D... $(srcdir)/cart_rankf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcart_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_rankf.c" ; \
	fi
	@$(C_COMPILE) -o _wcart_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_rankf.c
_wcart_rankf.lo: cart_rankf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcart_rankf.o -c -D... $(srcdir)/cart_rankf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcart_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_rankf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcart_rankf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_rankf.c
	@mv -f _swcart_rankf.o _wcart_rankf.lo
_wcart_coordsf.o: cart_coordsf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcart_coordsf.o -c -D... $(srcdir)/cart_coordsf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcart_coordsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_coordsf.c" ; \
	fi
	@$(C_COMPILE) -o _wcart_coordsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_coordsf.c
_wcart_coordsf.lo: cart_coordsf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcart_coordsf.o -c -D... $(srcdir)/cart_coordsf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcart_coordsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_coordsf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcart_coordsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_coordsf.c
	@mv -f _swcart_coordsf.o _wcart_coordsf.lo
_wgrfnbcountf.o: grfnbcountf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgrfnbcountf.o -c -D... $(srcdir)/grfnbcountf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgrfnbcountf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grfnbcountf.c" ; \
	fi
	@$(C_COMPILE) -o _wgrfnbcountf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grfnbcountf.c
_wgrfnbcountf.lo: grfnbcountf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgrfnbcountf.o -c -D... $(srcdir)/grfnbcountf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgrfnbcountf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grfnbcountf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgrfnbcountf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grfnbcountf.c
	@mv -f _swgrfnbcountf.o _wgrfnbcountf.lo
_wgrfnbrsf.o: grfnbrsf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgrfnbrsf.o -c -D... $(srcdir)/grfnbrsf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgrfnbrsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grfnbrsf.c" ; \
	fi
	@$(C_COMPILE) -o _wgrfnbrsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grfnbrsf.c
_wgrfnbrsf.lo: grfnbrsf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgrfnbrsf.o -c -D... $(srcdir)/grfnbrsf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgrfnbrsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grfnbrsf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgrfnbrsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/grfnbrsf.c
	@mv -f _swgrfnbrsf.o _wgrfnbrsf.lo
_wcart_shiftf.o: cart_shiftf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcart_shiftf.o -c -D... $(srcdir)/cart_shiftf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcart_shiftf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_shiftf.c" ; \
	fi
	@$(C_COMPILE) -o _wcart_shiftf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_shiftf.c
_wcart_shiftf.lo: cart_shiftf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcart_shiftf.o -c -D... $(srcdir)/cart_shiftf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcart_shiftf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_shiftf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcart_shiftf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_shiftf.c
	@mv -f _swcart_shiftf.o _wcart_shiftf.lo
_wcart_subf.o: cart_subf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcart_subf.o -c -D... $(srcdir)/cart_subf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcart_subf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_subf.c" ; \
	fi
	@$(C_COMPILE) -o _wcart_subf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_subf.c
_wcart_subf.lo: cart_subf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcart_subf.o -c -D... $(srcdir)/cart_subf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcart_subf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_subf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcart_subf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_subf.c
	@mv -f _swcart_subf.o _wcart_subf.lo
_wcart_mapf.o: cart_mapf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcart_mapf.o -c -D... $(srcdir)/cart_mapf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcart_mapf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_mapf.c" ; \
	fi
	@$(C_COMPILE) -o _wcart_mapf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_mapf.c
_wcart_mapf.lo: cart_mapf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcart_mapf.o -c -D... $(srcdir)/cart_mapf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcart_mapf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_mapf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcart_mapf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/cart_mapf.c
	@mv -f _swcart_mapf.o _wcart_mapf.lo
_wgraph_mapf.o: graph_mapf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgraph_mapf.o -c -D... $(srcdir)/graph_mapf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgraph_mapf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_mapf.c" ; \
	fi
	@$(C_COMPILE) -o _wgraph_mapf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_mapf.c
_wgraph_mapf.lo: graph_mapf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgraph_mapf.o -c -D... $(srcdir)/graph_mapf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgraph_mapf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_mapf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgraph_mapf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/graph_mapf.c
	@mv -f _swgraph_mapf.o _wgraph_mapf.lo
_wgetpnamef.o: getpnamef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgetpnamef.o -c -D... $(srcdir)/getpnamef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgetpnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getpnamef.c" ; \
	fi
	@$(C_COMPILE) -o _wgetpnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getpnamef.c
_wgetpnamef.lo: getpnamef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgetpnamef.o -c -D... $(srcdir)/getpnamef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgetpnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getpnamef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgetpnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getpnamef.c
	@mv -f _swgetpnamef.o _wgetpnamef.lo
_wget_versionf.o: get_versionf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wget_versionf.o -c -D... $(srcdir)/get_versionf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wget_versionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_versionf.c" ; \
	fi
	@$(C_COMPILE) -o _wget_versionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_versionf.c
_wget_versionf.lo: get_versionf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swget_versionf.o -c -D... $(srcdir)/get_versionf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swget_versionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_versionf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swget_versionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/get_versionf.c
	@mv -f _swget_versionf.o _wget_versionf.lo
_werrhcreatef.o: errhcreatef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _werrhcreatef.o -c -D... $(srcdir)/errhcreatef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _werrhcreatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhcreatef.c" ; \
	fi
	@$(C_COMPILE) -o _werrhcreatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhcreatef.c
_werrhcreatef.lo: errhcreatef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swerrhcreatef.o -c -D... $(srcdir)/errhcreatef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swerrhcreatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhcreatef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swerrhcreatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhcreatef.c
	@mv -f _swerrhcreatef.o _werrhcreatef.lo
_werrhsetf.o: errhsetf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _werrhsetf.o -c -D... $(srcdir)/errhsetf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _werrhsetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhsetf.c" ; \
	fi
	@$(C_COMPILE) -o _werrhsetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhsetf.c
_werrhsetf.lo: errhsetf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swerrhsetf.o -c -D... $(srcdir)/errhsetf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swerrhsetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhsetf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swerrhsetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhsetf.c
	@mv -f _swerrhsetf.o _werrhsetf.lo
_werrhgetf.o: errhgetf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _werrhgetf.o -c -D... $(srcdir)/errhgetf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _werrhgetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhgetf.c" ; \
	fi
	@$(C_COMPILE) -o _werrhgetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhgetf.c
_werrhgetf.lo: errhgetf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swerrhgetf.o -c -D... $(srcdir)/errhgetf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swerrhgetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhgetf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swerrhgetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhgetf.c
	@mv -f _swerrhgetf.o _werrhgetf.lo
_werrhfreef.o: errhfreef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _werrhfreef.o -c -D... $(srcdir)/errhfreef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _werrhfreef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhfreef.c" ; \
	fi
	@$(C_COMPILE) -o _werrhfreef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhfreef.c
_werrhfreef.lo: errhfreef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swerrhfreef.o -c -D... $(srcdir)/errhfreef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swerrhfreef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhfreef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swerrhfreef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/errhfreef.c
	@mv -f _swerrhfreef.o _werrhfreef.lo
_werror_stringf.o: error_stringf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _werror_stringf.o -c -D... $(srcdir)/error_stringf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _werror_stringf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/error_stringf.c" ; \
	fi
	@$(C_COMPILE) -o _werror_stringf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/error_stringf.c
_werror_stringf.lo: error_stringf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swerror_stringf.o -c -D... $(srcdir)/error_stringf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swerror_stringf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/error_stringf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swerror_stringf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/error_stringf.c
	@mv -f _swerror_stringf.o _werror_stringf.lo
_werror_classf.o: error_classf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _werror_classf.o -c -D... $(srcdir)/error_classf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _werror_classf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/error_classf.c" ; \
	fi
	@$(C_COMPILE) -o _werror_classf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/error_classf.c
_werror_classf.lo: error_classf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swerror_classf.o -c -D... $(srcdir)/error_classf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swerror_classf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/error_classf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swerror_classf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/error_classf.c
	@mv -f _swerror_classf.o _werror_classf.lo
_wfinalizef.o: finalizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfinalizef.o -c -D... $(srcdir)/finalizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfinalizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/finalizef.c" ; \
	fi
	@$(C_COMPILE) -o _wfinalizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/finalizef.c
_wfinalizef.lo: finalizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfinalizef.o -c -D... $(srcdir)/finalizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfinalizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/finalizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfinalizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/finalizef.c
	@mv -f _swfinalizef.o _wfinalizef.lo
_winitializedf.o: initializedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winitializedf.o -c -D... $(srcdir)/initializedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winitializedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initializedf.c" ; \
	fi
	@$(C_COMPILE) -o _winitializedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initializedf.c
_winitializedf.lo: initializedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinitializedf.o -c -D... $(srcdir)/initializedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinitializedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initializedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinitializedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initializedf.c
	@mv -f _swinitializedf.o _winitializedf.lo
_wabortf.o: abortf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wabortf.o -c -D... $(srcdir)/abortf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wabortf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/abortf.c" ; \
	fi
	@$(C_COMPILE) -o _wabortf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/abortf.c
_wabortf.lo: abortf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swabortf.o -c -D... $(srcdir)/abortf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swabortf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/abortf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swabortf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/abortf.c
	@mv -f _swabortf.o _wabortf.lo
_wclose_portf.o: close_portf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wclose_portf.o -c -D... $(srcdir)/close_portf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wclose_portf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/close_portf.c" ; \
	fi
	@$(C_COMPILE) -o _wclose_portf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/close_portf.c
_wclose_portf.lo: close_portf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swclose_portf.o -c -D... $(srcdir)/close_portf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swclose_portf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/close_portf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swclose_portf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/close_portf.c
	@mv -f _swclose_portf.o _wclose_portf.lo
_wcomm_acceptf.o: comm_acceptf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_acceptf.o -c -D... $(srcdir)/comm_acceptf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_acceptf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_acceptf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_acceptf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_acceptf.c
_wcomm_acceptf.lo: comm_acceptf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_acceptf.o -c -D... $(srcdir)/comm_acceptf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_acceptf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_acceptf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_acceptf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_acceptf.c
	@mv -f _swcomm_acceptf.o _wcomm_acceptf.lo
_wcomm_connectf.o: comm_connectf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_connectf.o -c -D... $(srcdir)/comm_connectf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_connectf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_connectf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_connectf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_connectf.c
_wcomm_connectf.lo: comm_connectf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_connectf.o -c -D... $(srcdir)/comm_connectf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_connectf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_connectf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_connectf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_connectf.c
	@mv -f _swcomm_connectf.o _wcomm_connectf.lo
_wcommdiscf.o: commdiscf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommdiscf.o -c -D... $(srcdir)/commdiscf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommdiscf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commdiscf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommdiscf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commdiscf.c
_wcommdiscf.lo: commdiscf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommdiscf.o -c -D... $(srcdir)/commdiscf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommdiscf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commdiscf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommdiscf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commdiscf.c
	@mv -f _swcommdiscf.o _wcommdiscf.lo
_wcommparentf.o: commparentf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommparentf.o -c -D... $(srcdir)/commparentf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommparentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commparentf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommparentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commparentf.c
_wcommparentf.lo: commparentf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommparentf.o -c -D... $(srcdir)/commparentf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommparentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commparentf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommparentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commparentf.c
	@mv -f _swcommparentf.o _wcommparentf.lo
_wcomm_joinf.o: comm_joinf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_joinf.o -c -D... $(srcdir)/comm_joinf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_joinf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_joinf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_joinf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_joinf.c
_wcomm_joinf.lo: comm_joinf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_joinf.o -c -D... $(srcdir)/comm_joinf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_joinf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_joinf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_joinf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_joinf.c
	@mv -f _swcomm_joinf.o _wcomm_joinf.lo
_wcomm_spawnf.o: comm_spawnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_spawnf.o -c -D... $(srcdir)/comm_spawnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_spawnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_spawnf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_spawnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_spawnf.c
_wcomm_spawnf.lo: comm_spawnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_spawnf.o -c -D... $(srcdir)/comm_spawnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_spawnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_spawnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_spawnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_spawnf.c
	@mv -f _swcomm_spawnf.o _wcomm_spawnf.lo
_wspawnmultf.o: spawnmultf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wspawnmultf.o -c -D... $(srcdir)/spawnmultf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wspawnmultf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/spawnmultf.c" ; \
	fi
	@$(C_COMPILE) -o _wspawnmultf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/spawnmultf.c
_wspawnmultf.lo: spawnmultf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swspawnmultf.o -c -D... $(srcdir)/spawnmultf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swspawnmultf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/spawnmultf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swspawnmultf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/spawnmultf.c
	@mv -f _swspawnmultf.o _wspawnmultf.lo
_wlookup_namef.o: lookup_namef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wlookup_namef.o -c -D... $(srcdir)/lookup_namef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wlookup_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/lookup_namef.c" ; \
	fi
	@$(C_COMPILE) -o _wlookup_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/lookup_namef.c
_wlookup_namef.lo: lookup_namef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swlookup_namef.o -c -D... $(srcdir)/lookup_namef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swlookup_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/lookup_namef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swlookup_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/lookup_namef.c
	@mv -f _swlookup_namef.o _wlookup_namef.lo
_wopen_portf.o: open_portf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wopen_portf.o -c -D... $(srcdir)/open_portf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wopen_portf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/open_portf.c" ; \
	fi
	@$(C_COMPILE) -o _wopen_portf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/open_portf.c
_wopen_portf.lo: open_portf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swopen_portf.o -c -D... $(srcdir)/open_portf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swopen_portf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/open_portf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swopen_portf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/open_portf.c
	@mv -f _swopen_portf.o _wopen_portf.lo
_wpublish_namef.o: publish_namef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wpublish_namef.o -c -D... $(srcdir)/publish_namef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wpublish_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/publish_namef.c" ; \
	fi
	@$(C_COMPILE) -o _wpublish_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/publish_namef.c
_wpublish_namef.lo: publish_namef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swpublish_namef.o -c -D... $(srcdir)/publish_namef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swpublish_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/publish_namef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swpublish_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/publish_namef.c
	@mv -f _swpublish_namef.o _wpublish_namef.lo
_wunpubnamef.o: unpubnamef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wunpubnamef.o -c -D... $(srcdir)/unpubnamef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wunpubnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpubnamef.c" ; \
	fi
	@$(C_COMPILE) -o _wunpubnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpubnamef.c
_wunpubnamef.lo: unpubnamef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swunpubnamef.o -c -D... $(srcdir)/unpubnamef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swunpubnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpubnamef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swunpubnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpubnamef.c
	@mv -f _swunpubnamef.o _wunpubnamef.lo
_waccumulatef.o: accumulatef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _waccumulatef.o -c -D... $(srcdir)/accumulatef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _waccumulatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/accumulatef.c" ; \
	fi
	@$(C_COMPILE) -o _waccumulatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/accumulatef.c
_waccumulatef.lo: accumulatef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swaccumulatef.o -c -D... $(srcdir)/accumulatef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swaccumulatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/accumulatef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swaccumulatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/accumulatef.c
	@mv -f _swaccumulatef.o _waccumulatef.lo
_wgetf.o: getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgetf.o -c -D... $(srcdir)/getf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getf.c" ; \
	fi
	@$(C_COMPILE) -o _wgetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getf.c
_wgetf.lo: getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgetf.o -c -D... $(srcdir)/getf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getf.c
	@mv -f _swgetf.o _wgetf.lo
_wputf.o: putf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wputf.o -c -D... $(srcdir)/putf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wputf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/putf.c" ; \
	fi
	@$(C_COMPILE) -o _wputf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/putf.c
_wputf.lo: putf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swputf.o -c -D... $(srcdir)/putf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swputf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/putf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swputf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/putf.c
	@mv -f _swputf.o _wputf.lo
_wwin_completef.o: win_completef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_completef.o -c -D... $(srcdir)/win_completef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_completef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_completef.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_completef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_completef.c
_wwin_completef.lo: win_completef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_completef.o -c -D... $(srcdir)/win_completef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_completef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_completef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_completef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_completef.c
	@mv -f _swwin_completef.o _wwin_completef.lo
_wwin_createf.o: win_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_createf.o -c -D... $(srcdir)/win_createf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_createf.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_createf.c
_wwin_createf.lo: win_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_createf.o -c -D... $(srcdir)/win_createf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_createf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_createf.c
	@mv -f _swwin_createf.o _wwin_createf.lo
_wwin_fencef.o: win_fencef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_fencef.o -c -D... $(srcdir)/win_fencef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_fencef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_fencef.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_fencef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_fencef.c
_wwin_fencef.lo: win_fencef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_fencef.o -c -D... $(srcdir)/win_fencef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_fencef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_fencef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_fencef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_fencef.c
	@mv -f _swwin_fencef.o _wwin_fencef.lo
_wwin_freef.o: win_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_freef.o -c -D... $(srcdir)/win_freef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_freef.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_freef.c
_wwin_freef.lo: win_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_freef.o -c -D... $(srcdir)/win_freef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_freef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_freef.c
	@mv -f _swwin_freef.o _wwin_freef.lo
_wwin_get_groupf.o: win_get_groupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_get_groupf.o -c -D... $(srcdir)/win_get_groupf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_get_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_groupf.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_get_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_groupf.c
_wwin_get_groupf.lo: win_get_groupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_get_groupf.o -c -D... $(srcdir)/win_get_groupf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_get_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_groupf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_get_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_groupf.c
	@mv -f _swwin_get_groupf.o _wwin_get_groupf.lo
_wwin_lockf.o: win_lockf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_lockf.o -c -D... $(srcdir)/win_lockf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_lockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_lockf.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_lockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_lockf.c
_wwin_lockf.lo: win_lockf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_lockf.o -c -D... $(srcdir)/win_lockf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_lockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_lockf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_lockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_lockf.c
	@mv -f _swwin_lockf.o _wwin_lockf.lo
_wwin_postf.o: win_postf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_postf.o -c -D... $(srcdir)/win_postf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_postf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_postf.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_postf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_postf.c
_wwin_postf.lo: win_postf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_postf.o -c -D... $(srcdir)/win_postf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_postf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_postf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_postf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_postf.c
	@mv -f _swwin_postf.o _wwin_postf.lo
_wwin_startf.o: win_startf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_startf.o -c -D... $(srcdir)/win_startf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_startf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_startf.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_startf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_startf.c
_wwin_startf.lo: win_startf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_startf.o -c -D... $(srcdir)/win_startf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_startf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_startf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_startf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_startf.c
	@mv -f _swwin_startf.o _wwin_startf.lo
_wwin_testf.o: win_testf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_testf.o -c -D... $(srcdir)/win_testf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_testf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_testf.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_testf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_testf.c
_wwin_testf.lo: win_testf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_testf.o -c -D... $(srcdir)/win_testf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_testf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_testf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_testf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_testf.c
	@mv -f _swwin_testf.o _wwin_testf.lo
_wwin_unlockf.o: win_unlockf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_unlockf.o -c -D... $(srcdir)/win_unlockf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_unlockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_unlockf.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_unlockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_unlockf.c
_wwin_unlockf.lo: win_unlockf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_unlockf.o -c -D... $(srcdir)/win_unlockf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_unlockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_unlockf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_unlockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_unlockf.c
	@mv -f _swwin_unlockf.o _wwin_unlockf.lo
_wwin_waitf.o: win_waitf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_waitf.o -c -D... $(srcdir)/win_waitf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_waitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_waitf.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_waitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_waitf.c
_wwin_waitf.lo: win_waitf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_waitf.o -c -D... $(srcdir)/win_waitf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_waitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_waitf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_waitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_waitf.c
	@mv -f _swwin_waitf.o _wwin_waitf.lo
_walltoallwf.o: alltoallwf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _walltoallwf.o -c -D... $(srcdir)/alltoallwf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _walltoallwf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallwf.c" ; \
	fi
	@$(C_COMPILE) -o _walltoallwf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallwf.c
_walltoallwf.lo: alltoallwf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swalltoallwf.o -c -D... $(srcdir)/alltoallwf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swalltoallwf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallwf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swalltoallwf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alltoallwf.c
	@mv -f _swalltoallwf.o _walltoallwf.lo
_wexscanf.o: exscanf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wexscanf.o -c -D... $(srcdir)/exscanf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wexscanf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/exscanf.c" ; \
	fi
	@$(C_COMPILE) -o _wexscanf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/exscanf.c
_wexscanf.lo: exscanf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swexscanf.o -c -D... $(srcdir)/exscanf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swexscanf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/exscanf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swexscanf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/exscanf.c
	@mv -f _swexscanf.o _wexscanf.lo
_wadderrclassf.o: adderrclassf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wadderrclassf.o -c -D... $(srcdir)/adderrclassf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wadderrclassf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrclassf.c" ; \
	fi
	@$(C_COMPILE) -o _wadderrclassf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrclassf.c
_wadderrclassf.lo: adderrclassf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swadderrclassf.o -c -D... $(srcdir)/adderrclassf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swadderrclassf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrclassf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swadderrclassf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrclassf.c
	@mv -f _swadderrclassf.o _wadderrclassf.lo
_wadderrcodef.o: adderrcodef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wadderrcodef.o -c -D... $(srcdir)/adderrcodef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wadderrcodef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrcodef.c" ; \
	fi
	@$(C_COMPILE) -o _wadderrcodef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrcodef.c
_wadderrcodef.lo: adderrcodef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swadderrcodef.o -c -D... $(srcdir)/adderrcodef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swadderrcodef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrcodef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swadderrcodef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrcodef.c
	@mv -f _swadderrcodef.o _wadderrcodef.lo
_wadderrstringf.o: adderrstringf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wadderrstringf.o -c -D... $(srcdir)/adderrstringf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wadderrstringf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrstringf.c" ; \
	fi
	@$(C_COMPILE) -o _wadderrstringf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrstringf.c
_wadderrstringf.lo: adderrstringf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swadderrstringf.o -c -D... $(srcdir)/adderrstringf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swadderrstringf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrstringf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swadderrstringf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/adderrstringf.c
	@mv -f _swadderrstringf.o _wadderrstringf.lo
_wcommcallerrf.o: commcallerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommcallerrf.o -c -D... $(srcdir)/commcallerrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommcallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commcallerrf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommcallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commcallerrf.c
_wcommcallerrf.lo: commcallerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommcallerrf.o -c -D... $(srcdir)/commcallerrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommcallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commcallerrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommcallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commcallerrf.c
	@mv -f _swcommcallerrf.o _wcommcallerrf.lo
_wcommnewkeyf.o: commnewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommnewkeyf.o -c -D... $(srcdir)/commnewkeyf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommnewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commnewkeyf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommnewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commnewkeyf.c
_wcommnewkeyf.lo: commnewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommnewkeyf.o -c -D... $(srcdir)/commnewkeyf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommnewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commnewkeyf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommnewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commnewkeyf.c
	@mv -f _swcommnewkeyf.o _wcommnewkeyf.lo
_wcommdelattrf.o: commdelattrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommdelattrf.o -c -D... $(srcdir)/commdelattrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommdelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commdelattrf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommdelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commdelattrf.c
_wcommdelattrf.lo: commdelattrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommdelattrf.o -c -D... $(srcdir)/commdelattrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommdelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commdelattrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommdelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commdelattrf.c
	@mv -f _swcommdelattrf.o _wcommdelattrf.lo
_wcommfreekeyf.o: commfreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommfreekeyf.o -c -D... $(srcdir)/commfreekeyf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommfreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commfreekeyf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommfreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commfreekeyf.c
_wcommfreekeyf.lo: commfreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommfreekeyf.o -c -D... $(srcdir)/commfreekeyf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommfreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commfreekeyf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommfreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commfreekeyf.c
	@mv -f _swcommfreekeyf.o _wcommfreekeyf.lo
_wcomm_get_attrf.o: comm_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_get_attrf.o -c -D... $(srcdir)/comm_get_attrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_get_attrf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_get_attrf.c
_wcomm_get_attrf.lo: comm_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_get_attrf.o -c -D... $(srcdir)/comm_get_attrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_get_attrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_get_attrf.c
	@mv -f _swcomm_get_attrf.o _wcomm_get_attrf.lo
_wcommgetnamf.o: commgetnamf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommgetnamf.o -c -D... $(srcdir)/commgetnamf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommgetnamf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commgetnamf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommgetnamf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commgetnamf.c
_wcommgetnamf.lo: commgetnamf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommgetnamf.o -c -D... $(srcdir)/commgetnamf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommgetnamf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commgetnamf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommgetnamf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commgetnamf.c
	@mv -f _swcommgetnamf.o _wcommgetnamf.lo
_wcomm_set_attrf.o: comm_set_attrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_set_attrf.o -c -D... $(srcdir)/comm_set_attrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_set_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_set_attrf.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_set_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_set_attrf.c
_wcomm_set_attrf.lo: comm_set_attrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_set_attrf.o -c -D... $(srcdir)/comm_set_attrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_set_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_set_attrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_set_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_set_attrf.c
	@mv -f _swcomm_set_attrf.o _wcomm_set_attrf.lo
_wcomm_set_namef.o: comm_set_namef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcomm_set_namef.o -c -D... $(srcdir)/comm_set_namef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcomm_set_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_set_namef.c" ; \
	fi
	@$(C_COMPILE) -o _wcomm_set_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_set_namef.c
_wcomm_set_namef.lo: comm_set_namef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcomm_set_namef.o -c -D... $(srcdir)/comm_set_namef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcomm_set_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_set_namef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcomm_set_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/comm_set_namef.c
	@mv -f _swcomm_set_namef.o _wcomm_set_namef.lo
_wfilecallerrf.o: filecallerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfilecallerrf.o -c -D... $(srcdir)/filecallerrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfilecallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filecallerrf.c" ; \
	fi
	@$(C_COMPILE) -o _wfilecallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filecallerrf.c
_wfilecallerrf.lo: filecallerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfilecallerrf.o -c -D... $(srcdir)/filecallerrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfilecallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filecallerrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfilecallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filecallerrf.c
	@mv -f _swfilecallerrf.o _wfilecallerrf.lo
_wgreqcompletef.o: greqcompletef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgreqcompletef.o -c -D... $(srcdir)/greqcompletef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgreqcompletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/greqcompletef.c" ; \
	fi
	@$(C_COMPILE) -o _wgreqcompletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/greqcompletef.c
_wgreqcompletef.lo: greqcompletef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgreqcompletef.o -c -D... $(srcdir)/greqcompletef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgreqcompletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/greqcompletef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgreqcompletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/greqcompletef.c
	@mv -f _swgreqcompletef.o _wgreqcompletef.lo
_wgreqstartf.o: greqstartf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgreqstartf.o -c -D... $(srcdir)/greqstartf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgreqstartf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/greqstartf.c" ; \
	fi
	@$(C_COMPILE) -o _wgreqstartf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/greqstartf.c
_wgreqstartf.lo: greqstartf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgreqstartf.o -c -D... $(srcdir)/greqstartf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgreqstartf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/greqstartf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgreqstartf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/greqstartf.c
	@mv -f _swgreqstartf.o _wgreqstartf.lo
_wisthrmainf.o: isthrmainf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wisthrmainf.o -c -D... $(srcdir)/isthrmainf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wisthrmainf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/isthrmainf.c" ; \
	fi
	@$(C_COMPILE) -o _wisthrmainf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/isthrmainf.c
_wisthrmainf.lo: isthrmainf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swisthrmainf.o -c -D... $(srcdir)/isthrmainf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swisthrmainf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/isthrmainf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swisthrmainf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/isthrmainf.c
	@mv -f _swisthrmainf.o _wisthrmainf.lo
_wquery_threadf.o: query_threadf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wquery_threadf.o -c -D... $(srcdir)/query_threadf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wquery_threadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/query_threadf.c" ; \
	fi
	@$(C_COMPILE) -o _wquery_threadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/query_threadf.c
_wquery_threadf.lo: query_threadf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swquery_threadf.o -c -D... $(srcdir)/query_threadf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swquery_threadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/query_threadf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swquery_threadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/query_threadf.c
	@mv -f _swquery_threadf.o _wquery_threadf.lo
_wstatgetclf.o: statgetclf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wstatgetclf.o -c -D... $(srcdir)/statgetclf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wstatgetclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statgetclf.c" ; \
	fi
	@$(C_COMPILE) -o _wstatgetclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statgetclf.c
_wstatgetclf.lo: statgetclf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swstatgetclf.o -c -D... $(srcdir)/statgetclf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swstatgetclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statgetclf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swstatgetclf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statgetclf.c
	@mv -f _swstatgetclf.o _wstatgetclf.lo
_wstatsetelf.o: statsetelf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wstatsetelf.o -c -D... $(srcdir)/statsetelf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wstatsetelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statsetelf.c" ; \
	fi
	@$(C_COMPILE) -o _wstatsetelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statsetelf.c
_wstatsetelf.lo: statsetelf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swstatsetelf.o -c -D... $(srcdir)/statsetelf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swstatsetelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statsetelf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swstatsetelf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statsetelf.c
	@mv -f _swstatsetelf.o _wstatsetelf.lo
_wtypenewkeyf.o: typenewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypenewkeyf.o -c -D... $(srcdir)/typenewkeyf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypenewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typenewkeyf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypenewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typenewkeyf.c
_wtypenewkeyf.lo: typenewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypenewkeyf.o -c -D... $(srcdir)/typenewkeyf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypenewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typenewkeyf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypenewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typenewkeyf.c
	@mv -f _swtypenewkeyf.o _wtypenewkeyf.lo
_wtypedelattrf.o: typedelattrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypedelattrf.o -c -D... $(srcdir)/typedelattrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypedelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typedelattrf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypedelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typedelattrf.c
_wtypedelattrf.lo: typedelattrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypedelattrf.o -c -D... $(srcdir)/typedelattrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypedelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typedelattrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypedelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typedelattrf.c
	@mv -f _swtypedelattrf.o _wtypedelattrf.lo
_wtype_dupf.o: type_dupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_dupf.o -c -D... $(srcdir)/type_dupf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_dupf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_dupf.c
_wtype_dupf.lo: type_dupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_dupf.o -c -D... $(srcdir)/type_dupf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_dupf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_dupf.c
	@mv -f _swtype_dupf.o _wtype_dupf.lo
_wtypefreekeyf.o: typefreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypefreekeyf.o -c -D... $(srcdir)/typefreekeyf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypefreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typefreekeyf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypefreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typefreekeyf.c
_wtypefreekeyf.lo: typefreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypefreekeyf.o -c -D... $(srcdir)/typefreekeyf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypefreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typefreekeyf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypefreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typefreekeyf.c
	@mv -f _swtypefreekeyf.o _wtypefreekeyf.lo
_wtype_get_attrf.o: type_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_get_attrf.o -c -D... $(srcdir)/type_get_attrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_get_attrf.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_get_attrf.c
_wtype_get_attrf.lo: type_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_get_attrf.o -c -D... $(srcdir)/type_get_attrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_get_attrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_get_attrf.c
	@mv -f _swtype_get_attrf.o _wtype_get_attrf.lo
_wtypegetcntsf.o: typegetcntsf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypegetcntsf.o -c -D... $(srcdir)/typegetcntsf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypegetcntsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetcntsf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypegetcntsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetcntsf.c
_wtypegetcntsf.lo: typegetcntsf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypegetcntsf.o -c -D... $(srcdir)/typegetcntsf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypegetcntsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetcntsf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypegetcntsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetcntsf.c
	@mv -f _swtypegetcntsf.o _wtypegetcntsf.lo
_wtypegetenvf.o: typegetenvf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypegetenvf.o -c -D... $(srcdir)/typegetenvf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypegetenvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetenvf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypegetenvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetenvf.c
_wtypegetenvf.lo: typegetenvf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypegetenvf.o -c -D... $(srcdir)/typegetenvf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypegetenvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetenvf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypegetenvf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetenvf.c
	@mv -f _swtypegetenvf.o _wtypegetenvf.lo
_wtypegnamef.o: typegnamef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypegnamef.o -c -D... $(srcdir)/typegnamef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypegnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegnamef.c" ; \
	fi
	@$(C_COMPILE) -o _wtypegnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegnamef.c
_wtypegnamef.lo: typegnamef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypegnamef.o -c -D... $(srcdir)/typegnamef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypegnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegnamef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypegnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegnamef.c
	@mv -f _swtypegnamef.o _wtypegnamef.lo
_wtypesetattrf.o: typesetattrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypesetattrf.o -c -D... $(srcdir)/typesetattrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypesetattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typesetattrf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypesetattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typesetattrf.c
_wtypesetattrf.lo: typesetattrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypesetattrf.o -c -D... $(srcdir)/typesetattrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypesetattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typesetattrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypesetattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typesetattrf.c
	@mv -f _swtypesetattrf.o _wtypesetattrf.lo
_wtypesetnamef.o: typesetnamef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypesetnamef.o -c -D... $(srcdir)/typesetnamef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypesetnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typesetnamef.c" ; \
	fi
	@$(C_COMPILE) -o _wtypesetnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typesetnamef.c
_wtypesetnamef.lo: typesetnamef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypesetnamef.o -c -D... $(srcdir)/typesetnamef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypesetnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typesetnamef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypesetnamef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typesetnamef.c
	@mv -f _swtypesetnamef.o _wtypesetnamef.lo
_wtype_match_sizef.o: type_match_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtype_match_sizef.o -c -D... $(srcdir)/type_match_sizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtype_match_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_match_sizef.c" ; \
	fi
	@$(C_COMPILE) -o _wtype_match_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_match_sizef.c
_wtype_match_sizef.lo: type_match_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtype_match_sizef.o -c -D... $(srcdir)/type_match_sizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtype_match_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_match_sizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtype_match_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/type_match_sizef.c
	@mv -f _swtype_match_sizef.o _wtype_match_sizef.lo
_wwincallerrf.o: wincallerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwincallerrf.o -c -D... $(srcdir)/wincallerrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwincallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wincallerrf.c" ; \
	fi
	@$(C_COMPILE) -o _wwincallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wincallerrf.c
_wwincallerrf.lo: wincallerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwincallerrf.o -c -D... $(srcdir)/wincallerrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwincallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wincallerrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwincallerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wincallerrf.c
	@mv -f _swwincallerrf.o _wwincallerrf.lo
_wwinnewkeyf.o: winnewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwinnewkeyf.o -c -D... $(srcdir)/winnewkeyf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwinnewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winnewkeyf.c" ; \
	fi
	@$(C_COMPILE) -o _wwinnewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winnewkeyf.c
_wwinnewkeyf.lo: winnewkeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwinnewkeyf.o -c -D... $(srcdir)/winnewkeyf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwinnewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winnewkeyf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwinnewkeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winnewkeyf.c
	@mv -f _swwinnewkeyf.o _wwinnewkeyf.lo
_wwindelattrf.o: windelattrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwindelattrf.o -c -D... $(srcdir)/windelattrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwindelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/windelattrf.c" ; \
	fi
	@$(C_COMPILE) -o _wwindelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/windelattrf.c
_wwindelattrf.lo: windelattrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwindelattrf.o -c -D... $(srcdir)/windelattrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwindelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/windelattrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwindelattrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/windelattrf.c
	@mv -f _swwindelattrf.o _wwindelattrf.lo
_wwinfreekeyf.o: winfreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwinfreekeyf.o -c -D... $(srcdir)/winfreekeyf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwinfreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winfreekeyf.c" ; \
	fi
	@$(C_COMPILE) -o _wwinfreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winfreekeyf.c
_wwinfreekeyf.lo: winfreekeyf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwinfreekeyf.o -c -D... $(srcdir)/winfreekeyf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwinfreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winfreekeyf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwinfreekeyf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winfreekeyf.c
	@mv -f _swwinfreekeyf.o _wwinfreekeyf.lo
_wwin_get_attrf.o: win_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_get_attrf.o -c -D... $(srcdir)/win_get_attrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_attrf.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_attrf.c
_wwin_get_attrf.lo: win_get_attrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_get_attrf.o -c -D... $(srcdir)/win_get_attrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_attrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_get_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_attrf.c
	@mv -f _swwin_get_attrf.o _wwin_get_attrf.lo
_wwin_get_namef.o: win_get_namef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_get_namef.o -c -D... $(srcdir)/win_get_namef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_get_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_namef.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_get_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_namef.c
_wwin_get_namef.lo: win_get_namef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_get_namef.o -c -D... $(srcdir)/win_get_namef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_get_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_namef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_get_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_get_namef.c
	@mv -f _swwin_get_namef.o _wwin_get_namef.lo
_wwin_set_attrf.o: win_set_attrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_set_attrf.o -c -D... $(srcdir)/win_set_attrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_set_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_set_attrf.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_set_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_set_attrf.c
_wwin_set_attrf.lo: win_set_attrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_set_attrf.o -c -D... $(srcdir)/win_set_attrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_set_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_set_attrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_set_attrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_set_attrf.c
	@mv -f _swwin_set_attrf.o _wwin_set_attrf.lo
_wwin_set_namef.o: win_set_namef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwin_set_namef.o -c -D... $(srcdir)/win_set_namef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwin_set_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_set_namef.c" ; \
	fi
	@$(C_COMPILE) -o _wwin_set_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_set_namef.c
_wwin_set_namef.lo: win_set_namef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwin_set_namef.o -c -D... $(srcdir)/win_set_namef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwin_set_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_set_namef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwin_set_namef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/win_set_namef.c
	@mv -f _swwin_set_namef.o _wwin_set_namef.lo
_walloc_memf.o: alloc_memf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _walloc_memf.o -c -D... $(srcdir)/alloc_memf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _walloc_memf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alloc_memf.c" ; \
	fi
	@$(C_COMPILE) -o _walloc_memf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alloc_memf.c
_walloc_memf.lo: alloc_memf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swalloc_memf.o -c -D... $(srcdir)/alloc_memf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swalloc_memf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alloc_memf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swalloc_memf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/alloc_memf.c
	@mv -f _swalloc_memf.o _walloc_memf.lo
_wcommcreerrf.o: commcreerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommcreerrf.o -c -D... $(srcdir)/commcreerrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommcreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commcreerrf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommcreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commcreerrf.c
_wcommcreerrf.lo: commcreerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommcreerrf.o -c -D... $(srcdir)/commcreerrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommcreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commcreerrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommcreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commcreerrf.c
	@mv -f _swcommcreerrf.o _wcommcreerrf.lo
_wcommgeterrf.o: commgeterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommgeterrf.o -c -D... $(srcdir)/commgeterrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommgeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commgeterrf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommgeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commgeterrf.c
_wcommgeterrf.lo: commgeterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommgeterrf.o -c -D... $(srcdir)/commgeterrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommgeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commgeterrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommgeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commgeterrf.c
	@mv -f _swcommgeterrf.o _wcommgeterrf.lo
_wcommseterrf.o: commseterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wcommseterrf.o -c -D... $(srcdir)/commseterrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wcommseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commseterrf.c" ; \
	fi
	@$(C_COMPILE) -o _wcommseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commseterrf.c
_wcommseterrf.lo: commseterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swcommseterrf.o -c -D... $(srcdir)/commseterrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swcommseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commseterrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swcommseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/commseterrf.c
	@mv -f _swcommseterrf.o _wcommseterrf.lo
_wfilecreerrf.o: filecreerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfilecreerrf.o -c -D... $(srcdir)/filecreerrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfilecreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filecreerrf.c" ; \
	fi
	@$(C_COMPILE) -o _wfilecreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filecreerrf.c
_wfilecreerrf.lo: filecreerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfilecreerrf.o -c -D... $(srcdir)/filecreerrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfilecreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filecreerrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfilecreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filecreerrf.c
	@mv -f _swfilecreerrf.o _wfilecreerrf.lo
_wfilegeterrf.o: filegeterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfilegeterrf.o -c -D... $(srcdir)/filegeterrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfilegeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filegeterrf.c" ; \
	fi
	@$(C_COMPILE) -o _wfilegeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filegeterrf.c
_wfilegeterrf.lo: filegeterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfilegeterrf.o -c -D... $(srcdir)/filegeterrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfilegeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filegeterrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfilegeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/filegeterrf.c
	@mv -f _swfilegeterrf.o _wfilegeterrf.lo
_wfileseterrf.o: fileseterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfileseterrf.o -c -D... $(srcdir)/fileseterrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfileseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/fileseterrf.c" ; \
	fi
	@$(C_COMPILE) -o _wfileseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/fileseterrf.c
_wfileseterrf.lo: fileseterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfileseterrf.o -c -D... $(srcdir)/fileseterrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfileseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/fileseterrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfileseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/fileseterrf.c
	@mv -f _swfileseterrf.o _wfileseterrf.lo
_wfinalizedf.o: finalizedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfinalizedf.o -c -D... $(srcdir)/finalizedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfinalizedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/finalizedf.c" ; \
	fi
	@$(C_COMPILE) -o _wfinalizedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/finalizedf.c
_wfinalizedf.lo: finalizedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfinalizedf.o -c -D... $(srcdir)/finalizedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfinalizedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/finalizedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfinalizedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/finalizedf.c
	@mv -f _swfinalizedf.o _wfinalizedf.lo
_wfree_memf.o: free_memf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfree_memf.o -c -D... $(srcdir)/free_memf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfree_memf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/free_memf.c" ; \
	fi
	@$(C_COMPILE) -o _wfree_memf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/free_memf.c
_wfree_memf.lo: free_memf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfree_memf.o -c -D... $(srcdir)/free_memf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfree_memf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/free_memf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfree_memf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/free_memf.c
	@mv -f _swfree_memf.o _wfree_memf.lo
_winfo_createf.o: info_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winfo_createf.o -c -D... $(srcdir)/info_createf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winfo_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_createf.c" ; \
	fi
	@$(C_COMPILE) -o _winfo_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_createf.c
_winfo_createf.lo: info_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinfo_createf.o -c -D... $(srcdir)/info_createf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinfo_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_createf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinfo_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_createf.c
	@mv -f _swinfo_createf.o _winfo_createf.lo
_winfo_deletef.o: info_deletef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winfo_deletef.o -c -D... $(srcdir)/info_deletef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winfo_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_deletef.c" ; \
	fi
	@$(C_COMPILE) -o _winfo_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_deletef.c
_winfo_deletef.lo: info_deletef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinfo_deletef.o -c -D... $(srcdir)/info_deletef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinfo_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_deletef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinfo_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_deletef.c
	@mv -f _swinfo_deletef.o _winfo_deletef.lo
_winfo_dupf.o: info_dupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winfo_dupf.o -c -D... $(srcdir)/info_dupf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winfo_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_dupf.c" ; \
	fi
	@$(C_COMPILE) -o _winfo_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_dupf.c
_winfo_dupf.lo: info_dupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinfo_dupf.o -c -D... $(srcdir)/info_dupf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinfo_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_dupf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinfo_dupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_dupf.c
	@mv -f _swinfo_dupf.o _winfo_dupf.lo
_winfo_freef.o: info_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winfo_freef.o -c -D... $(srcdir)/info_freef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winfo_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_freef.c" ; \
	fi
	@$(C_COMPILE) -o _winfo_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_freef.c
_winfo_freef.lo: info_freef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinfo_freef.o -c -D... $(srcdir)/info_freef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinfo_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_freef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinfo_freef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_freef.c
	@mv -f _swinfo_freef.o _winfo_freef.lo
_winfo_getf.o: info_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winfo_getf.o -c -D... $(srcdir)/info_getf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winfo_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_getf.c" ; \
	fi
	@$(C_COMPILE) -o _winfo_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_getf.c
_winfo_getf.lo: info_getf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinfo_getf.o -c -D... $(srcdir)/info_getf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinfo_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_getf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinfo_getf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_getf.c
	@mv -f _swinfo_getf.o _winfo_getf.lo
_winfognkf.o: infognkf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winfognkf.o -c -D... $(srcdir)/infognkf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winfognkf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infognkf.c" ; \
	fi
	@$(C_COMPILE) -o _winfognkf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infognkf.c
_winfognkf.lo: infognkf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinfognkf.o -c -D... $(srcdir)/infognkf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinfognkf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infognkf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinfognkf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infognkf.c
	@mv -f _swinfognkf.o _winfognkf.lo
_winfognthkf.o: infognthkf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winfognthkf.o -c -D... $(srcdir)/infognthkf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winfognthkf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infognthkf.c" ; \
	fi
	@$(C_COMPILE) -o _winfognthkf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infognthkf.c
_winfognthkf.lo: infognthkf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinfognthkf.o -c -D... $(srcdir)/infognthkf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinfognthkf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infognthkf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinfognthkf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infognthkf.c
	@mv -f _swinfognthkf.o _winfognthkf.lo
_winfovallenf.o: infovallenf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winfovallenf.o -c -D... $(srcdir)/infovallenf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winfovallenf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infovallenf.c" ; \
	fi
	@$(C_COMPILE) -o _winfovallenf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infovallenf.c
_winfovallenf.lo: infovallenf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinfovallenf.o -c -D... $(srcdir)/infovallenf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinfovallenf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infovallenf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinfovallenf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/infovallenf.c
	@mv -f _swinfovallenf.o _winfovallenf.lo
_winfo_setf.o: info_setf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winfo_setf.o -c -D... $(srcdir)/info_setf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winfo_setf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_setf.c" ; \
	fi
	@$(C_COMPILE) -o _winfo_setf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_setf.c
_winfo_setf.lo: info_setf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinfo_setf.o -c -D... $(srcdir)/info_setf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinfo_setf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_setf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinfo_setf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/info_setf.c
	@mv -f _swinfo_setf.o _winfo_setf.lo
_wpack_externalf.o: pack_externalf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wpack_externalf.o -c -D... $(srcdir)/pack_externalf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wpack_externalf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pack_externalf.c" ; \
	fi
	@$(C_COMPILE) -o _wpack_externalf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pack_externalf.c
_wpack_externalf.lo: pack_externalf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swpack_externalf.o -c -D... $(srcdir)/pack_externalf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swpack_externalf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pack_externalf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swpack_externalf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pack_externalf.c
	@mv -f _swpack_externalf.o _wpack_externalf.lo
_wpackesizef.o: packesizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wpackesizef.o -c -D... $(srcdir)/packesizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wpackesizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/packesizef.c" ; \
	fi
	@$(C_COMPILE) -o _wpackesizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/packesizef.c
_wpackesizef.lo: packesizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swpackesizef.o -c -D... $(srcdir)/packesizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swpackesizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/packesizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swpackesizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/packesizef.c
	@mv -f _swpackesizef.o _wpackesizef.lo
_wreqgetstatf.o: reqgetstatf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wreqgetstatf.o -c -D... $(srcdir)/reqgetstatf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wreqgetstatf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reqgetstatf.c" ; \
	fi
	@$(C_COMPILE) -o _wreqgetstatf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reqgetstatf.c
_wreqgetstatf.lo: reqgetstatf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swreqgetstatf.o -c -D... $(srcdir)/reqgetstatf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swreqgetstatf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reqgetstatf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swreqgetstatf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reqgetstatf.c
	@mv -f _swreqgetstatf.o _wreqgetstatf.lo
_wtypedarrayf.o: typedarrayf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypedarrayf.o -c -D... $(srcdir)/typedarrayf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypedarrayf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typedarrayf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypedarrayf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typedarrayf.c
_wtypedarrayf.lo: typedarrayf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypedarrayf.o -c -D... $(srcdir)/typedarrayf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypedarrayf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typedarrayf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypedarrayf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typedarrayf.c
	@mv -f _swtypedarrayf.o _wtypedarrayf.lo
_wtypechindf.o: typechindf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypechindf.o -c -D... $(srcdir)/typechindf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypechindf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typechindf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypechindf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typechindf.c
_wtypechindf.lo: typechindf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypechindf.o -c -D... $(srcdir)/typechindf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypechindf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typechindf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypechindf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typechindf.c
	@mv -f _swtypechindf.o _wtypechindf.lo
_wtypechvecf.o: typechvecf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypechvecf.o -c -D... $(srcdir)/typechvecf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypechvecf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typechvecf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypechvecf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typechvecf.c
_wtypechvecf.lo: typechvecf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypechvecf.o -c -D... $(srcdir)/typechvecf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypechvecf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typechvecf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypechvecf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typechvecf.c
	@mv -f _swtypechvecf.o _wtypechvecf.lo
_wtypecindbf.o: typecindbf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypecindbf.o -c -D... $(srcdir)/typecindbf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypecindbf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecindbf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypecindbf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecindbf.c
_wtypecindbf.lo: typecindbf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypecindbf.o -c -D... $(srcdir)/typecindbf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypecindbf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecindbf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypecindbf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecindbf.c
	@mv -f _swtypecindbf.o _wtypecindbf.lo
_wtypecresizef.o: typecresizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypecresizef.o -c -D... $(srcdir)/typecresizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypecresizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecresizef.c" ; \
	fi
	@$(C_COMPILE) -o _wtypecresizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecresizef.c
_wtypecresizef.lo: typecresizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypecresizef.o -c -D... $(srcdir)/typecresizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypecresizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecresizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypecresizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecresizef.c
	@mv -f _swtypecresizef.o _wtypecresizef.lo
_wtypecstructf.o: typecstructf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypecstructf.o -c -D... $(srcdir)/typecstructf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypecstructf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecstructf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypecstructf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecstructf.c
_wtypecstructf.lo: typecstructf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypecstructf.o -c -D... $(srcdir)/typecstructf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypecstructf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecstructf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypecstructf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecstructf.c
	@mv -f _swtypecstructf.o _wtypecstructf.lo
_wtypecsubarrf.o: typecsubarrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypecsubarrf.o -c -D... $(srcdir)/typecsubarrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypecsubarrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecsubarrf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypecsubarrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecsubarrf.c
_wtypecsubarrf.lo: typecsubarrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypecsubarrf.o -c -D... $(srcdir)/typecsubarrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypecsubarrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecsubarrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypecsubarrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typecsubarrf.c
	@mv -f _swtypecsubarrf.o _wtypecsubarrf.lo
_wtypegetextentf.o: typegetextentf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypegetextentf.o -c -D... $(srcdir)/typegetextentf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypegetextentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetextentf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypegetextentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetextentf.c
_wtypegetextentf.lo: typegetextentf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypegetextentf.o -c -D... $(srcdir)/typegetextentf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypegetextentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetextentf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypegetextentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegetextentf.c
	@mv -f _swtypegetextentf.o _wtypegetextentf.lo
_wtypegtextf.o: typegtextf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wtypegtextf.o -c -D... $(srcdir)/typegtextf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wtypegtextf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegtextf.c" ; \
	fi
	@$(C_COMPILE) -o _wtypegtextf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegtextf.c
_wtypegtextf.lo: typegtextf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swtypegtextf.o -c -D... $(srcdir)/typegtextf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swtypegtextf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegtextf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swtypegtextf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/typegtextf.c
	@mv -f _swtypegtextf.o _wtypegtextf.lo
_wunpackextf.o: unpackextf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wunpackextf.o -c -D... $(srcdir)/unpackextf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wunpackextf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpackextf.c" ; \
	fi
	@$(C_COMPILE) -o _wunpackextf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpackextf.c
_wunpackextf.lo: unpackextf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swunpackextf.o -c -D... $(srcdir)/unpackextf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swunpackextf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpackextf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swunpackextf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/unpackextf.c
	@mv -f _swunpackextf.o _wunpackextf.lo
_wwincreerrf.o: wincreerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwincreerrf.o -c -D... $(srcdir)/wincreerrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwincreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wincreerrf.c" ; \
	fi
	@$(C_COMPILE) -o _wwincreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wincreerrf.c
_wwincreerrf.lo: wincreerrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwincreerrf.o -c -D... $(srcdir)/wincreerrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwincreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wincreerrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwincreerrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wincreerrf.c
	@mv -f _swwincreerrf.o _wwincreerrf.lo
_wwingeterrf.o: wingeterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwingeterrf.o -c -D... $(srcdir)/wingeterrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwingeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wingeterrf.c" ; \
	fi
	@$(C_COMPILE) -o _wwingeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wingeterrf.c
_wwingeterrf.lo: wingeterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwingeterrf.o -c -D... $(srcdir)/wingeterrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwingeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wingeterrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwingeterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wingeterrf.c
	@mv -f _swwingeterrf.o _wwingeterrf.lo
_wwinseterrf.o: winseterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwinseterrf.o -c -D... $(srcdir)/winseterrf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwinseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winseterrf.c" ; \
	fi
	@$(C_COMPILE) -o _wwinseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winseterrf.c
_wwinseterrf.lo: winseterrf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwinseterrf.o -c -D... $(srcdir)/winseterrf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwinseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winseterrf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwinseterrf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/winseterrf.c
	@mv -f _swwinseterrf.o _wwinseterrf.lo
_wreduce_localf.o: reduce_localf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wreduce_localf.o -c -D... $(srcdir)/reduce_localf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wreduce_localf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reduce_localf.c" ; \
	fi
	@$(C_COMPILE) -o _wreduce_localf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reduce_localf.c
_wreduce_localf.lo: reduce_localf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swreduce_localf.o -c -D... $(srcdir)/reduce_localf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swreduce_localf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reduce_localf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swreduce_localf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reduce_localf.c
	@mv -f _swreduce_localf.o _wreduce_localf.lo
_wop_commutativef.o: op_commutativef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wop_commutativef.o -c -D... $(srcdir)/op_commutativef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wop_commutativef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_commutativef.c" ; \
	fi
	@$(C_COMPILE) -o _wop_commutativef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_commutativef.c
_wop_commutativef.lo: op_commutativef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swop_commutativef.o -c -D... $(srcdir)/op_commutativef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swop_commutativef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_commutativef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swop_commutativef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/op_commutativef.c
	@mv -f _swop_commutativef.o _wop_commutativef.lo
_wreduce_scatter_blockf.o: reduce_scatter_blockf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wreduce_scatter_blockf.o -c -D... $(srcdir)/reduce_scatter_blockf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wreduce_scatter_blockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reduce_scatter_blockf.c" ; \
	fi
	@$(C_COMPILE) -o _wreduce_scatter_blockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reduce_scatter_blockf.c
_wreduce_scatter_blockf.lo: reduce_scatter_blockf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swreduce_scatter_blockf.o -c -D... $(srcdir)/reduce_scatter_blockf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swreduce_scatter_blockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reduce_scatter_blockf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swreduce_scatter_blockf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/reduce_scatter_blockf.c
	@mv -f _swreduce_scatter_blockf.o _wreduce_scatter_blockf.lo
_wdist_graph_create_adjacentf.o: dist_graph_create_adjacentf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wdist_graph_create_adjacentf.o -c -D... $(srcdir)/dist_graph_create_adjacentf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wdist_graph_create_adjacentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_create_adjacentf.c" ; \
	fi
	@$(C_COMPILE) -o _wdist_graph_create_adjacentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_create_adjacentf.c
_wdist_graph_create_adjacentf.lo: dist_graph_create_adjacentf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swdist_graph_create_adjacentf.o -c -D... $(srcdir)/dist_graph_create_adjacentf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swdist_graph_create_adjacentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_create_adjacentf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swdist_graph_create_adjacentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_create_adjacentf.c
	@mv -f _swdist_graph_create_adjacentf.o _wdist_graph_create_adjacentf.lo
_wdist_graph_createf.o: dist_graph_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wdist_graph_createf.o -c -D... $(srcdir)/dist_graph_createf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wdist_graph_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_createf.c" ; \
	fi
	@$(C_COMPILE) -o _wdist_graph_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_createf.c
_wdist_graph_createf.lo: dist_graph_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swdist_graph_createf.o -c -D... $(srcdir)/dist_graph_createf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swdist_graph_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_createf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swdist_graph_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_createf.c
	@mv -f _swdist_graph_createf.o _wdist_graph_createf.lo
_wdist_graph_neighbors_countf.o: dist_graph_neighbors_countf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wdist_graph_neighbors_countf.o -c -D... $(srcdir)/dist_graph_neighbors_countf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wdist_graph_neighbors_countf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_neighbors_countf.c" ; \
	fi
	@$(C_COMPILE) -o _wdist_graph_neighbors_countf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_neighbors_countf.c
_wdist_graph_neighbors_countf.lo: dist_graph_neighbors_countf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swdist_graph_neighbors_countf.o -c -D... $(srcdir)/dist_graph_neighbors_countf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swdist_graph_neighbors_countf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_neighbors_countf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swdist_graph_neighbors_countf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_neighbors_countf.c
	@mv -f _swdist_graph_neighbors_countf.o _wdist_graph_neighbors_countf.lo
_wdist_graph_neighborsf.o: dist_graph_neighborsf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wdist_graph_neighborsf.o -c -D... $(srcdir)/dist_graph_neighborsf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wdist_graph_neighborsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_neighborsf.c" ; \
	fi
	@$(C_COMPILE) -o _wdist_graph_neighborsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_neighborsf.c
_wdist_graph_neighborsf.lo: dist_graph_neighborsf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swdist_graph_neighborsf.o -c -D... $(srcdir)/dist_graph_neighborsf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swdist_graph_neighborsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_neighborsf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swdist_graph_neighborsf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dist_graph_neighborsf.c
	@mv -f _swdist_graph_neighborsf.o _wdist_graph_neighborsf.lo
_wfile_openf.o: file_openf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_openf.o -c -D... $(srcdir)/file_openf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_openf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_openf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_openf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_openf.c
_wfile_openf.lo: file_openf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_openf.o -c -D... $(srcdir)/file_openf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_openf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_openf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_openf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_openf.c
	@mv -f _swfile_openf.o _wfile_openf.lo
_wfile_closef.o: file_closef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_closef.o -c -D... $(srcdir)/file_closef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_closef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_closef.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_closef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_closef.c
_wfile_closef.lo: file_closef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_closef.o -c -D... $(srcdir)/file_closef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_closef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_closef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_closef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_closef.c
	@mv -f _swfile_closef.o _wfile_closef.lo
_wfile_deletef.o: file_deletef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_deletef.o -c -D... $(srcdir)/file_deletef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_deletef.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_deletef.c
_wfile_deletef.lo: file_deletef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_deletef.o -c -D... $(srcdir)/file_deletef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_deletef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_deletef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_deletef.c
	@mv -f _swfile_deletef.o _wfile_deletef.lo
_wfile_set_sizef.o: file_set_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_set_sizef.o -c -D... $(srcdir)/file_set_sizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_set_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_sizef.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_set_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_sizef.c
_wfile_set_sizef.lo: file_set_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_set_sizef.o -c -D... $(srcdir)/file_set_sizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_set_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_sizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_set_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_sizef.c
	@mv -f _swfile_set_sizef.o _wfile_set_sizef.lo
_wfile_preallocatef.o: file_preallocatef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_preallocatef.o -c -D... $(srcdir)/file_preallocatef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_preallocatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_preallocatef.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_preallocatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_preallocatef.c
_wfile_preallocatef.lo: file_preallocatef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_preallocatef.o -c -D... $(srcdir)/file_preallocatef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_preallocatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_preallocatef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_preallocatef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_preallocatef.c
	@mv -f _swfile_preallocatef.o _wfile_preallocatef.lo
_wfile_get_sizef.o: file_get_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_get_sizef.o -c -D... $(srcdir)/file_get_sizef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_get_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_sizef.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_get_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_sizef.c
_wfile_get_sizef.lo: file_get_sizef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_get_sizef.o -c -D... $(srcdir)/file_get_sizef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_get_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_sizef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_get_sizef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_sizef.c
	@mv -f _swfile_get_sizef.o _wfile_get_sizef.lo
_wfile_get_groupf.o: file_get_groupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_get_groupf.o -c -D... $(srcdir)/file_get_groupf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_get_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_groupf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_get_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_groupf.c
_wfile_get_groupf.lo: file_get_groupf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_get_groupf.o -c -D... $(srcdir)/file_get_groupf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_get_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_groupf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_get_groupf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_groupf.c
	@mv -f _swfile_get_groupf.o _wfile_get_groupf.lo
_wfile_get_amodef.o: file_get_amodef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_get_amodef.o -c -D... $(srcdir)/file_get_amodef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_get_amodef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_amodef.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_get_amodef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_amodef.c
_wfile_get_amodef.lo: file_get_amodef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_get_amodef.o -c -D... $(srcdir)/file_get_amodef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_get_amodef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_amodef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_get_amodef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_amodef.c
	@mv -f _swfile_get_amodef.o _wfile_get_amodef.lo
_wfile_set_infof.o: file_set_infof.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_set_infof.o -c -D... $(srcdir)/file_set_infof.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_set_infof.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_infof.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_set_infof.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_infof.c
_wfile_set_infof.lo: file_set_infof.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_set_infof.o -c -D... $(srcdir)/file_set_infof.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_set_infof.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_infof.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_set_infof.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_infof.c
	@mv -f _swfile_set_infof.o _wfile_set_infof.lo
_wfile_get_infof.o: file_get_infof.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_get_infof.o -c -D... $(srcdir)/file_get_infof.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_get_infof.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_infof.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_get_infof.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_infof.c
_wfile_get_infof.lo: file_get_infof.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_get_infof.o -c -D... $(srcdir)/file_get_infof.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_get_infof.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_infof.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_get_infof.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_infof.c
	@mv -f _swfile_get_infof.o _wfile_get_infof.lo
_wfile_set_viewf.o: file_set_viewf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_set_viewf.o -c -D... $(srcdir)/file_set_viewf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_set_viewf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_viewf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_set_viewf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_viewf.c
_wfile_set_viewf.lo: file_set_viewf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_set_viewf.o -c -D... $(srcdir)/file_set_viewf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_set_viewf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_viewf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_set_viewf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_viewf.c
	@mv -f _swfile_set_viewf.o _wfile_set_viewf.lo
_wfile_get_viewf.o: file_get_viewf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_get_viewf.o -c -D... $(srcdir)/file_get_viewf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_get_viewf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_viewf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_get_viewf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_viewf.c
_wfile_get_viewf.lo: file_get_viewf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_get_viewf.o -c -D... $(srcdir)/file_get_viewf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_get_viewf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_viewf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_get_viewf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_viewf.c
	@mv -f _swfile_get_viewf.o _wfile_get_viewf.lo
_wfile_read_atf.o: file_read_atf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_atf.o -c -D... $(srcdir)/file_read_atf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_atf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_atf.c
_wfile_read_atf.lo: file_read_atf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_atf.o -c -D... $(srcdir)/file_read_atf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_atf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_atf.c
	@mv -f _swfile_read_atf.o _wfile_read_atf.lo
_wfile_read_at_allf.o: file_read_at_allf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_at_allf.o -c -D... $(srcdir)/file_read_at_allf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_at_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_allf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_at_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_allf.c
_wfile_read_at_allf.lo: file_read_at_allf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_at_allf.o -c -D... $(srcdir)/file_read_at_allf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_at_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_allf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_at_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_allf.c
	@mv -f _swfile_read_at_allf.o _wfile_read_at_allf.lo
_wfile_write_atf.o: file_write_atf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_atf.o -c -D... $(srcdir)/file_write_atf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_atf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_atf.c
_wfile_write_atf.lo: file_write_atf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_atf.o -c -D... $(srcdir)/file_write_atf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_atf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_atf.c
	@mv -f _swfile_write_atf.o _wfile_write_atf.lo
_wfile_write_at_allf.o: file_write_at_allf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_at_allf.o -c -D... $(srcdir)/file_write_at_allf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_at_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_allf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_at_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_allf.c
_wfile_write_at_allf.lo: file_write_at_allf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_at_allf.o -c -D... $(srcdir)/file_write_at_allf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_at_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_allf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_at_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_allf.c
	@mv -f _swfile_write_at_allf.o _wfile_write_at_allf.lo
_wfile_iread_atf.o: file_iread_atf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_iread_atf.o -c -D... $(srcdir)/file_iread_atf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_iread_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iread_atf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_iread_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iread_atf.c
_wfile_iread_atf.lo: file_iread_atf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_iread_atf.o -c -D... $(srcdir)/file_iread_atf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_iread_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iread_atf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_iread_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iread_atf.c
	@mv -f _swfile_iread_atf.o _wfile_iread_atf.lo
_wfile_iwrite_atf.o: file_iwrite_atf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_iwrite_atf.o -c -D... $(srcdir)/file_iwrite_atf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_iwrite_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwrite_atf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_iwrite_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwrite_atf.c
_wfile_iwrite_atf.lo: file_iwrite_atf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_iwrite_atf.o -c -D... $(srcdir)/file_iwrite_atf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_iwrite_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwrite_atf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_iwrite_atf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwrite_atf.c
	@mv -f _swfile_iwrite_atf.o _wfile_iwrite_atf.lo
_wfile_readf.o: file_readf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_readf.o -c -D... $(srcdir)/file_readf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_readf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_readf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_readf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_readf.c
_wfile_readf.lo: file_readf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_readf.o -c -D... $(srcdir)/file_readf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_readf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_readf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_readf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_readf.c
	@mv -f _swfile_readf.o _wfile_readf.lo
_wfile_read_allf.o: file_read_allf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_allf.o -c -D... $(srcdir)/file_read_allf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_allf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_allf.c
_wfile_read_allf.lo: file_read_allf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_allf.o -c -D... $(srcdir)/file_read_allf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_allf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_allf.c
	@mv -f _swfile_read_allf.o _wfile_read_allf.lo
_wfile_writef.o: file_writef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_writef.o -c -D... $(srcdir)/file_writef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_writef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_writef.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_writef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_writef.c
_wfile_writef.lo: file_writef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_writef.o -c -D... $(srcdir)/file_writef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_writef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_writef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_writef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_writef.c
	@mv -f _swfile_writef.o _wfile_writef.lo
_wfile_write_allf.o: file_write_allf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_allf.o -c -D... $(srcdir)/file_write_allf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_allf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_allf.c
_wfile_write_allf.lo: file_write_allf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_allf.o -c -D... $(srcdir)/file_write_allf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_allf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_allf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_allf.c
	@mv -f _swfile_write_allf.o _wfile_write_allf.lo
_wfile_ireadf.o: file_ireadf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_ireadf.o -c -D... $(srcdir)/file_ireadf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_ireadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_ireadf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_ireadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_ireadf.c
_wfile_ireadf.lo: file_ireadf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_ireadf.o -c -D... $(srcdir)/file_ireadf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_ireadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_ireadf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_ireadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_ireadf.c
	@mv -f _swfile_ireadf.o _wfile_ireadf.lo
_wfile_iwritef.o: file_iwritef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_iwritef.o -c -D... $(srcdir)/file_iwritef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_iwritef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwritef.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_iwritef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwritef.c
_wfile_iwritef.lo: file_iwritef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_iwritef.o -c -D... $(srcdir)/file_iwritef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_iwritef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwritef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_iwritef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwritef.c
	@mv -f _swfile_iwritef.o _wfile_iwritef.lo
_wfile_seekf.o: file_seekf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_seekf.o -c -D... $(srcdir)/file_seekf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_seekf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_seekf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_seekf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_seekf.c
_wfile_seekf.lo: file_seekf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_seekf.o -c -D... $(srcdir)/file_seekf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_seekf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_seekf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_seekf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_seekf.c
	@mv -f _swfile_seekf.o _wfile_seekf.lo
_wfile_get_positionf.o: file_get_positionf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_get_positionf.o -c -D... $(srcdir)/file_get_positionf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_get_positionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_positionf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_get_positionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_positionf.c
_wfile_get_positionf.lo: file_get_positionf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_get_positionf.o -c -D... $(srcdir)/file_get_positionf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_get_positionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_positionf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_get_positionf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_positionf.c
	@mv -f _swfile_get_positionf.o _wfile_get_positionf.lo
_wfile_get_byte_offsetf.o: file_get_byte_offsetf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_get_byte_offsetf.o -c -D... $(srcdir)/file_get_byte_offsetf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_get_byte_offsetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_byte_offsetf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_get_byte_offsetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_byte_offsetf.c
_wfile_get_byte_offsetf.lo: file_get_byte_offsetf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_get_byte_offsetf.o -c -D... $(srcdir)/file_get_byte_offsetf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_get_byte_offsetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_byte_offsetf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_get_byte_offsetf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_byte_offsetf.c
	@mv -f _swfile_get_byte_offsetf.o _wfile_get_byte_offsetf.lo
_wfile_read_sharedf.o: file_read_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_sharedf.o -c -D... $(srcdir)/file_read_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_sharedf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_sharedf.c
_wfile_read_sharedf.lo: file_read_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_sharedf.o -c -D... $(srcdir)/file_read_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_sharedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_sharedf.c
	@mv -f _swfile_read_sharedf.o _wfile_read_sharedf.lo
_wfile_write_sharedf.o: file_write_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_sharedf.o -c -D... $(srcdir)/file_write_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_sharedf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_sharedf.c
_wfile_write_sharedf.lo: file_write_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_sharedf.o -c -D... $(srcdir)/file_write_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_sharedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_sharedf.c
	@mv -f _swfile_write_sharedf.o _wfile_write_sharedf.lo
_wfile_iread_sharedf.o: file_iread_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_iread_sharedf.o -c -D... $(srcdir)/file_iread_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_iread_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iread_sharedf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_iread_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iread_sharedf.c
_wfile_iread_sharedf.lo: file_iread_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_iread_sharedf.o -c -D... $(srcdir)/file_iread_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_iread_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iread_sharedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_iread_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iread_sharedf.c
	@mv -f _swfile_iread_sharedf.o _wfile_iread_sharedf.lo
_wfile_iwrite_sharedf.o: file_iwrite_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_iwrite_sharedf.o -c -D... $(srcdir)/file_iwrite_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_iwrite_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwrite_sharedf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_iwrite_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwrite_sharedf.c
_wfile_iwrite_sharedf.lo: file_iwrite_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_iwrite_sharedf.o -c -D... $(srcdir)/file_iwrite_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_iwrite_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwrite_sharedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_iwrite_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_iwrite_sharedf.c
	@mv -f _swfile_iwrite_sharedf.o _wfile_iwrite_sharedf.lo
_wfile_read_orderedf.o: file_read_orderedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_orderedf.o -c -D... $(srcdir)/file_read_orderedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_orderedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_orderedf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_orderedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_orderedf.c
_wfile_read_orderedf.lo: file_read_orderedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_orderedf.o -c -D... $(srcdir)/file_read_orderedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_orderedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_orderedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_orderedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_orderedf.c
	@mv -f _swfile_read_orderedf.o _wfile_read_orderedf.lo
_wfile_write_orderedf.o: file_write_orderedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_orderedf.o -c -D... $(srcdir)/file_write_orderedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_orderedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_orderedf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_orderedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_orderedf.c
_wfile_write_orderedf.lo: file_write_orderedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_orderedf.o -c -D... $(srcdir)/file_write_orderedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_orderedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_orderedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_orderedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_orderedf.c
	@mv -f _swfile_write_orderedf.o _wfile_write_orderedf.lo
_wfile_seek_sharedf.o: file_seek_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_seek_sharedf.o -c -D... $(srcdir)/file_seek_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_seek_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_seek_sharedf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_seek_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_seek_sharedf.c
_wfile_seek_sharedf.lo: file_seek_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_seek_sharedf.o -c -D... $(srcdir)/file_seek_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_seek_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_seek_sharedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_seek_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_seek_sharedf.c
	@mv -f _swfile_seek_sharedf.o _wfile_seek_sharedf.lo
_wfile_get_position_sharedf.o: file_get_position_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_get_position_sharedf.o -c -D... $(srcdir)/file_get_position_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_get_position_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_position_sharedf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_get_position_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_position_sharedf.c
_wfile_get_position_sharedf.lo: file_get_position_sharedf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_get_position_sharedf.o -c -D... $(srcdir)/file_get_position_sharedf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_get_position_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_position_sharedf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_get_position_sharedf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_position_sharedf.c
	@mv -f _swfile_get_position_sharedf.o _wfile_get_position_sharedf.lo
_wfile_read_at_all_beginf.o: file_read_at_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_at_all_beginf.o -c -D... $(srcdir)/file_read_at_all_beginf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_at_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_all_beginf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_at_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_all_beginf.c
_wfile_read_at_all_beginf.lo: file_read_at_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_at_all_beginf.o -c -D... $(srcdir)/file_read_at_all_beginf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_at_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_all_beginf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_at_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_all_beginf.c
	@mv -f _swfile_read_at_all_beginf.o _wfile_read_at_all_beginf.lo
_wfile_read_at_all_endf.o: file_read_at_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_at_all_endf.o -c -D... $(srcdir)/file_read_at_all_endf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_at_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_all_endf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_at_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_all_endf.c
_wfile_read_at_all_endf.lo: file_read_at_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_at_all_endf.o -c -D... $(srcdir)/file_read_at_all_endf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_at_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_all_endf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_at_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_at_all_endf.c
	@mv -f _swfile_read_at_all_endf.o _wfile_read_at_all_endf.lo
_wfile_write_at_all_beginf.o: file_write_at_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_at_all_beginf.o -c -D... $(srcdir)/file_write_at_all_beginf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_at_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_all_beginf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_at_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_all_beginf.c
_wfile_write_at_all_beginf.lo: file_write_at_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_at_all_beginf.o -c -D... $(srcdir)/file_write_at_all_beginf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_at_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_all_beginf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_at_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_all_beginf.c
	@mv -f _swfile_write_at_all_beginf.o _wfile_write_at_all_beginf.lo
_wfile_write_at_all_endf.o: file_write_at_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_at_all_endf.o -c -D... $(srcdir)/file_write_at_all_endf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_at_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_all_endf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_at_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_all_endf.c
_wfile_write_at_all_endf.lo: file_write_at_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_at_all_endf.o -c -D... $(srcdir)/file_write_at_all_endf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_at_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_all_endf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_at_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_at_all_endf.c
	@mv -f _swfile_write_at_all_endf.o _wfile_write_at_all_endf.lo
_wfile_read_all_beginf.o: file_read_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_all_beginf.o -c -D... $(srcdir)/file_read_all_beginf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_all_beginf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_all_beginf.c
_wfile_read_all_beginf.lo: file_read_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_all_beginf.o -c -D... $(srcdir)/file_read_all_beginf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_all_beginf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_all_beginf.c
	@mv -f _swfile_read_all_beginf.o _wfile_read_all_beginf.lo
_wfile_read_all_endf.o: file_read_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_all_endf.o -c -D... $(srcdir)/file_read_all_endf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_all_endf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_all_endf.c
_wfile_read_all_endf.lo: file_read_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_all_endf.o -c -D... $(srcdir)/file_read_all_endf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_all_endf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_all_endf.c
	@mv -f _swfile_read_all_endf.o _wfile_read_all_endf.lo
_wfile_write_all_beginf.o: file_write_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_all_beginf.o -c -D... $(srcdir)/file_write_all_beginf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_all_beginf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_all_beginf.c
_wfile_write_all_beginf.lo: file_write_all_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_all_beginf.o -c -D... $(srcdir)/file_write_all_beginf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_all_beginf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_all_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_all_beginf.c
	@mv -f _swfile_write_all_beginf.o _wfile_write_all_beginf.lo
_wfile_write_all_endf.o: file_write_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_all_endf.o -c -D... $(srcdir)/file_write_all_endf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_all_endf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_all_endf.c
_wfile_write_all_endf.lo: file_write_all_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_all_endf.o -c -D... $(srcdir)/file_write_all_endf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_all_endf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_all_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_all_endf.c
	@mv -f _swfile_write_all_endf.o _wfile_write_all_endf.lo
_wfile_read_ordered_beginf.o: file_read_ordered_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_ordered_beginf.o -c -D... $(srcdir)/file_read_ordered_beginf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_ordered_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_ordered_beginf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_ordered_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_ordered_beginf.c
_wfile_read_ordered_beginf.lo: file_read_ordered_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_ordered_beginf.o -c -D... $(srcdir)/file_read_ordered_beginf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_ordered_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_ordered_beginf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_ordered_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_ordered_beginf.c
	@mv -f _swfile_read_ordered_beginf.o _wfile_read_ordered_beginf.lo
_wfile_read_ordered_endf.o: file_read_ordered_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_read_ordered_endf.o -c -D... $(srcdir)/file_read_ordered_endf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_read_ordered_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_ordered_endf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_read_ordered_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_ordered_endf.c
_wfile_read_ordered_endf.lo: file_read_ordered_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_read_ordered_endf.o -c -D... $(srcdir)/file_read_ordered_endf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_read_ordered_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_ordered_endf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_read_ordered_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_read_ordered_endf.c
	@mv -f _swfile_read_ordered_endf.o _wfile_read_ordered_endf.lo
_wfile_write_ordered_beginf.o: file_write_ordered_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_ordered_beginf.o -c -D... $(srcdir)/file_write_ordered_beginf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_ordered_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_ordered_beginf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_ordered_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_ordered_beginf.c
_wfile_write_ordered_beginf.lo: file_write_ordered_beginf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_ordered_beginf.o -c -D... $(srcdir)/file_write_ordered_beginf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_ordered_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_ordered_beginf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_ordered_beginf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_ordered_beginf.c
	@mv -f _swfile_write_ordered_beginf.o _wfile_write_ordered_beginf.lo
_wfile_write_ordered_endf.o: file_write_ordered_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_write_ordered_endf.o -c -D... $(srcdir)/file_write_ordered_endf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_write_ordered_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_ordered_endf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_write_ordered_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_ordered_endf.c
_wfile_write_ordered_endf.lo: file_write_ordered_endf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_write_ordered_endf.o -c -D... $(srcdir)/file_write_ordered_endf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_write_ordered_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_ordered_endf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_write_ordered_endf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_write_ordered_endf.c
	@mv -f _swfile_write_ordered_endf.o _wfile_write_ordered_endf.lo
_wfile_get_type_extentf.o: file_get_type_extentf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_get_type_extentf.o -c -D... $(srcdir)/file_get_type_extentf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_get_type_extentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_type_extentf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_get_type_extentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_type_extentf.c
_wfile_get_type_extentf.lo: file_get_type_extentf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_get_type_extentf.o -c -D... $(srcdir)/file_get_type_extentf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_get_type_extentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_type_extentf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_get_type_extentf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_type_extentf.c
	@mv -f _swfile_get_type_extentf.o _wfile_get_type_extentf.lo
_wregister_datarepf.o: register_datarepf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wregister_datarepf.o -c -D... $(srcdir)/register_datarepf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wregister_datarepf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/register_datarepf.c" ; \
	fi
	@$(C_COMPILE) -o _wregister_datarepf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/register_datarepf.c
_wregister_datarepf.lo: register_datarepf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swregister_datarepf.o -c -D... $(srcdir)/register_datarepf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swregister_datarepf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/register_datarepf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swregister_datarepf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/register_datarepf.c
	@mv -f _swregister_datarepf.o _wregister_datarepf.lo
_wfile_set_atomicityf.o: file_set_atomicityf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_set_atomicityf.o -c -D... $(srcdir)/file_set_atomicityf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_set_atomicityf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_atomicityf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_set_atomicityf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_atomicityf.c
_wfile_set_atomicityf.lo: file_set_atomicityf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_set_atomicityf.o -c -D... $(srcdir)/file_set_atomicityf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_set_atomicityf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_atomicityf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_set_atomicityf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_set_atomicityf.c
	@mv -f _swfile_set_atomicityf.o _wfile_set_atomicityf.lo
_wfile_get_atomicityf.o: file_get_atomicityf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_get_atomicityf.o -c -D... $(srcdir)/file_get_atomicityf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_get_atomicityf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_atomicityf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_get_atomicityf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_atomicityf.c
_wfile_get_atomicityf.lo: file_get_atomicityf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_get_atomicityf.o -c -D... $(srcdir)/file_get_atomicityf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_get_atomicityf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_atomicityf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_get_atomicityf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_get_atomicityf.c
	@mv -f _swfile_get_atomicityf.o _wfile_get_atomicityf.lo
_wfile_syncf.o: file_syncf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wfile_syncf.o -c -D... $(srcdir)/file_syncf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wfile_syncf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_syncf.c" ; \
	fi
	@$(C_COMPILE) -o _wfile_syncf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_syncf.c
_wfile_syncf.lo: file_syncf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swfile_syncf.o -c -D... $(srcdir)/file_syncf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swfile_syncf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_syncf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swfile_syncf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/file_syncf.c
	@mv -f _swfile_syncf.o _wfile_syncf.lo
_winitf.o: initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winitf.o -c -D... $(srcdir)/initf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initf.c" ; \
	fi
	@$(C_COMPILE) -o _winitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initf.c
_winitf.lo: initf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinitf.o -c -D... $(srcdir)/initf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinitf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initf.c
	@mv -f _swinitf.o _winitf.lo
_winitthreadf.o: initthreadf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _winitthreadf.o -c -D... $(srcdir)/initthreadf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _winitthreadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initthreadf.c" ; \
	fi
	@$(C_COMPILE) -o _winitthreadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initthreadf.c
_winitthreadf.lo: initthreadf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swinitthreadf.o -c -D... $(srcdir)/initthreadf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swinitthreadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initthreadf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swinitthreadf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/initthreadf.c
	@mv -f _swinitthreadf.o _winitthreadf.lo
_wpcontrolf.o: pcontrolf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wpcontrolf.o -c -D... $(srcdir)/pcontrolf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wpcontrolf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pcontrolf.c" ; \
	fi
	@$(C_COMPILE) -o _wpcontrolf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pcontrolf.c
_wpcontrolf.lo: pcontrolf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swpcontrolf.o -c -D... $(srcdir)/pcontrolf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swpcontrolf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pcontrolf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swpcontrolf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/pcontrolf.c
	@mv -f _swpcontrolf.o _wpcontrolf.lo
_waddressf.o: addressf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _waddressf.o -c -D... $(srcdir)/addressf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _waddressf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/addressf.c" ; \
	fi
	@$(C_COMPILE) -o _waddressf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/addressf.c
_waddressf.lo: addressf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swaddressf.o -c -D... $(srcdir)/addressf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swaddressf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/addressf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swaddressf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/addressf.c
	@mv -f _swaddressf.o _waddressf.lo
_wgetaddressf.o: getaddressf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wgetaddressf.o -c -D... $(srcdir)/getaddressf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wgetaddressf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getaddressf.c" ; \
	fi
	@$(C_COMPILE) -o _wgetaddressf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getaddressf.c
_wgetaddressf.lo: getaddressf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swgetaddressf.o -c -D... $(srcdir)/getaddressf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swgetaddressf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getaddressf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swgetaddressf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/getaddressf.c
	@mv -f _swgetaddressf.o _wgetaddressf.lo
_wwtimef.o: wtimef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwtimef.o -c -D... $(srcdir)/wtimef.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwtimef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wtimef.c" ; \
	fi
	@$(C_COMPILE) -o _wwtimef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wtimef.c
_wwtimef.lo: wtimef.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwtimef.o -c -D... $(srcdir)/wtimef.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwtimef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wtimef.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwtimef.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wtimef.c
	@mv -f _swwtimef.o _wwtimef.lo
_wwtickf.o: wtickf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wwtickf.o -c -D... $(srcdir)/wtickf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wwtickf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wtickf.c" ; \
	fi
	@$(C_COMPILE) -o _wwtickf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wtickf.c
_wwtickf.lo: wtickf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swwtickf.o -c -D... $(srcdir)/wtickf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swwtickf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wtickf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swwtickf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/wtickf.c
	@mv -f _swwtickf.o _wwtickf.lo
_wkeyval_createf.o: keyval_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wkeyval_createf.o -c -D... $(srcdir)/keyval_createf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wkeyval_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/keyval_createf.c" ; \
	fi
	@$(C_COMPILE) -o _wkeyval_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/keyval_createf.c
_wkeyval_createf.lo: keyval_createf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swkeyval_createf.o -c -D... $(srcdir)/keyval_createf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swkeyval_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/keyval_createf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swkeyval_createf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/keyval_createf.c
	@mv -f _swkeyval_createf.o _wkeyval_createf.lo
_wdup_fnf.o: dup_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wdup_fnf.o -c -D... $(srcdir)/dup_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wdup_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wdup_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_fnf.c
_wdup_fnf.lo: dup_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swdup_fnf.o -c -D... $(srcdir)/dup_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swdup_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swdup_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_fnf.c
	@mv -f _swdup_fnf.o _wdup_fnf.lo
_wnull_del_fnf.o: null_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wnull_del_fnf.o -c -D... $(srcdir)/null_del_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wnull_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_del_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wnull_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_del_fnf.c
_wnull_del_fnf.lo: null_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swnull_del_fnf.o -c -D... $(srcdir)/null_del_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swnull_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_del_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swnull_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_del_fnf.c
	@mv -f _swnull_del_fnf.o _wnull_del_fnf.lo
_wnull_copy_fnf.o: null_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wnull_copy_fnf.o -c -D... $(srcdir)/null_copy_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wnull_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_copy_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wnull_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_copy_fnf.c
_wnull_copy_fnf.lo: null_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swnull_copy_fnf.o -c -D... $(srcdir)/null_copy_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swnull_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_copy_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swnull_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_copy_fnf.c
	@mv -f _swnull_copy_fnf.o _wnull_copy_fnf.lo
_wdup_comm_fnf.o: dup_comm_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wdup_comm_fnf.o -c -D... $(srcdir)/dup_comm_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wdup_comm_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_comm_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wdup_comm_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_comm_fnf.c
_wdup_comm_fnf.lo: dup_comm_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swdup_comm_fnf.o -c -D... $(srcdir)/dup_comm_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swdup_comm_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_comm_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swdup_comm_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_comm_fnf.c
	@mv -f _swdup_comm_fnf.o _wdup_comm_fnf.lo
_wnull_comm_del_fnf.o: null_comm_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wnull_comm_del_fnf.o -c -D... $(srcdir)/null_comm_del_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wnull_comm_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_comm_del_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wnull_comm_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_comm_del_fnf.c
_wnull_comm_del_fnf.lo: null_comm_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swnull_comm_del_fnf.o -c -D... $(srcdir)/null_comm_del_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swnull_comm_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_comm_del_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swnull_comm_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_comm_del_fnf.c
	@mv -f _swnull_comm_del_fnf.o _wnull_comm_del_fnf.lo
_wnull_comm_copy_fnf.o: null_comm_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wnull_comm_copy_fnf.o -c -D... $(srcdir)/null_comm_copy_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wnull_comm_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_comm_copy_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wnull_comm_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_comm_copy_fnf.c
_wnull_comm_copy_fnf.lo: null_comm_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swnull_comm_copy_fnf.o -c -D... $(srcdir)/null_comm_copy_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swnull_comm_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_comm_copy_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swnull_comm_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_comm_copy_fnf.c
	@mv -f _swnull_comm_copy_fnf.o _wnull_comm_copy_fnf.lo
_wdup_win_fnf.o: dup_win_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wdup_win_fnf.o -c -D... $(srcdir)/dup_win_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wdup_win_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_win_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wdup_win_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_win_fnf.c
_wdup_win_fnf.lo: dup_win_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swdup_win_fnf.o -c -D... $(srcdir)/dup_win_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swdup_win_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_win_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swdup_win_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_win_fnf.c
	@mv -f _swdup_win_fnf.o _wdup_win_fnf.lo
_wnull_win_del_fnf.o: null_win_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wnull_win_del_fnf.o -c -D... $(srcdir)/null_win_del_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wnull_win_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_win_del_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wnull_win_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_win_del_fnf.c
_wnull_win_del_fnf.lo: null_win_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swnull_win_del_fnf.o -c -D... $(srcdir)/null_win_del_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swnull_win_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_win_del_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swnull_win_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_win_del_fnf.c
	@mv -f _swnull_win_del_fnf.o _wnull_win_del_fnf.lo
_wnull_win_copy_fnf.o: null_win_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wnull_win_copy_fnf.o -c -D... $(srcdir)/null_win_copy_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wnull_win_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_win_copy_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wnull_win_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_win_copy_fnf.c
_wnull_win_copy_fnf.lo: null_win_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swnull_win_copy_fnf.o -c -D... $(srcdir)/null_win_copy_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swnull_win_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_win_copy_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swnull_win_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_win_copy_fnf.c
	@mv -f _swnull_win_copy_fnf.o _wnull_win_copy_fnf.lo
_wdup_type_fnf.o: dup_type_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wdup_type_fnf.o -c -D... $(srcdir)/dup_type_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wdup_type_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_type_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wdup_type_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_type_fnf.c
_wdup_type_fnf.lo: dup_type_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swdup_type_fnf.o -c -D... $(srcdir)/dup_type_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swdup_type_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_type_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swdup_type_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/dup_type_fnf.c
	@mv -f _swdup_type_fnf.o _wdup_type_fnf.lo
_wnull_type_del_fnf.o: null_type_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wnull_type_del_fnf.o -c -D... $(srcdir)/null_type_del_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wnull_type_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_type_del_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wnull_type_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_type_del_fnf.c
_wnull_type_del_fnf.lo: null_type_del_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swnull_type_del_fnf.o -c -D... $(srcdir)/null_type_del_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swnull_type_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_type_del_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swnull_type_del_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_type_del_fnf.c
	@mv -f _swnull_type_del_fnf.o _wnull_type_del_fnf.lo
_wnull_type_copy_fnf.o: null_type_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wnull_type_copy_fnf.o -c -D... $(srcdir)/null_type_copy_fnf.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wnull_type_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_type_copy_fnf.c" ; \
	fi
	@$(C_COMPILE) -o _wnull_type_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_type_copy_fnf.c
_wnull_type_copy_fnf.lo: null_type_copy_fnf.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swnull_type_copy_fnf.o -c -D... $(srcdir)/null_type_copy_fnf.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swnull_type_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_type_copy_fnf.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swnull_type_copy_fnf.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/null_type_copy_fnf.c
	@mv -f _swnull_type_copy_fnf.o _wnull_type_copy_fnf.lo
_wstatusf2c.o: statusf2c.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wstatusf2c.o -c -D... $(srcdir)/statusf2c.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wstatusf2c.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statusf2c.c" ; \
	fi
	@$(C_COMPILE) -o _wstatusf2c.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statusf2c.c
_wstatusf2c.lo: statusf2c.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swstatusf2c.o -c -D... $(srcdir)/statusf2c.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swstatusf2c.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statusf2c.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swstatusf2c.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statusf2c.c
	@mv -f _swstatusf2c.o _wstatusf2c.lo
_wstatusc2f.o: statusc2f.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _wstatusc2f.o -c -D... $(srcdir)/statusc2f.c" ; \
	else \
	  echo "$(C_COMPILE) -o _wstatusc2f.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statusc2f.c" ; \
	fi
	@$(C_COMPILE) -o _wstatusc2f.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statusc2f.c
_wstatusc2f.lo: statusc2f.c
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC             -o _swstatusc2f.o -c -D... $(srcdir)/statusc2f.c" ; \
	else \
	  echo "$(C_COMPILE_SHL) -o _swstatusc2f.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statusc2f.c" ; \
	fi
	@$(C_COMPILE_SHL) -o _swstatusc2f.o -c -DMPICH_MPI_FROM_PMPI -DUSE_ONLY_MPI_NAMES $(srcdir)/statusc2f.c
	@mv -f _swstatusc2f.o _wstatusc2f.lo

.POSIX:

FORCE_TARGET:

