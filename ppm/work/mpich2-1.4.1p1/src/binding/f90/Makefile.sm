# DO NOT EDIT
# This file created by buildiface 
smvar_do_dependencies = ignore
smvar_makefile_configdir = ../../..
MOD              = @FCMODEXT@
MPIMOD           = @MPIMODNAME@
MPICONSTMOD      = @MPICONSTMODNAME@
MPISIZEOFMOD     = @MPISIZEOFMODNAME@
MPIBASEMOD       = @MPIBASEMODNAME@
FCINCFLAG        = @FCINCFLAG@
FCEXT            = @FCEXT@
FC_COMPILE_MODS  = $(FC_COMPILE)
# We need to tell some compilers (e.g., Solaris f90) to look in the current 
# directory when the source file is not in the working directory (i.e.,
# in a VPATH build)
FCINCLUDES = @FCINCFLAG@.

mpi_sources = create_f90_int.c create_f90_real.c \
	create_f90_complex.c \
        typef90cmplxf.c typef90realf.c typef90intf.c
lib${MPILIBNAME}_a_SOURCES = ${mpi_sources} create_f90_util.c 
profilelib_${MPILIBNAME}_SOURCES = ${mpi_sources}
profilelib_${MPILIBNAME} = p${MPILIBNAME}
INCLUDES = -I../../include -I${master_top_srcdir}/src/include

lib${MPILIBNAME}f90_a_SOURCES = mpi.o mpi_constants.o mpi_sizeofs.o mpi_base.o
all-preamble: $(MPIMOD).$(MOD)

# The copy line in this step makes the Fortran90 modules available to
# the mpif90 script before an install takes place
# The if handles the Intel Fortran90 compiler, which has an unusual interface
# (The mpimod.pcl file should contain only a local mpimod.pc name; if
# it contains a file name in another directory and that file does not 
# exist, the compiler may refuse to compile the file)
#
# FIXME: We may want to edit the mpif.h to convert Fortran77-specific
# items (such as an integer*8 used for file offsets) into the 
# corresponding Fortran 90 KIND type, to accomodate compilers that
# reject non-standard features such as integer*8 (such as the Intel
# Fortran compiler with -std95).
# We need the MPI constants in a separate module for some of the
# interface definitions (the ones that need MPI_ADDRESS_KIND or
# MPI_OFFSET_KIND)

$(MPIMOD).$(MOD): $(MPICONSTMOD).$(MOD) $(MPISIZEOFMOD).$(MOD) \
		  $(MPIBASEMOD).$(MOD) $(srcdir)/mpi.f90 mpifnoext.h
	@if [ -n "@FC_WORK_FILES_ARG@" ] ; then \
	    rm -f mpimod.pc mpimod.pcl ; \
	    echo "mpimod.pc" > mpimod.pcl ; \
	    echo $(FC_COMPILE_MODS) @FC_WORK_FILES_ARG@ -c $(srcdir)/mpi.f90 ; \
	    $(FC_COMPILE_MODS) @FC_WORK_FILES_ARG@ -c $(srcdir)/mpi.f90 ; \
	    cp mpimod.pc ../../../src/include/mpimod.pc ; \
	    cp mpimod.pcl ../../../src/include/mpimod.pcl ; \
	else \
	    if [ "$(FCEXT)" != "f90" ] ; then \
	        ln -f -s $(srcdir)/mpi.f90 $(srcdir)/mpi.$(FCEXT) ; \
	    fi ; \
	    echo $(FC_COMPILE_MODS) -c $(srcdir)/mpi.$(FCEXT) ; \
	    $(FC_COMPILE_MODS) -c $(srcdir)/mpi.$(FCEXT) ; \
	    if [ "$(FCEXT)" != "f90" ] ; then \
	        rm -f $(srcdir)/mpi.$(FCEXT) ; \
	    fi ; \
	fi
$(MPICONSTMOD).$(MOD): $(srcdir)/mpi_constants.f90 mpifnoext.h
	@if [ -n "@FC_WORK_FILES_ARG@" ] ; then \
	    rm -f mpimod.pc mpimod.pcl ; \
	    echo "mpimod.pc" > mpimod.pcl ; \
	    echo $(FC_COMPILE_MODS) @FC_WORK_FILES_ARG@ -c $(srcdir)/mpi_constants.f90 ; \
	    $(FC_COMPILE_MODS) @FC_WORK_FILES_ARG@ -c $(srcdir)/mpi_constants.f90 ; \
	    cp mpimod.pc ../../../src/include/mpimod.pc ; \
	    cp mpimod.pcl ../../../src/include/mpimod.pcl ; \
	else \
	    if [ "$(FCEXT)" != "f90" ] ; then \
	        ln -f -s $(srcdir)/mpi_constants.f90 $(srcdir)/mpi_constants.$(FCEXT) ; \
	    fi ; \
	    echo $(FC_COMPILE_MODS) -c $(srcdir)/mpi_constants.$(FCEXT) ; \
	    $(FC_COMPILE_MODS) -c $(srcdir)/mpi_constants.$(FCEXT) ; \
	    if [ "$(FCEXT)" != "f90" ] ; then \
	        rm -f $(srcdir)/mpi_constants.$(FCEXT) ; \
	    fi ; \
	fi
$(MPISIZEOFMOD).$(MOD): mpi_sizeofs.f90 mpifnoext.h
	@if [ -n "@FC_WORK_FILES_ARG@" ] ; then \
	    rm -f mpimod.pc mpimod.pcl ; \
	    echo "mpimod.pc" > mpimod.pcl ; \
	    echo $(FC_COMPILE_MODS) @FC_WORK_FILES_ARG@ -c mpi_sizeofs.f90 ; \
	    $(FC_COMPILE_MODS) @FC_WORK_FILES_ARG@ -c mpi_sizeofs.f90 ; \
	    cp mpimod.pc ../../../src/include/mpimod.pc ; \
	    cp mpimod.pcl ../../../src/include/mpimod.pcl ; \
	else \
	    if [ "$(FCEXT)" != "f90" ] ; then \
	        ln -f -s mpi_sizeofs.f90 mpi_sizeofs.$(FCEXT) ; \
	    fi ; \
	    echo $(FC_COMPILE_MODS) -c mpi_sizeofs.$(FCEXT) ; \
	    $(FC_COMPILE_MODS) -c mpi_sizeofs.$(FCEXT) ; \
	    if [ "$(FCEXT)" != "f90" ] ; then \
	        rm -f mpi_sizeofs.$(FCEXT) ; \
	    fi ; \
	fi
$(MPIBASEMOD).$(MOD): mpi_base.f90
	@if [ -n "@FC_WORK_FILES_ARG@" ] ; then \
	    rm -f mpimod.pc mpimod.pcl ; \
	    echo "mpimod.pc" > mpimod.pcl ; \
	    echo $(FC_COMPILE_MODS) @FC_WORK_FILES_ARG@ -c mpi_base.f90 ; \
	    $(FC_COMPILE_MODS) @FC_WORK_FILES_ARG@ -c mpi_base.f90 ; \
	    cp mpimod.pc ../../../src/include/mpimod.pc ; \
	    cp mpimod.pcl ../../../src/include/mpimod.pcl ; \
	else \
	    if [ "$(FCEXT)" != "f90" ] ; then \
	        ln -f -s mpi_base.f90 mpi_base.$(FCEXT) ; \
	    fi ; \
	    echo $(FC_COMPILE_MODS) -c mpi_base.$(FCEXT) ; \
	    $(FC_COMPILE_MODS) -c mpi_base.$(FCEXT) ; \
	    if [ "$(FCEXT)" != "f90" ] ; then \
	        rm -f mpi_base.$(FCEXT) ; \
	    fi ; \
	fi

# We need a free-format version of mpif.h with no external commands,
# including no wtime/wtick (removing MPI_WTICK also removes MPI_WTIME, 
# but leave MPI_WTIME_IS_GLOBAL).
# Also allow REAL*8 or DOUBLE PRECISION for the MPI_WTIME/MPI_WTICK 
# declarations
mpifnoext.h: ../f77/mpif.h
	rm -f mpifnoext.h
	sed -e 's/^C/\!/g' -e '/EXTERNAL/d' \
                -e '/REAL\*8/d' \
		-e '/DOUBLE PRECISION/d' \
		-e '/MPI_WTICK/d' ../f77/mpif.h > mpifnoext.h

# To ensure that f90 can be used before a make-install step, we copy
# the library to the build directory (just like we do with the module files)
all-postamble:
	if [ -s lib${MPILIBNAME}f90.a ] ; then \
	   cp -p lib${MPILIBNAME}f90.a ../../../lib ; fi
	if [ -s lib${MPILIBNAME}f90.la ] ; then \
	   cp -p lib${MPILIBNAME}f90.la ../../../lib ; fi
clean-local:
	rm -f *.$(MOD)
	rm -f mpimod.pcl mpimod.pc
	rm -f lib${MPILIBNAME}f90.a
maint-clean:
	rm -f ${mpi_sources} fproto.h
install_INCLUDE = $(MPIMOD).$(MOD) $(MPICONSTMOD).$(MOD) $(MPIBASEMOD).$(MOD) $(MPISIZEOFMOD).$(MOD)
optinstall_INCLUDE = mpimod.pcl mpimod.pc
install_LIB     = lib${MPILIBNAME}f90.a
# Documentation sources
doc_sources =
DOCDESTDIRS = html:www/www1,man:man/man1,latex:doc/refman
doc_HTML_SOURCES  = ${doc_sources}
doc_MAN_SOURCES   = ${doc_sources}
doc_LATEX_SOURCES = ${doc_sources}
distclean-local:
	rm -f lib${MPILIBNAME}f90.a
	rm -f ../../../bin/mpif90
	rm -f ../../../src/include/$(MPIMOD).$(MOD)
	rm -f ../../../src/include/$(MPIBASEMOD).$(MOD)
	rm -f ../../../src/include/$(MPICONSTMOD).$(MOD)
	rm -f ../../../src/include/$(MPISIZEOFMOD).$(MOD)
